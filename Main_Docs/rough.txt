Bank> db.customers.insertOne({"Cust_no":"C0003","Name":"Soumya Jha","Phone_no":9885623344,"City":"Mumbai","Account":[{"Account_no":"A0001","Type":"SB","Balance":20000,"Branch_code":"B003","Branch_name":"Juhu Branch","Branch_city":"Mumbai"}],"Loan":{"Loan_no":"","Amonst_Amount":null}]}})e":"","Branch_name":"","Branch_city":"","Installment":[{"Inst_no":null,"I
{
  acknowledged: true,
  insertedId: ObjectId("65167e64dcf632fec1bd24af")
}
Bank> db.customers.insertOne({"Cust_no":"C0003","Name":"Soumya Jha","Phone_no":9885623344,"City":"Mumbai","Account":[{"Account_no":"A0001","Type":"SB","Balance":20000,"Branch_code":"B003","Branch_name":"Juhu Branch","Branch_city":"Mumbai"}],"Loan":{"Loan_no":"","Amount":null,"Branch_code":"","Branch_name":"","Branch_city":"","Installment":[{"Inst_no":null,"Inst_Amount":null}]}})
{
  acknowledged: true,
Bank> db.Customers.insertOne({"Cust_no":"C0003","Name":"Soumya Jha","Phone_no":9885623344,"City":"Mumbai","Account":[{"Account_no":"A0001","Type":"SB","Balance":20000,"Branch_code":"B003","Branch_name":"Juhu Branch","Branch_city":"Mumbai"}],"Loan":{"Loan_no":"","Amonst_Amount":null}]}})e":"","Branch_name":"","Branch_city":"","Installment":[{"Inst_no":null,"I
Uncaught:
MongoServerError: Document failed validation
Additional information: {
  failingDocumentId: ObjectId("65167eb4dcf632fec1bd24b1"),
  details: {
    operatorName: '$jsonSchema',
    schemaRulesNotSatisfied: [
      {
        operatorName: 'properties',
        propertiesNotSatisfied: [
          {
            propertyName: 'Loan',
            description: "Customer's Loan",
            details: [
              {
                operatorName: 'properties',
                propertiesNotSatisfied: [
                  {
                    propertyName: 'Loan_no',
                    description: "Must start with 'L' and have a length of 5 characters",
                    details: [
                      {
                        operatorName: 'pattern',
                        specifiedAs: { pattern: '^L.{4}$' },
                        reason: 'regular expression did not match',
                        consideredValue: ''
                      }
                    ]
                  },
                  {
                    propertyName: 'Amount',
                    description: 'Loan Amount',
                    details: [
                      {
                        operatorName: 'bsonType',
                        specifiedAs: { bsonType: 'number' },
                        reason: 'type did not match',
                        consideredValue: null,
                        consideredType: 'null'
                      }
                    ]
                  },
                  {
                    propertyName: 'Branch_name',
                    description: 'Should not be null',
                    details: [
                      {
                        operatorName: 'minLength',
                        specifiedAs: { minLength: 1 },
                        reason: 'specified string length was not satisfied',
                        consideredValue: ''
                      }
                    ]
                  },
                  {
                    propertyName: 'Branch_city',
                    description: 'Must be any metro city of India- Delhi, Mumbai, Kolkata, Chennai',
                    details: [
                      {
                        operatorName: 'enum',
                        specifiedAs: {
                          enum: [ 'Delhi', 'Mumbai', 'Kolkata', 'Chennai' ]
                        },
                        reason: 'value was not found in enum',
                        consideredValue: ''
                      }
                    ]
                  },
                  {
                    propertyName: 'Installment',
                    description: 'Installment Details',
                    details: [
                      {
                        operatorName: 'items',
                        reason: 'At least one item did not match the sub-schema',
                        itemIndex: 0,
                        details: [
                          {
                            operatorName: 'properties',
                            propertiesNotSatisfied: [
                              {
                                propertyName: 'Inst_no',
                                description: 'Installment number',
                                details: [
                                  {
                                    operatorName: 'bsonType',
                                    specifiedAs: { bsonType: 'number' },
                                    reason: 'type did not match',
                                    consideredValue: null,
                                    consideredType: 'null'
                                  }
                                ]
                              },
                              {
                                propertyName: 'Inst_Amount',
                                description: 'Installment Amount',
                                details: [
                                  {
                                    operatorName: 'bsonType',
                                    specifiedAs: { bsonType: 'number' },
                                    reason: 'type did not match',
                                    consideredValue: null,
                                    consideredType: 'null'
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
}
Bank> db.CUSTOMERS.find({"Account.Account_no":"A0004"},{"Name":1,"Phone_no":1,"Cust_no":1,"_id":0})
[ { Cust_no: 'C0006', Name: 'Swaroop Ray', Phone_no: 9437855466 } ]
Bank> db.CUSTOMERS.find({"Account.Account_no":"A0004"},{"Name":1,"Phone_no":1,"Cust_no":1,"_id":0},{"order":true})
[ { Cust_no: 'C0006', Name: 'Swaroop Ray', Phone_no: 9437855466 } ]
Bank> db.CUSTOMERS.find({"Account.Account_no":"A0004"},{"Name":1,"Phone_no":1,"Cust_no":1,"_id":0},{"order":false})
[ { Cust_no: 'C0006', Name: 'Swaroop Ray', Phone_no: 9437855466 } ]
Bank> db.CUSTOMERS.find({"Name":"Yash Saraf"},{"Loan.Amount":1,"Loan.Branch_code":1,"_id":0})
[ { Loan: { Amount: 3000000, Branch_code: 'B006' } } ]
Bank> db.CUSTOMERS.find({"Loan_no":""},{"Name":1,"_id":0})

Bank> db.CUSTOMERS.find({"Loan.Loan_no":""},{"Name":1,"_id":0})
[
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Swaroop Ray' },
  { Name: 'Surya Narayan' }
]
Bank> db.CUSTOMERS.find({"Cust_no":"C0010"},{"Account.Account_no":1,"Account.Balance":1,"_id":0})
Bank> db.CUSTOMERS.find({"Name":"Abhijit Mishra"},{"Account.Branch_name":1,"Account.Branch_city":1,"_id":0})
[
  {
    Account: [
      { Branch_name: 'Juhu Branch', Branch_city: 'Mumbai' },
      { Branch_name: 'Chandnichowk Branch', Branch_city: 'Delhi' }
    ]
  }
]
Bank> db.createCollection("ACCOUNT_TYPE")
{ ok: 1 }
Bank> db.ACCOUNT_TYPE.updateMany({},{"$set":{"Account_no":null,"Type":null}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> db.ACCOUNT_TYPE.updateMany({"_id":1},{"$set":{"Account_no":null,"Type":null}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> db.ACCOUNT_TYPE.updateOne({"_id":1},{"$set":{"Account_no":null,"Type":null}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> db.ACCOUNT_TYPE.updateOne({},{"$set":{"Account_no":null,"Type":null}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> db.ACCOUNT_TYPE.updateOne({},{"$set":{"Account_no":null}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> db.ACCOUNT_TYPE.insertMany({"Account_no":null})
MongoInvalidArgumentError: Argument "docs" must be an array of documents
Bank> db.ACCOUNT_TYPE.insertMany({"Account_no":1})
MongoInvalidArgumentError: Argument "docs" must be an array of documents
Bank> db.ACCOUNT_TYPE.insertOne({"Account_no":1})
{
  acknowledged: true,
  insertedId: ObjectId("651686eddcf632fec1bd24b2")
}
Bank> db.ACCOUNT_TYPE.updateOne({},{"$set":{"Account_no":null}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
Bank> db.ACCOUNT_TYPE.updateOne({},{"$set":{"Type":null}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
Bank> db.ACCOUNT_TYPE.updateMany({"Account_no":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{}
Uncaught:
SyntaxError: Unterminated string constant. (1:69)

> 1 | db.ACCOUNT_TYPE.updateMany({"Account_no":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{}
    |                                                                      ^
  2 |

50000}},{"Account.Account_no":1,"_id":0})"}})":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{'$lt':
Uncaught:
SyntaxError: Unexpected token, expected "," (1:124)

> 1 | db.ACCOUNT_TYPE.updateMany({"Account_no":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{'$lt':50000}},{"Account.Account_no":1,"_id":0})"}})
    |                                                                                                                             ^
  2 |

Bank> db.ACCOUNT_TYPE.updateMany({"Account_no":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{'$lt':50000}},{"Account.Account_no":1,"_id":0})"}})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:124)

> 1 | db.ACCOUNT_TYPE.updateMany({"Account_no":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{'$lt':50000}},{"Account.Account_no":1,"_id":0})"}})
    |                                                                                                                             ^
  2 |

Bank> db.ACCOUNT_TYPE.updateMany({"Account_no":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{'$lt':50000}},{"Account.Account_no":1,"_id":0})"}})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:124)

> 1 | db.ACCOUNT_TYPE.updateMany({"Account_no":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{'$lt':50000}},{"Account.Account_no":1,"_id":0})"}})
    |                                                                                                                             ^
  2 |

Bank> db.ACCOUNT_TYPE.updateMany({"Account_no":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{'$lt':50000}},{"Accou"_id":0})"}})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:124)

> 1 | db.ACCOUNT_TYPE.updateMany({"Account_no":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{'$lt':50000}},{"Accou"_id":0})"}})
    |                                                                                                                             ^
  2 |

50000}},{'Account.Account_no':1,'_id':0})"}})":null},{"$set":{"Account_no":"db.CUSTOMERS.find({'Account.Balance':{'$lt':
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
0000}},{'Account.Account_no':1,'_id':0})}})no":null},{"$set":{"Account_no":db.CUSTOMERS.find({'Account.Balance':{'$lt':5
BSONError: Cannot convert circular structure to BSON
Bank>



test> use Bank
switched to db Bank
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Balance":{"$lt":50000}}},{"$project":{"_id":0,"Account_no":"$Account.Account_no","Type":"$Account.Type"}},{"$out":"ACCOUNT_TYPE"}])

Bank> db.ACOUNT_TYPE.drop()
false
Bank> db.ACCOUNT_TYPE.drop()
true
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Balance":{"$lt":50000}}},{"$project":{"_id":0,"Account_no":"$Account.Account_no","Type":"$Account.Type"}},{"$out":"ACCOUNT_TYPE"}])

Bank> db.ACCOUNT_TYPE.drop()
true
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Balance":{"$lt":50000}}},{"$project":{"_id":0,"Account_no":"$Account.Account_no","Type":"$Account.Type"}},{"$out":"ACCOUNT_TYPE"}])

Bank> db.ACCOUNT_TYPE.drop()
true
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Balance":{"$lt":50000}}},{"$group":{"_id":{"Account_no":"$Account.Account_no","Type":"$Account.Type"}}},{"$project":{"_id":0,"Account_no":"$_id.Account_no","Type":"$_id.Type"}},{"$out":"ACCOUNT_TYPE"}])

Please enter a MongoDB connection string (Default: mongodb://locBank> db.ACCOUNT_TYPE.aggregate([{"$lookup":{"from"}}])
Uncaught:
SyntaxError: Unexpected token (1:45)

> 1 | db.ACCOUNT_TYPE.aggregate([{"$lookup":{"from"}}])
    |                                              ^
  2 |

Bank> db.ACCOUNT_TYPE.aggregate([{"$lookup":{"from":"CUSTOMERS","localField":"Account_no","foreignField":"Account.Account_no","as":"customer"}},{"$unwind":"$customer"},{"$match":{"customer.Cust_no":"C0007"}},{"$set":{"Type":"FD"}}])
[
  {
    _id: ObjectId("6516edae76b70830bea92aca"),
    Account_no: 'A0009',
    Type: 'FD',
    customer: {
      _id: ObjectId("65162b878ce4a541606305b7"),
      Cust_no: 'C0007',
      Name: 'Surya Narayan',
      Phone_no: 9937955215,
      City: 'Gurgaon',
      Account: [
        {
          Account_no: 'A0009',
          Type: 'SB',
          Balance: 18750,
          Branch_code: 'B003',
          Branch_name: 'Juhu Branch',
          Branch_city: 'Mumbai'
        }
      ],
      Loan: {
        Loan_no: '',
        Amount: null,
        Branch_code: '',
        Branch_name: '',
        Branch_city: '',
        Installment: [ { Inst_no: null, Inst_Amount: null } ]
      }
    }
  }
]
Bank> db.ACCOUNT_TYPE.updateMany([{"$lookup":{"from":"CUSTOMERS","localField":"Account_no","foreignField":"Account.Account_no","as":"customer"}},{"$unwind":"$customer"},{"$match":{"customer.Cust_no":"C0007"}},{"$set":{"Type":"FD"}}])
MongoInvalidArgumentError: Update document requires atomic operators
Bank> db.ACCOUNT_TYPE.updateOne([{"$lookup":{"from":"CUSTOMERS","localField":"Account_no","foreignField":"Account.Account_no","as":"customer"}},{"$unwind":"$customer"},{"$match":{"customer.Cust_no":"C0007"}},{"$set":{"Type":"FD"}}])
MongoInvalidArgumentError: Update document requires atomic operators
Bank> db.ACCOUNT_TYPE.updateMany({{"$lookup":{"from":"CUSTOMERS","localField":"Account_no","foreignField":"Account.Account_no","as":"customer"}},{"$unwind":"$customer"},{"$match":{"customer.Cust_no":"C0007"}}},{"$set":{"Type":"FD"}})
Uncaught:
SyntaxError: Unexpected token (1:28)

> 1 | db.ACCOUNT_TYPE.updateMany({{"$lookup":{"from":"CUSTOMERS","localField":"Account_no","foreignField":"Account.Account_no","as":"customer"}},{"$unwind":"$customer"},{"$match":{"customer.Cust_no":"C0007"}}},{"$set":{"Type":"FD"}})
    |                             ^
  2 |

Bank> db.ACCOUNT_TYPE.updateMany([{"$lookup":{"from":"CUSTOMERS","localField":"Account_no","foreignField":"Account.Account_no","as":"Bank> db.ACCOUNT_TYPE.updateMany({"Account_no":{"$in":db.CUSTOMERS.find({"Cust_no":"C0007"}).map(doc=>doc.Account.Account_no)}},{"$set":{"Type":"FD"}})
BSONError: Cannot convert circular structure to BSON
Bank> const accNo= db.CUSTOMERS.find({"Cust_no":"C0007"}).Account.Account_no;
TypeError: Cannot read properties of undefined (reading 'Account_no')
Bank> const accNo= db.CUSTOMERS.find({"Cust_no":"C0007"})

Bank> const accNo= db.CUSTOMERS.find({"Cust_no":"C0007"}).Account.Account_no
TypeError: Cannot read properties of undefined (reading 'Account_no')
Bank> const accNo= db.CUSTOMERS.find({"Cust_no":"C0007"}).Account

Bank> db.ACCOUNT_TYPE.updateMany({"Account_no":"accNo.Account_no"},{"$set":{"Type":"FD"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> const c= db.CUSTOMERS.find({"Cust_no":"C0007"})

Bank> const a=c.Account.Account_no
TypeError: Cannot read properties of undefined (reading 'Account_no')
Bank> const a=c.Account

Bank> const A=a.Account_no
TypeError: Cannot read properties of undefined (reading 'Account_no')
Bank> db.ACCOUNT_TYPE.updateMany({"Account_no":"A.Account_no"},{"$set":{"Type":"FD"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> const C= db.CUSTOMERS.find({"Cust_no":"C0007"},{"Account.Account_no":1,"_id":0})

Bank> db.ACCOUNT_TYPE.updateMany({"Account_no":"C"},{"$set":{"Type":"FD"}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> db.ACCOUNT_TYPE.updateMany({"Account_no":C},{"$set":{"Type":"FD"}})
BSONError: Cannot convert circular structure to BSON
Bank> WriteResult(C)
ReferenceError: WriteResult is not defined
Bank> const accountNos = db.CUSTOMERS.findOne({ Cust_no: 'C0007' }, { 'Account.Account_no': 1, _id: 0 }).Account.map(doc => doc.Account_no);

Bank> db.ACCOUNT_TYPE.updateMany({ Account_no:{$elemMatch:{$in:accountNos}}},{$set:{Type:'FD'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> db.ACCOUNT_TYPE.updateMany({ Account_no:{$in:accountNos}},{$set:{Type:'FD'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
Bank> const accountNos = db.CUSTOMERS.findOne({ Cust_no: 'C0007' }, { 'Account.Account_no': 1, _id: 0 })

Bank> db.ACCOUNT_TYPE.updateMany({ Account_no:{$in:accountNos}},{$set:{Type:'mm'}})
MongoServerError: $in needs an array
Bank> db.CUSTOMERS.find({ Cust_no: 'C0007' }, { 'Account.Account_no': 1, _id: 0 })
[
  { Account: [ { Account_no: 'A0009' } ] }
]
Bank> const accountNos = db.CUSTOMERS.findOne({ Cust_no: 'C0007' }, { 'Account.Account_no': 1, _id: 0 }).Account.map(doc => doc.Account_no);

Bank> db.ACCOUNT_TYPE.updateMany({ Account_no:{$in:accountNos}},{$set:{Type:'FD'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> db.ACCOUNT_TYPE.updateMany({ Account_no:accountNos},{$set:{Type:'Fl'}})
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
Bank> const Acc_no = db.CUSTOMERS.find({"Account.Balance":{"$lt":20000}},{"Account.Account_no":1,"_id":0}).Account.map(doc => doc.Account_no);
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const Acc_no = db.CUSTOMERS.findOne({"Account.Balance":{"$lt":20000}},{"Account.Account_no":1,"_id":0}).Account.map(doc => doc.Account_no);

Bank> db.ACCOUNT_TYPE.deleteMany({"Account_no":{"$in":Acc_no}})
{ acknowledged: true, deletedCount: 2 }
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Balance":{"$lt":50000}}},{"$group":{"_id":{"Account_no":"$Account.Account_no","Type":"$Account.Type"}}},{"$project":{"_id":0,"Account_no":"$_id.Account_no","Type":"$_id.Type"}},{"$out":"rough"}])

Bank> console.log(Acc_no)
[ 'A0001', 'A0002' ]

Bank> const Acc_no1 = db.CUSTOMERS.find({"Account":{"$elemMatch":{"Balance":{"$lt":20000}}},{"Account.Account_no":1,"_id":0}).Account.map(doc => doc.Account_no);
Uncaught:
SyntaxError: Unexpected token (1:86)

> 1 | const Acc_no1 = db.CUSTOMERS.find({"Account":{"$elemMatch":{"Balance":{"$lt":20000}}},{"Account.Account_no":1,"_id":0}).Account.map(doc => doc.Account_no);
    |                                                                                       ^
  2 |

Bank> const Acc_no1 = db.CUSTOMERS.find({"Account":{"$elemMatch":{"Balance":{"$lt":20000}}}},{"Account.Account_no":1,"_id":0}).Account.map(doc => doc.Account_no);
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const Acc_no1 = db.CUSTOMERS.find({"Account":{"$elemMatch":{"Balance":{"$lt":20000}}}},{"Account.Account_no":1,"_id":0}).Account.map(doc => doc.Account_no);if (queryResult && queryResult.length > 0 && queryResult[0].Account){const Acc_no1 = queryResult[0].Account.map(doc => doc.Account_no);}
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const Acc_no1 = db.CUSTOMERS.find({"Account":{"$elemMatch":{"Balance":{"$lt":20000}}}},{"Account.Account_no":1,"_id":0}).Account.map(doc => doc.Account_no);if (queryResult && queryResult.length > 0 && queryResult[0].Account){const Acc_no1 = queryResult[0].Account.map(doc => doc.Account_no);}else{print("No matching documents or 'Account' field not found.");}
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const Acc_no1 = db.CUSTOMERS.find({"Account":{"$elemMatch":{"Balance":{"$lt":20000}}}},{"Account.Account_no":1,"_id":0}).Account.map(doc => doc.Account_no);if (queryResult && queryResult.length > 0){const Acc_no1 = queryResult[0].Account.map(doc => doc.Account_no);}else{print("No matching documents or 'Account' field not found.");}
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const queryResult = db.CUSTOMERS.find({"Account.Balance":{"$lt":20000}},{"Account.Account_no":1,"_id":0});if (queryResult){consBank> const queryResult = db.CUSTOMERS.find({"Account.Balance":{"$lt":20000}},{"Account.Account_no":1,"_id":0});if (queryResult){const Acc_no1=[];queryResult.forEach(doc=>{if(doc.Account && doc.Account.length>0){doc.Account.forEach(account=>{if(account.Account_no){Acc_no1.push(account.Account_no);}});}});if(Acc_no1.length>0){printjson(Acc_no1);}else{print("No matching 'Account_no' found.");}}else{print("No matching documents found.");}
[
  'A0001',
  'A0002',
  'A0009',
  'A0008'
]

Bank> const queryResult = db.CUSTOMERS.find({"Account":{"$elemMatch":{"Balance":{"$lt":20000}}}},{"Account.Account_no":1,"_id":0});if (queryResult){const Acc_no1=[];queryResult.forEach(doc=>{if(doc.Account && doc.Account.length>0){doc.Account.forEach(account=>{if(account.Account_no){Acc_no1.push(account.Account_no);}});}});if(Acc_no1.length>0){printjson(Acc_no1);}else{print("No matching 'Account_no' found.");}}else{print("No matching documents found.");}
[
  'A0001',
  'A0002',
  'A0009',
  'A0008'
]

Bank> const res = db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},,{"$project":{"Account.Account_no":1,"_id":0}}])

Bank> print(res)
MongoServerError: Each element of the 'pipeline' array must be an object
Bank> console.log(res)


Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},,{"$project":{"Account.Account_no":1,"_id":0}}])
MongoServerError: Each element of the 'pipeline' array must be an object
Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$project":{"Account.Account_no":1,"_id":0}}])
[
  { Account: [] },
  { Account: [] },
  { Account: [] },
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: '' } ] },
  { Account: [] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] },
  { Account: [] },
  { Account: [] }
]
Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne",[]}}},{"$project":{"Account.Account_no":1,"_id":0}}])
Uncaught:
SyntaxError: Unexpected token (1:159)

> 1 | db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne",[]}}},{"$project":{"Account.Account_no":1,"_id":0}}])
    |
                                ^
  2 |

Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]}}},{"$project":{"Account.Account_no":1,"_id":0}}])
[
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: '' } ] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] }
]
Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account":{"$ne":""}},{"$project":{"Account.Account_no":1,"_id":0}}])
Uncaught:
SyntaxError: Unexpected token (1:186)

> 1 | db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account":{"$ne":""}},{"$project":{"Account.Account_no":1,"_id":0}}])
    |
                                                           ^
  2 |

Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}])
[
  { Account: [] },
  { Account: [] },
  { Account: [] },
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: '' } ] },
  { Account: [] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] },
  { Account: [] },
  { Account: [] }
]
Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_i
Uncaught:
SyntaxError: Unterminated string constant. (1:223)

> 1 | db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_i
    |
                                                                                                ^
  2 |

Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":{"$in":{[],""}}}}},{"$project":{"Account.Account_no":1,"_id":0}}])
Uncaught:
SyntaxError: Unexpected token (1:169)

> 1 | db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":{"$in":{[],""}}}}},{"$project":{"Account.Account_no":1,"_id":0}}])
    |
                                          ^
  2 |

Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":{"$in":[[],""]}}}},{"$project":{"Account.Account_no":1,"_id":0}}])
[
  { Account: [] },
  { Account: [] },
  { Account: [] },
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: '' } ] },
  { Account: [] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] },
  { Account: [] },
  { Account: [] }
]
Bank> db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}])
[
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] }
]
Bank> const res1= db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]).Acount.map(doc=>doc.Account_no)
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const res1= db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]).Account.map(doc=>doc.Account_no)
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const res1= db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]);if (queryResult){const Acc_no1=[];queryResult.forEach(doc=>{if(doc.Account && doc.Account.length>0){doc.Account.forEach(account=>{if(account.Account_no){Acc_no1.push(account.Account_no);}});}});if(Acc_no1.length>0){printjson(Acc_no1);}else{print("No matching 'Account_no' found.");}}else{print("No matching documents found.");}
MongoCursorExhaustedError: Cursor is exhausted
Bank> const res1= db.CUSTOMERS.find([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]);if (queryResult){const Acc_no1=[];queryResult.forEach(doc=>{if(doc.Account && doc.Account.length>0){doc.Account.forEach(account=>{if(account.Account_no){Acc_no1.push(account.Account_no);}});}});if(Acc_no1.length>0){printjson(Acc_no1);}else{print("No matching 'Account_no' found.");}}else{print("No matching documents found.");}
MongoCursorExhaustedError: Cursor is exhausted
Bank> const res1= db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]).Account.map(doc=>doc.Account.Account_no)
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const res1= db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]).map(doc=>doc.Account.Account_no)

Bank> console.log(res1)
[ undefined, undefined, undefined ]

Bank> printjson(res1);
[
  undefined,
  undefined,
  undefined
]

Bank> const res1= db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]).map(doc=>doc.Account_no)

Bank> printjson(res1);
[
  undefined,
  undefined,
  undefined
]

Bank> const res1= db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}])

Bank> printjson(res1);
[
  {
    Account: [
      {
        Account_no: 'A0002'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0009'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0008'
      }
    ]
  }
]

Bank> console.log(res1.Account)


Bank> console.log(res1[Account])
ReferenceError: Account is not defined
Bank> console.log(res1["Account"])


Bank> console.log(res1[Account[Account_no]])
ReferenceError: Account is not defined
Bank> const Acc_nos=[]; for(let a of res1){for(let b of a.Account){Acc_nos.push(b.Account_no)}}
TypeError: object is not iterable (cannot read property Symbol(Symbol.iterator))
Bank> const Acc_nos=[]; for(let a of res1){if (a.Account && a.Account.length > 0){for(let b of a.Account){Acc_nos.push(b.Account_no)}}}
TypeError: object is not iterable (cannot read property Symbol(Symbol.iterator))
Bank> const Acc_nos=[]; for(let a of res1){if (a.Account && Array.isArray(a.Account)){for(let b of a.Account){if(b.Account_no){Acc_nos.push(b.Account_no)}}}}
TypeError: object is not iterable (cannot read property Symbol(Symbol.iterator))
Bank> const accountNos = data.map(item => item.Account.map(account => account.Account_no)).flat();
ReferenceError: data is not defined
Bank> const accountNos = res1.map(item => item.Account.map(account => account.Account_no)).flat();
TypeError: res1.map(item ... t_no)).flat is not a function
Bank> const accountNos = res1.Account.map(account => account.Account_no);
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const accountNos = res1.map(item => item.Account[0].Account_no);

Bank> console.log(accountNos)
[
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] }
]

Bank> const res2 = res1.map(item => item.Account[0].Account_no);

Bank> console.log(res2)
[
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] }
]

Bank> printjson(res2)
[
  {
    Account: [
      {
        Account_no: 'A0002'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0009'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0008'
      }
    ]
  }
]

Bank> const accountNos = db.CUSTOMERS.findOne({ Cust_no: 'C0007' }, { 'Account.Account_no': 1, _id: 0 }).Account.map(doc => doc.Account_no);

Bank> console.log(accountNos)
[ 'A0009' ]

Bank> const x = res1.map(item => item.Account[0].Account_no);

Bank> printjson(x)
[
  {
    Account: [
      {
        Account_no: 'A0002'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0009'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0008'
      }
    ]
  }
]

Bank> const accountNosArray = [];for (const item of res1){if(item.Account && item.Account[0] && item.Account[0].Account_no){accountNosArray.push(item.Account[0].Account_no);}}
TypeError: object is not iterable (cannot read property Symbol(Symbol.iterator))
Bank> const accountNosArray = [];if(Array.isArray(res1)){for(const item of res1){if(item.Account && item.Account[0] && item.Account[0].Account_no){accountNosArray.push(item.Account[0].Account_no);}}}

Bank> printjson(accountNosArray)
[]

Bank> const y=db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]).Account.map(doc=>doc.Account_no)
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const y=db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]);

Bank> const accountNumbers = y[0]?.Account?.map(doc => doc.Account_no) || [];
TypeError: y[0]?.Account?.map is not a function
Bank> console.log(y)
[
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] }
]

Bank> let arr=[];y.forEach(item){let x=item.Account;x.forEach(i){let z=i.Account_no;arr.push(z);}}
Uncaught:
SyntaxError: Missing semicolon. (1:26)

> 1 | let arr=[];y.forEach(item){let x=item.Account;x.forEach(i){let z=i.Account_no;arr.push(z);}}
    |                           ^
  2 |

Bank> let arr=[];y.forEach(item){let x=item.Account;x.forEach(i){let z=i.Ac
Uncaught:
SyntaxError: Missing semicolon. (1:26)

> 1 | let arr=[];y.forEach(item){let x=item.Account;x.forEach(i){let z=i.Ac
    |                           ^
  2 |

Bank> let arr=[];y.forEach(function (arrayItem){var x=arrayItem.Account;x.forEach(function (p){var z=p.Account_no;arr.push(z);})});
MongoCursorExhaustedError: Cursor is exhausted
Bank> console.log(y)
[
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] }
]

Bank> const m=y.toArray();
MongoCursorExhaustedError: Cursor is exhausted
Bank> const n=db.CUSTOMERS.aggregate([{"$project":{"Account":{"$filter":{"input":"$Account","as":"acc","cond":{"$lt":["$$acc.Balance",20000]}}}}},{"$match":{"Account":{"$ne":[]},"Account.Account_no":{"$ne":""}}},{"$project":{"Account.Account_no":1,"_id":0}}]).toArray();

Bank> console.log(n)
[
  { Account: [ { Account_no: 'A0002' } ] },
  { Account: [ { Account_no: 'A0009' } ] },
  { Account: [ { Account_no: 'A0008' } ] }
]

Bank> let arr=[];n.forEach(function (arrayItem){var x=arrayItem.Account;x.forEach(function (p){var z=p.Account_no;arr.push(z);})});

Bank> console.log(arr)
[ 'A0002', 'A0009', 'A0008' ]

Bank> db.ACCOUNT_TYPE.deleteMany({"Account_no":{"$in":arr}})
{ acknowledged: true, deletedCount: 2 }
Bank> db.rough.deleteMany({"Account_no":{"$in":arr}})
{ acknowledged: true, deletedCount: 3 }
Bank> db.CUSTOMERS.find({"Account_no":{"$ne":""},"Loan_no":{"$ne":""}},{"Name":1,"_id":0})
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Yash Saraf' },
  { Name: 'Swaroop Ray' },
  { Name: 'Surya Narayan' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Mishra' },
  { Name: 'Aslesha Tiwari' }
]
Bank> db.CUSTOMERS.find({"Account.Account_no":{"$ne":""},"Loan.Loan_no":{"$ne":""}},{"Name":1,"_id":0})
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Mishra' },
  { Name: 'Aslesha Tiwari' }
]
Bank> db.CUSTOMERS.find({"Account.Account_no":{"$eq":""},"Loan.Loan_no":{"$ne":""}},{"Name":1,"_id":0})
[ { Name: 'Yash Saraf' } ]
Bank> db.CUSTOMERS.find({"Account.Account_no":e":1,"_id":0})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:41)

> 1 | db.CUSTOMERS.find({"Account.Account_no":e":1,"_id":0})
    |                                          ^
  2 |

Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Name","Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"Name":"$_id","_id":0,"Account_count":1}}])

Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Name","Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"Name":"$_id","_id":0,"Account_count":1}}])

Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Name","Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"Name":1,"_id":0,"Account_count":1}}])

Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Name","Account_count":{"$count":{}}}},{"$project":{"Name":1,"_id":0,"Account_count":1}}])
[
  { Account_count: 1 },
  { Account_count: 1 },
  { Account_count: 1 },
  { Account_count: 1 },
  { Account_count: 1 },
  { Account_count: 1 },
  { Account_count: 1 },
  { Account_count: 1 },
  { Account_count: 1 },
  { Account_count: 1 }
]
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Name","Account_count":{"$count":{}}}},{"$project":{"Name":"$_id","_id":0,"Account_count":1}}])
[
  { Account_count: 1, Name: 'Yash Saraf' },
  { Account_count: 1, Name: 'Raj Anand Singh' },
  { Account_count: 1, Name: 'Surya Narayan' },
  { Account_count: 1, Name: 'Pranav Praveen' },
  { Account_count: 1, Name: 'Soumya Jha' },
  { Account_count: 1, Name: 'Stuti Mishra' },
  { Account_count: 1, Name: 'Aslesha Tiwari' },
  { Account_count: 1, Name: 'Swaroop Ray' },
  { Account_count: 1, Name: 'Abhijit Mishra' },
  { Account_count: 1, Name: 'Ankita Singh' }
]
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":{"Name":"$Name","Account.Account_no":"$Account.Account_no"},"Account_count":{"$count":{}}}},,
...
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":{"Name":"$Name","Account.Account_no":"$Account.Account_no"},"Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"_id":0,"Name":"$_id.Name","Account_count":1}}
...
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":{"Name":"$Name","Account_no":"$Account.Account_no"},"Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"_id":0,"Name":"$_id.Name","Account.Account_no":"$_id.Account_no","Account_count":1}}
...
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":{"Account_no":"$Account.Account_no"},"Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"_id":0,"Name":1,"Account.Account_no":"$_id.Account_no","Account_count":1}}
...
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":{"Account_no":"$Account.Account_no"},"Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"_id":0,"Name":1,"Account_no":"$_id.Account_no","Account_count":1}}
...
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Account.Account_no","Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"_id":0,"Name":1,"Account_no":"$_id.Account_no","Account_count":1}}
...
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Account.Account_no","Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"_id":0,"Name":1,"Account_no":"$_id","Account_count":1}}
...
Bank> db.CUSTOMERS.find({})
[
  {
    _id: ObjectId("651627128ce4a541606305b0"),
    Cust_no: 'C0001',
    Name: 'Raj Anand Singh',
    Phone_no: 9861258466,
    City: 'Delhi',
    Account: [
      {
        Account_no: 'A0005',
        Type: 'FD',
        Balance: 28500,
        Branch_code: 'B005',
        Branch_name: 'SaltLake Branch',
        Branch_city: 'Kolkata'
      }
    ],
    Loan: {
      Loan_no: 'L0002',
      Amount: 50000,
      Branch_code: 'B005',
      Branch_name: 'SaltLake Branch',
      Branch_city: 'Kolkata',
      Installment: [
        { Inst_no: 1, Inst_Amount: 10000 },
        { Inst_no: 2, Inst_Amount: 10000 },
        { Inst_no: 3, Inst_Amount: 10000 }
      ]
    }
  },
  {
    _id: ObjectId("6516276b8ce4a541606305b2"),
    Cust_no: 'C0002',
    Name: 'Ankita Singh',
    Phone_no: 9879958651,
    City: 'Bangalore',
    Account: [
      {
        Account_no: 'A0005',
        Type: 'FD',
        Balance: 28500,
        Branch_code: 'B005',
        Branch_name: 'SaltLake Branch',
        Branch_city: 'Kolkata'
      }
    ],
    Loan: {
      Loan_no: 'L0003',
      Amount: 8000000,
      Branch_code: 'B004',
      Branch_name: 'Andheri Branch',
      Branch_city: 'Mumbai',
      Installment: [
        { Inst_no: 1, Inst_Amount: 50000 },
        { Inst_no: 2, Inst_Amount: 50000 }
      ]
    }
  },
  {
    _id: ObjectId("651627828ce4a541606305b3"),
    Cust_no: 'C0003',
    Name: 'Soumya Jha',
    Phone_no: 9885623344,
    City: 'Mumbai',
    Account: [
      {
        Account_no: 'A0001',
        Type: 'SB',
        Balance: 20000,
        Branch_code: 'B003',
        Branch_name: 'Juhu Branch',
        Branch_city: 'Mumbai'
      }
    ],
    Loan: {
      Loan_no: '',
      Amount: null,
      Branch_code: '',
      Branch_name: '',
      Branch_city: '',
      Installment: [ { Inst_no: null, Inst_Amount: null } ]
    }
  },
  {
    _id: ObjectId("6516292a8ce4a541606305b4"),
    Cust_no: 'C0004',
    Name: 'Abhijit Mishra',
    Phone_no: 9455845425,
    City: 'Mumbai',
    Account: [
      {
        Account_no: 'A0001',
        Type: 'SB',
        Balance: 20000,
        Branch_code: 'B003',
        Branch_name: 'Juhu Branch',
        Branch_city: 'Mumbai'
      },
      {
        Account_no: 'A0002',
        Type: 'SB',
        Balance: 15000,
        Branch_code: 'B002',
        Branch_name: 'Chandnichowk Branch',
        Branch_city: 'Delhi'
      }
    ],
    Loan: {
      Loan_no: '',
      Amount: null,
      Branch_code: '',
      Branch_name: '',
      Branch_city: '',
      Installment: [ { Inst_no: null, Inst_Amount: null } ]
    }
  },
  {
    _id: ObjectId("65162a468ce4a541606305b5"),
    Cust_no: 'C0005',
    Name: 'Yash Saraf',
    Phone_no: 9665854585,
    City: 'Kolkata',
    Account: [
      {
        Account_no: '',
        Type: '',
        Balance: null,
        Branch_code: '',
        Branch_name: '',
        Branch_city: ''
      }
    ],
    Loan: {
      Loan_no: 'L0001',
      Amount: 3000000,
      Branch_code: 'B006',
      Branch_name: 'Srirampuram Branch',
      Branch_city: 'Chennai',
      Installment: [ { Inst_no: null, Inst_Amount: null } ]
    }
  },
  {
    _id: ObjectId("65162b148ce4a541606305b6"),
    Cust_no: 'C0006',
    Name: 'Swaroop Ray',
    Phone_no: 9437855466,
    City: 'Chennai',
    Account: [
      {
        Account_no: 'A0003',
        Type: 'CA',
        Balance: 850000,
        Branch_code: 'B004',
        Branch_name: 'Andheri Branch',
        Branch_city: 'Mumbai'
      },
      {
        Account_no: 'A0004',
        Type: 'CA',
        Balance: 35000,
        Branch_code: 'B004',
        Branch_name: 'Andheri Branch',
        Branch_city: 'Mumbai'
      },
      {
        Account_no: 'A0010',
        Type: 'CA',
        Balance: 99000,
        Branch_code: 'B004',
        Branch_name: 'Andheri Branch',
        Branch_city: 'Mumbai'
      }
    ],
    Loan: {
      Loan_no: '',
      Amount: null,
      Branch_code: '',
      Branch_name: '',
      Branch_city: '',
      Installment: [ { Inst_no: null, Inst_Amount: null } ]
    }
  },
  {
    _id: ObjectId("65162b878ce4a541606305b7"),
    Cust_no: 'C0007',
    Name: 'Surya Narayan',
    Phone_no: 9937955215,
    City: 'Gurgaon',
    Account: [
      {
        Account_no: 'A0009',
        Type: 'SB',
        Balance: 18750,
        Branch_code: 'B003',
        Branch_name: 'Juhu Branch',
        Branch_city: 'Mumbai'
      }
    ],
    Loan: {
      Loan_no: '',
      Amount: null,
      Branch_code: '',
      Branch_name: '',
      Branch_city: '',
      Installment: [ { Inst_no: null, Inst_Amount: null } ]
    }
  },
  {
    _id: ObjectId("65162ced8ce4a541606305b8"),
    Cust_no: 'C0008',
    Name: 'Pranav Praveen',
    Phone_no: 9336652441,
    City: 'Pune',
    Account: [
      {
        Account_no: 'A0008',
        Type: 'SB',
        Balance: 7200,
        Branch_code: 'B002',
        Branch_name: 'Chandnichowk Branch',
        Branch_city: 'Delhi'
      }
    ],
    Loan: {
      Loan_no: 'L0006',
      Amount: 25000,
      Branch_code: 'B006',
      Branch_name: 'Srirampuram Branch',
      Branch_city: 'Chennai',
      Installment: [ { Inst_no: 1, Inst_Amount: 3000 } ]
    }
  },
  {
    _id: ObjectId("65162dfd8ce4a541606305b9"),
    Cust_no: 'C0009',
    Name: 'Stuti Mishra',
    Phone_no: 7870266534,
    City: 'Delhi',
    Account: [
      {
        Account_no: 'A0007',
        Type: 'SB',
        Balance: 48000,
        Branch_code: 'B001',
        Branch_name: 'Janakpuri Branch',
        Branch_city: 'Delhi'
      }
    ],
    Loan: {
      Loan_no: 'L0005',
      Amount: 9500000,
      Branch_code: 'B005',
      Branch_name: 'SaltLake Branch',
      Branch_city: 'Kolkata',
      Installment: [
        { Inst_no: 1, Inst_Amount: 500000 },
        { Inst_no: 2, Inst_Amount: 500000 }
      ]
    }
  },
  {
    _id: ObjectId("65162ec78ce4a541606305ba"),
    Cust_no: 'C0010',
    Name: 'Aslesha Tiwari',
    Phone_no: null,
    City: 'Mumbai',
    Account: [
      {
        Account_no: 'A0006',
        Type: 'FD',
        Balance: 550000,
        Branch_code: 'B005',
        Branch_name: 'SaltLake Branch',
        Branch_city: 'Kolkata'
      }
    ],
    Loan: {
      Loan_no: 'L0004',
      Amount: 100000,
      Branch_code: 'B004',
      Branch_name: 'Andheri Branch',
      Branch_city: 'Mumbai',
      Installment: [
        { Inst_no: 1, Inst_Amount: 20000 },
        { Inst_no: 2, Inst_Amount: 20000 }
      ]
    }
  }
]
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Name","Account_count":{"$count":{"$sum":1}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"Name":"$_id","_id":0,"Account_count":1}}])
MongoServerError: $count takes no arguments, i.e. $count:{}
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Name","Account_count":{"$count":{"$sum":1}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"Name":"$_id","_id":0,"Account_count":1}}])
MongoServerError: $count takes no arguments, i.e. $count:{}
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Name","Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"Name":"$_id","_id":0,"Account_count":1}}])
[
  { Account_count: 3, Name: 'Swaroop Ray' },
  { Account_count: 2, Name: 'Abhijit Mishra' }
]
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Name","Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"Name":"$_id","_id":0,"Account_count":1}}])

Bank> const x= db.CUSTOMERS.find({"Account.Account_no":"A0001"},{"Account.Account_Type":1,"_id":0})

Bank> const y= db.CUSTOMERS.find({"Account.Account_no":"A0001"},{"Account.Branch_code":1,"_id":0})

Bank> console.log(x)
[ { Account: [ {} ] }, { Account: [ {}, {} ] } ]

Bank> db.CUSTOMERS.find({"Account.Account_no":"A0001"},{"Account.Branch_code":1,"_id":0})
[
  { Account: [ { Branch_code: 'B003' } ] },
  { Account: [ { Branch_code: 'B003' }, { Branch_code: 'B002' } ] }
]
Bank> db.CUSTOMERS.find({"Account.Account_no":"A0001"},{"Account.Account_Type":1,"_id":0})
[ { Account: [ {} ] }, { Account: [ {}, {} ] } ]
Bank> console.log(y)
[
  { Account: [ { Branch_code: 'B003' } ] },
  { Account: [ { Branch_code: 'B003' }, { Branch_code: 'B002' } ] }
]

Bank> const x= db.CUSTOMERS.find({"Account.Account_no":"A0001"},{"Account.Type":1,"_id":0})

Bank> console.log(x)
[
  { Account: [ { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' }, { Type: 'SB' } ] }
]

Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$project":{"Account.Type":1,"_id":0}}])

Bank> console.log(x)
[ { Account: { Type: 'SB' } }, { Account: { Type: 'SB' } } ]

Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$project":{"Account.Type":1,"_id":0}}]).distinct()
TypeError: db.CUSTOMERS. ... :0}}]).distinct is not a function
Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":"$Account.Type"}},{"$project":{"Type":"_id","_id":0}}])

Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":"$Account.Type"}},{"$project":{"Type":"$_id","_id":0}}])

Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":"$Account.Type"}},{"$project":{"Account.Type":"$_id","_id":0}}])

Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":{"Type":"$Account.Type"}}},{"$project":{"Type":"$_id.type","_id":0}}])

Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":{"Type":"$Account.Type"}}},{"$project":{"Type":"$_id.Type","_id":0}}])

Bank> console.log(x)
[ { Type: 'SB' } ]

Bank> const y=db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":{"Branch_code":"$Account.Branch_code"}}},{"$project":{"Branch_code":"$_id.Branch_code","_id":0}}])

Bank> console.log(y)
[ { Branch_code: 'B003' } ]

Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":{"Type":"$Account.Type"}}},{"$project":{"Type":"$_id.Type","_id":0}}]).Account.map(doc=>doc.Type)
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":{"Type":"$Account.Type"}}},{"$project":{"Type":"$_id.Type","_id":0}}]).Account.map(doc=>doc.Type)
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":{"Type":"$Account.Type"}}},{"$project":{"Type":"$_id.Type","_id":0}}]
...
Bank> const x1=[];x.forEach(function (item){x1.push(item.Type);};
Uncaught:
SyntaxError: Unexpected token, expected "," (1:58)

> 1 | const x1=[];x.forEach(function (item){x1.push(item.Type);};
    |                                                           ^
  2 |

Bank> const x1=[];x.forEach(function (item){x1.push(item.Type);});
MongoCursorExhaustedError: Cursor is exhausted
Bank> const x= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":{"Type":"$Account.Type"}}},{"$project":{"Type":"$_id.Type","_id":0}}]).toArray();

Bank> const x1=[];x.forEach(function (item){x1.push(item.Type);});

Bank> console.log(x1)
[ 'SB' ]

Bank> const y=db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Account_no":"A0001"}},{"$group":{"_id":{"Branch_code":"$Account.Branch_code"}}},{"$project":{"Branch_code":"$_id.Branch_code","_id":0}}]).toArray()

Bank> const y1=[]; y.forEach(function (item){y1.push(item.Branch_code)});

Bank> console.log(y1)
[ 'B003' ]

Bank> db.CUSTOMERS.find({"Account.Type":{"$in":x1},"Account.Branch_code":{"$in":y1}},{"Account.Account_no":1,"Account.Type":1,"Account.Balance":1,"Account.Branch_code":1,"_id":0})
[
  {
    Account: [
      {
        Account_no: 'A0001',
        Type: 'SB',
        Balance: 20000,
        Branch_code: 'B003'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0001',
        Type: 'SB',
        Balance: 20000,
        Branch_code: 'B003'
      },
      {
        Account_no: 'A0002',
        Type: 'SB',
        Balance: 15000,
        Branch_code: 'B002'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0009',
        Type: 'SB',
        Balance: 18750,
        Branch_code: 'B003'
      }
    ]
  }
]
Bank> db.CUSTOMERS.find({"Account.Type":{"$in":x1},"Account.Branch_code":{"$in":y1},"Account_no":{"$ne":"A0001"}},{"Account.Account_no":1,"Account.Type":1,"Account.Balance":1,"Account.Branch_code":1,"_id":0})
[
  {
    Account: [
      {
        Account_no: 'A0001',
        Type: 'SB',
        Balance: 20000,
        Branch_code: 'B003'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0001',
        Type: 'SB',
        Balance: 20000,
        Branch_code: 'B003'
      },
      {
        Account_no: 'A0002',
        Type: 'SB',
        Balance: 15000,
        Branch_code: 'B002'
      }
    ]
  },
  {
    Account: [
      {
        Account_no: 'A0009',
        Type: 'SB',
        Balance: 18750,
        Branch_code: 'B003'
      }
    ]
  }
]
Bank> db.CUSTOMERS.find({"Account.Type":{"$in":x1},"Account.Branch_code":{"$in":y1},"Account.Account_no":{"$ne":"A0001"}},{"Account.Account_no":1,"Account.Type":1,"Account.Balance":1,"Account.Branch_code":1,"_id":0})
[
  {
    Account: [
      {
        Account_no: 'A0009',
        Type: 'SB',
        Balance: 18750,
        Branch_code: 'B003'
      }
    ]
  }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Name","Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"Name":"$_id","_id":0,"Account_count":1}}])
[
  { Account_count: 3, Name: 'Swaroop Ray' },
  { Account_count: 2, Name: 'Abhijit Mishra' }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Cust_no","Account_count":{"$count":{}}}},{"$match":{"Account_count":{"$gt":1}}},{"$project":{"Cust_no":"$_id","_id":0,"Account_count":1}}])
[
  { Account_count: 2, Cust_no: 'C0004' },
  { Account_count: 3, Cust_no: 'C0006' }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code"},"Average_balance":{"$avg":"$Account.Balance"}},{"$match":{"Average_balance":{"$gt":60000}}},{"$project":{"Branch_code":"$_id.Branch_code","Average_balance":1,"_id":0}}])
MongoServerError: A pipeline stage specification object must contain exactly one field.
Bank> db.CUSTOMERS.aggregate([{"$group":{"_id":"$Account.Branch_code"},"Average_balance":{"$avg":"$Account.Balance"}},{"$match":{"Average_balance":{"$gt":60000}}},{"$project":{"Branch_code":"$_id.Branch_code","Average_balance":1,"_id":0}}])
MongoServerError: A pipeline stage specification object must contain exactly one field.
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code"},"Average_balance":{"$avg":"$Account.Balance"}},{"$match":{"Average_balance":{"$gt":60000}}},{"$project":{"Branch_code":"$_id","Average_balance":1,"_id":0}}])
MongoServerError: A pipeline stage specification object must contain exactly one field.
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Average_balance":{"$avg":"$Account.Balance"}},{"$match":{"Average_balance":{"$gt":60000}}},{"$project":{"Branch_code":"$_id","Average_balance":1,"_id":0}}])
Uncaught:
SyntaxError: Unexpected token (1:134)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Average_balance":{"$avg":"$Account.Balance"}},{"$match":{"Average_balance":{"$gt":60000}}},{"$project":{"Branch_code":"$_id","Average_balance":1,"_id":0}}])
    |                                                                                                                                       ^
  2 |

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Average_balance":{"$avg":"$Account.Balance"}}},{"$match":{"Average_balance":{"$gt":60000}}},{"$project":{"Branch_code":"$_id","Average_balance":1,"_id":0}}])
[
  { Average_balance: 328000, Branch_code: 'B004' },
  { Average_balance: 202333.33333333334, Branch_code: 'B005' }
]
Bank> db.CUSTOMERS.find({},{"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0})
[
  {
    Loan: {
      Branch_code: 'B005',
      Branch_name: 'SaltLake Branch',
      Branch_city: 'Kolkata'
    }
  },
  {
    Loan: {
      Branch_code: 'B004',
      Branch_name: 'Andheri Branch',
      Branch_city: 'Mumbai'
    }
  },
  { Loan: { Branch_code: '', Branch_name: '', Branch_city: '' } },
  { Loan: { Branch_code: '', Branch_name: '', Branch_city: '' } },
  {
    Loan: {
      Branch_code: 'B006',
      Branch_name: 'Srirampuram Branch',
      Branch_city: 'Chennai'
    }
  },
  { Loan: { Branch_code: '', Branch_name: '', Branch_city: '' } },
  { Loan: { Branch_code: '', Branch_name: '', Branch_city: '' } },
  {
    Loan: {
      Branch_code: 'B006',
      Branch_name: 'Srirampuram Branch',
      Branch_city: 'Chennai'
    }
  },
  {
    Loan: {
      Branch_code: 'B005',
      Branch_name: 'SaltLake Branch',
      Branch_city: 'Kolkata'
    }
  },
  {
    Loan: {
      Branch_code: 'B004',
      Branch_name: 'Andheri Branch',
      Branch_city: 'Mumbai'
    }
  }
]
Bank> db.CUSTOMERS.find({"Loan.Branch_code":{"$ne":""}},{"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0})
[
  {
    Loan: {
      Branch_code: 'B005',
      Branch_name: 'SaltLake Branch',
      Branch_city: 'Kolkata'
    }
  },
  {
    Loan: {
      Branch_code: 'B004',
      Branch_name: 'Andheri Branch',
      Branch_city: 'Mumbai'
    }
  },
  {
    Loan: {
      Branch_code: 'B006',
      Branch_name: 'Srirampuram Branch',
      Branch_city: 'Chennai'
    }
  },
  {
    Loan: {
      Branch_code: 'B006',
      Branch_name: 'Srirampuram Branch',
      Branch_city: 'Chennai'
    }
  },
  {
    Loan: {
      Branch_code: 'B005',
      Branch_name: 'SaltLake Branch',
      Branch_city: 'Kolkata'
    }
  },
  {
    Loan: {
      Branch_code: 'B004',
      Branch_name: 'Andheri Branch',
      Branch_city: 'Mumbai'
    }
  }
]
Bank> db.CUSTOMERS.distinct({"Loan.Branch_code":{"$ne":""}},{"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0})
MongoServerError: BSON field 'distinct.key' is the wrong type 'object', expected type 'string'
Bank> db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0,{"Loan.Branch_code":{"$ne":""}})
Uncaught:
SyntaxError: Unexpected token (1:94)

> 1 | db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0,{"Loan.Branch_code":{"$ne":""}})
    |                                                                                               ^
  2 |

Bank> db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0,"Loan.Branch_code":{"$ne":""})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:123)

> 1 | db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0,"Loan.Branch_code":{"$ne":""})
    |                                                                                                                            ^
  2 |

Bank> db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0,)
Uncaught:
SyntaxError: Unexpected token (1:94)

> 1 | db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0,)
    |                                                                                               ^
  2 |

Bank> db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0)
Uncaught:
SyntaxError: Unexpected token, expected "," (1:93)

> 1 | db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1,"_id":0)
    |                                                                                              ^
  2 |

Bank> db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1)
Uncaught:
SyntaxError: Unexpected token, expected "," (1:85)

> 1 | db.CUSTOMERS.distinct({"Loan.Branch_code":1,"Loan.Branch_name":1,"Loan.Branch_city":1)
    |                                                                                      ^
  2 |

Bank> db.CUSTOMERS.distinct({"Loan.Branch_code","Loan.Branch_name","Loan.Branch_city")
Uncaught:
SyntaxError: Unexpected token (1:41)

> 1 | db.CUSTOMERS.distinct({"Loan.Branch_code","Loan.Branch_name","Loan.Branch_city")
    |                                          ^
  2 |

Bank> db.CUSTOMERS.distinct("Loan.Branch_code","Loan.Branch_name","Loan.Branch_city")
MongoServerError: BSON field 'distinct.query' is the wrong type 'string', expected type 'object'
Bank> db.CUSTOMERS.distinct("Loan.Branch_code", {"Loan.Branch_code": { "$ne": "" }})
[ 'B004', 'B005', 'B006' ]
Bank> db.CUSTOMERS.distinct("Loan.Branch_code", "Loan.Branch_name","Loan.Branch_city",{"Loan.Branch_code": { "$ne": "" }})
MongoServerError: BSON field 'distinct.query' is the wrong type 'string', expected type 'object'
Bank> db.CUSTOMERS.distinct("Loan.Branch_code", {"Loan.Branch_code": { "$ne": "" }},"Loan.Branch_name","Loan.Branch_city"))
Uncaught:
SyntaxError: Missing semicolon. (1:116)

> 1 | db.CUSTOMERS.distinct("Loan.Branch_code", {"Loan.Branch_code": { "$ne": "" }},"Loan.Branch_name","Loan.Branch_city"))
    |                                                                                                                     ^
  2 |

Bank> db.CUSTOMERS.distinct("Loan.Branch_code", {"Loan.Branch_code": { "$ne": "" }},"Loan.Branch_name","Loan.Branch_city")
TypeError: Cannot use 'in' operator to search for 'explain' in Loan.Branch_name
Bank> db.CUSTOMERS.aggregate([{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Branch_name":"$Loan.Branch_name","Branch_city":"$Loan.Branch_name"}}},{"$project":{"Branch_code":"$_id.Branch_code","Branch_name":"$_id.Branch_name","Branch_city":"$_id.Branch_city"}}])
[
  {
    _id: {
      Branch_code: 'B005',
      Branch_name: 'SaltLake Branch',
      Branch_city: 'SaltLake Branch'
    },
    Branch_code: 'B005',
    Branch_name: 'SaltLake Branch',
    Branch_city: 'SaltLake Branch'
  },
  {
    _id: {
      Branch_code: 'B006',
      Branch_name: 'Srirampuram Branch',
      Branch_city: 'Srirampuram Branch'
    },
    Branch_code: 'B006',
    Branch_name: 'Srirampuram Branch',
    Branch_city: 'Srirampuram Branch'
  },
  {
    _id: {
      Branch_code: 'B004',
      Branch_name: 'Andheri Branch',
      Branch_city: 'Andheri Branch'
    },
    Branch_code: 'B004',
    Branch_name: 'Andheri Branch',
    Branch_city: 'Andheri Branch'
  }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Loan"},{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Branch_name":"$Loan.Branch_name","Branch_city":"$Loan.Branch_name"}}},{"$project":{"Branch_code":"$_id.Branch_code","Branch_name":"$_id.Branch_name","Branch_city":"$_id.Branch_city"}}])
[
  {
    _id: {
      Branch_code: 'B004',
      Branch_name: 'Andheri Branch',
      Branch_city: 'Andheri Branch'
    },
    Branch_code: 'B004',
    Branch_name: 'Andheri Branch',
    Branch_city: 'Andheri Branch'
  },
  {
    _id: {
      Branch_code: 'B006',
      Branch_name: 'Srirampuram Branch',
      Branch_city: 'Srirampuram Branch'
    },
    Branch_code: 'B006',
    Branch_name: 'Srirampuram Branch',
    Branch_city: 'Srirampuram Branch'
  },
  {
    _id: {
      Branch_code: 'B005',
      Branch_name: 'SaltLake Branch',
      Branch_city: 'SaltLake Branch'
    },
    Branch_code: 'B005',
    Branch_name: 'SaltLake Branch',
    Branch_city: 'SaltLake Branch'
  }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Loan"},{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Loan.Loan_no"},{"$project":{"Branch_code":1,"Branch_name":1,"Branch_city":1}}])
Uncaught:
SyntaxError: Unexpected token (1:121)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Loan"},{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Loan.Loan_no"},{"$project":{"Branch_code":1,"Branch_name":1,"Branch_city":1}}])
    |                                                                                                                          ^
  2 |

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Loan"},{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Loan.Loan_no"}},{"$project":{"Branch_code":1,"Branch_name":1,"Branch_city":1}}])
[
  { _id: 'L0002' },
  { _id: 'L0003' },
  { _id: 'L0005' },
  { _id: 'L0001' },
  { _id: 'L0004' },
  { _id: 'L0006' }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Loan"},{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":"Loan.Loan_no"}},{"$project":{"Branch_code":1,"Branch_name":1,"Branch_city":1}}])
[ { _id: 'Loan.Loan_no' } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Loan"},{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Branch_name":"$Loan.Branch_name","Branch_city":"$Loan.Branch_city"}}},{"$project":{"Branch_code":"$_id.Branch_code","Branch_name":"$_id.Branch_name","Branch_city":"$_id.Branch_city"}}])
[
  {
    _id: {
      Branch_code: 'B004',
      Branch_name: 'Andheri Branch',
      Branch_city: 'Mumbai'
    },
    Branch_code: 'B004',
    Branch_name: 'Andheri Branch',
    Branch_city: 'Mumbai'
  },
  {
    _id: {
      Branch_code: 'B005',
      Branch_name: 'SaltLake Branch',
      Branch_city: 'Kolkata'
    },
    Branch_code: 'B005',
    Branch_name: 'SaltLake Branch',
    Branch_city: 'Kolkata'
  },
  {
    _id: {
      Branch_code: 'B006',
      Branch_name: 'Srirampuram Branch',
      Branch_city: 'Chennai'
    },
    Branch_code: 'B006',
    Branch_name: 'Srirampuram Branch',
    Branch_city: 'Chennai'
  }
]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Branch_name":"$Loan.Branch_name","Branch_city":"$Loan.Branch_city"}}},{"$project":{"_id":0,"Branch_code":"$_id.Branch_code","Branch_name":"$_id.Branch_name","Branch_city":"$_id.Branch_city"}}])
[
  {
    Branch_code: 'B005',
    Branch_name: 'SaltLake Branch',
    Branch_city: 'Kolkata'
  },
  {
    Branch_code: 'B006',
    Branch_name: 'Srirampuram Branch',
    Branch_city: 'Chennai'
  },
  {
    Branch_code: 'B004',
    Branch_name: 'Andheri Branch',
    Branch_city: 'Mumbai'
Bank> db.CUSTOMERS.aggregate([{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Amount":"$Loan.Amount","Loan_no":"$Loan.Loan_no"}}},{"$project":{"_id":0,"Cust_no":1,"Branch_code":"$_id.Branch_code","Branch_name":"$_id.Branch_name","Branch_city":"$_id.Branch_city"}}])
[
  { Branch_code: 'B006' },
  { Branch_code: 'B004' },
  { Branch_code: 'B005' },
  { Branch_code: 'B006' },
  { Branch_code: 'B005' },
  { Branch_code: 'B004' }
]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Loan.Branch_code":{"$ne":""}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Amount":"$Loan.Amount","Loan_no":"$Loan.Loan_no"}}},{"$project":{"_id":0,"Cust_no":1,"Branch_code":"$_id.Branch_code","Amount":"$_id.Amount","Loan_no":"$_id.Loan_no"}}])
[
  { Branch_code: 'B006', Amount: 3000000, Loan_no: 'L0001' },
  { Branch_code: 'B005', Amount: 50000, Loan_no: 'L0002' },
  { Branch_code: 'B004', Amount: 8000000, Loan_no: 'L0003' },
  { Branch_code: 'B006', Amount: 25000, Loan_no: 'L0006' },
  { Branch_code: 'B005', Amount: 9500000, Loan_no: 'L0005' },
  { Branch_code: 'B004', Amount: 100000, Loan_no: 'L0004' }
]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Loan.Loan_no":{"$ne":""}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Amount":"$Loan.Amount","Loan_no":"$Loan.Loan_no"}}},{"$project":{"_id":0,"Cust_no":1,"Branch_code":"$_id.Branch_code","Amount":"$_id.Amount","Loan_no":"$_id.Loan_no"}}])
[
  { Branch_code: 'B004', Amount: 100000, Loan_no: 'L0004' },
  { Branch_code: 'B004', Amount: 8000000, Loan_no: 'L0003' },
  { Branch_code: 'B006', Amount: 3000000, Loan_no: 'L0001' },
  { Branch_code: 'B005', Amount: 50000, Loan_no: 'L0002' },
  { Branch_code: 'B006', Amount: 25000, Loan_no: 'L0006' },
  { Branch_code: 'B005', Amount: 9500000, Loan_no: 'L0005' }
]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Loan.Loan_no":{"$ne":""},"Loan.Inst_no":{"$eq":null}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Amount":"$Loan.Amount","Loan_no":"$Loan.Loan_no"}}},{"$project":{"_id":0,"Cust_no":1,"Branch_code":"$_id.Branch_code","Amount":"$_id.Amount","Loan_no":"$_id.Loan_no"}}])
[
  { Branch_code: 'B006', Amount: 3000000, Loan_no: 'L0001' },
  { Branch_code: 'B005', Amount: 50000, Loan_no: 'L0002' },
  { Branch_code: 'B004', Amount: 8000000, Loan_no: 'L0003' },
  { Branch_code: 'B006', Amount: 25000, Loan_no: 'L0006' },
  { Branch_code: 'B005', Amount: 9500000, Loan_no: 'L0005' },
  { Branch_code: 'B004', Amount: 100000, Loan_no: 'L0004' }
]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Loan.Loan_no":{"$ne":""},"Loan.Installment.Inst_no":{"$eq":null}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Amount":"$Loan.Amount","Loan_no":"$Loan.Loan_no"}}},{"$project":{"_id":0,"Cust_no":1,"Branch_code":"$_id.Branch_code","Amount":"$_id.Amount","Loan_no":"$_id.Loan_no"}}])
[ { Branch_code: 'B006', Amount: 3000000, Loan_no: 'L0001' } ]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Loan.Loan_no":{"$ne":""},"Loan.Installment.Inst_no":{"$eq":null}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Amount":"$Loan.Amount","Loan_no":"$Loan.Loan_no","Cust_no":"$Cust_no"}}},{"$project":{"_id":0,"Cust_no":1,"Branch_code":"$_id.Branch_code","Amount":"$_id.Amount","Loan_no":"$_id.Loan_no"}}])
[ { Branch_code: 'B006', Amount: 3000000, Loan_no: 'L0001' } ]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Loan.Loan_no":{"$ne":""},"Loan.Installment.Inst_no":{"$eq":null}}},{"$group":{"_id":{"Branch_code":"$Loan.Branch_code","Amount":"$Loan.Amount","Loan_no":"$Loan.Loan_no","Cust_no":"$Cust_no"}}},{"$project":{"_id":0,"Cust_no":"$_id.Cust_no","Branch_code":"$_id.Branch_code","Amount":"$_id.Amount","Loan_no":"$_id.Loan_no"}}])
[
  {
    Cust_no: 'C0005',
    Branch_code: 'B006',
    Amount: 3000000,
    Loan_no: 'L0001'
  }
]
Bank> db.CUSTOMERS.aggregate([{"$project":{"Cust_no":1,"Account":{"$map":{"input":"$Account","as":}}}}])
Uncaught:
SyntaxError: Unexpected token (1:92)

> 1 | db.CUSTOMERS.aggregate([{"$project":{"Cust_no":1,"Account":{"$map":{"input":"$Account","as":}}}}])
    |
                       ^
  2 |

Bank> db.CUSTOMERS.aggregate([{"$project":{"Cust_no":1,"Account":{"$map":{"input":"$Account","as":"acc","in":{"$mergeObjects":["$$acc",{"Balance":{"$cond":{"if":{"$gt":["$$acc.Balance",80000]},"then":{"$multiply":["$$acc.Balance",1.06]},"else":{"$multiply":["$$acc.Balance",1.05]}}}}]}}}}}])
[
  {
    _id: ObjectId("651627128ce4a541606305b0"),
    Cust_no: 'C0001',
    Account: [
      {
        Account_no: 'A0005',
        Type: 'FD',
        Balance: 29925,
        Branch_code: 'B005',
        Branch_name: 'SaltLake Branch',
        Branch_city: 'Kolkata'
      }
    ]
  },
  {
    _id: ObjectId("6516276b8ce4a541606305b2"),
    Cust_no: 'C0002',
    Account: [
      {
        Account_no: 'A0005',
        Type: 'FD',
        Balance: 29925,
        Branch_code: 'B005',
        Branch_name: 'SaltLake Branch',
        Branch_city: 'Kolkata'
      }
    ]
  },
  {
    _id: ObjectId("651627828ce4a541606305b3"),
    Cust_no: 'C0003',
    Account: [
      {
        Account_no: 'A0001',
        Type: 'SB',
        Balance: 21000,
        Branch_code: 'B003',
        Branch_name: 'Juhu Branch',
        Branch_city: 'Mumbai'
      }
    ]
  },
  {
    _id: ObjectId("6516292a8ce4a541606305b4"),
    Cust_no: 'C0004',
    Account: [
      {
        Account_no: 'A0001',
        Type: 'SB',
        Balance: 21000,
        Branch_code: 'B003',
        Branch_name: 'Juhu Branch',
        Branch_city: 'Mumbai'
      },
      {
        Account_no: 'A0002',
        Type: 'SB',
        Balance: 15750,
        Branch_code: 'B002',
        Branch_name: 'Chandnichowk Branch',
        Branch_city: 'Delhi'
      }
    ]
  },
  {
    _id: ObjectId("65162a468ce4a541606305b5"),
    Cust_no: 'C0005',
    Account: [
      {
        Account_no: '',
        Type: '',
        Balance: null,
        Branch_code: '',
        Branch_name: '',
        Branch_city: ''
      }
    ]
  },
  {
    _id: ObjectId("65162b148ce4a541606305b6"),
    Cust_no: 'C0006',
    Account: [
      {
        Account_no: 'A0003',
        Type: 'CA',
        Balance: 901000,
        Branch_code: 'B004',
        Branch_name: 'Andheri Branch',
        Branch_city: 'Mumbai'
      },
      {
        Account_no: 'A0004',
        Type: 'CA',
        Balance: 36750,
        Branch_code: 'B004',
        Branch_name: 'Andheri Branch',
        Branch_city: 'Mumbai'
      },
      {
        Account_no: 'A0010',
        Type: 'CA',
        Balance: 104940,
        Branch_code: 'B004',
        Branch_name: 'Andheri Branch',
        Branch_city: 'Mumbai'
      }
    ]
  },
  {
    _id: ObjectId("65162b878ce4a541606305b7"),
    Cust_no: 'C0007',
    Account: [
      {
        Account_no: 'A0009',
        Type: 'SB',
        Balance: 19687.5,
        Branch_code: 'B003',
        Branch_name: 'Juhu Branch',
        Branch_city: 'Mumbai'
      }
    ]
  },
  {
    _id: ObjectId("65162ced8ce4a541606305b8"),
    Cust_no: 'C0008',
    Account: [
      {
        Account_no: 'A0008',
        Type: 'SB',
        Balance: 7560,
        Branch_code: 'B002',
        Branch_name: 'Chandnichowk Branch',
        Branch_city: 'Delhi'
      }
    ]
  },
  {
    _id: ObjectId("65162dfd8ce4a541606305b9"),
    Cust_no: 'C0009',
    Account: [
      {
        Account_no: 'A0007',
        Type: 'SB',
        Balance: 50400,
        Branch_code: 'B001',
        Branch_name: 'Janakpuri Branch',
        Branch_city: 'Delhi'
      }
    ]
  },
  {
    _id: ObjectId("65162ec78ce4a541606305ba"),
    Cust_no: 'C0010',
    Account: [
      {
        Account_no: 'A0006',
        Type: 'FD',
        Balance: 583000,
        Branch_code: 'B005',
        Branch_name: 'SaltLake Branch',
        Branch_city: 'Kolkata'
      }
    ]
  }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":{"Account.Balance"}}}},{"$project":{"_id":0,"Maximum_balance":1}}])
Uncaught:
SyntaxError: Unexpected token (1:165)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":{"Account.Balance"}}}},{"$project":{"_id":0,"Maximum_balance":1}}])
    |

                     ^
  2 |

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}])
[ { Maximum_balance: 'Account.Balance' } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}])
Bank>

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}])
[ { Maximum_balance: 550000 } ]
Bank> const t=db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}]).Account.map(doc=>doc.Balance)
TypeError: Cannot read properties of undefined (reading 'map')
Bank> const t=db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}]).toArray()

Bank> const t=db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}])

Bank> t.ForEach(function (item){var max=item.Maximum_balance;});
TypeError: t.ForEach is not a function
Bank> const t=db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}]).toArray()

Bank> t.ForEach(function (item){var max=item.Maximum_balance;});
TypeError: t.ForEach is not a function
Bank> const t=db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}])

Bank> t.forEach(function (item){var max=item.Maximum_balance;});

Bank> console.log(max)
ReferenceError: max is not defined
Bank> var max=0;t.forEach(function (item){var max=item.Maximum_balance;});
MongoCursorExhaustedError: Cursor is exhausted
Bank> const t=db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}]).toArray()

Bank> t.forEach(function (item){var max=item.Maximum_balance;});

Bank> console.log(max)
0

Bank> const t=db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$eq":"FD"}}},{"$group":{"_id":"$Account.Type","Maximum_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}]).toArray()

Bank> var max=0;t.forEach(function (item){max=item.Maximum_balance;});

Bank> console.log(max)
550000

Bank> db.CUSTOMERS.find({"Account.Balance":{"$gt":max}},{"Account.Account_no":1})
[
  {
    _id: ObjectId("65162b148ce4a541606305b6"),
    Account: [
      { Account_no: 'A0003' },
      { Account_no: 'A0004' },
      { Account_no: 'A0010' }
    ]
  }
]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Account.Balance":{"$gt":max}}},{"$project":{"_id":0,"Account.Account_no":1}}])
[
  {
    Account: [
      { Account_no: 'A0003' },
      { Account_no: 'A0004' },
      { Account_no: 'A0010' }
    ]
  }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Balance":{"$gt":max}}},{"$project":{"_id":0,"Account.Account_no":1}}])
[ { Account: { Account_no: 'A0003' } } ]
Bank> db.CUSTOMERS.find({"Account.Type":"FD","Account.Balance":{$lt: db.collection.distinct("Account.Balance",{"Account.Type":"FD"})}},{  "Account.Account_no":1,"_id":0})

test> use Bank
switched to db Bank
Bank> db.CUSTOMERS.find({"Loan.Branch_city":"Mumbai"},{"Loan.Loan_no":1,"_id":1})
[
  {
    _id: ObjectId("6516276b8ce4a541606305b2"),
    Loan: { Loan_no: 'L0003' }
  },
  {
    _id: ObjectId("65162ec78ce4a541606305ba"),
    Loan: { Loan_no: 'L0004' }
  }
]
Bank> db.CUSTOMERS.find({"Loan.Branch_city":"Mumbai"},{"Loan.Loan_no":1,"_id":0})
[ { Loan: { Loan_no: 'L0003' } }, { Loan: { Loan_no: 'L0004' } } ]
Bank> db.CUSTOMERS.find({"Account.Branch_city":"Delhi"},{"Account.Type":1,"_id":0})
[
  { Account: [ { Type: 'SB' }, { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] }
]
Bank> db.CUSTOMERS.find({"Account":{"$elemMatch":{"Branch_city":"Delhi"}}},{"Account.Type":1,"_id":0})
[
  { Account: [ { Type: 'SB' }, { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] }
]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Account.Branch_city":"Delhi"}},{"$project":{"Account.Type":1,"_id":0}}])
[
  { Account: [ { Type: 'SB' }, { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] }
]
Bank> db.CUSTOMERS.aggregate([{},{"$match":{"Account":{"Branch_city":"Delhi"}}},{"$project":{"Account.Type":1,"_id":0}}])
MongoServerError: A pipeline stage specification object must contain exactly one field.
t.Type":1,"_id":0}}])gregate([{"$unwind":"$Account"},{"$match":{"Account":{"Branch_city":"Delhi"}}},{"$project":{"Accoun

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account":{"Branch_city":"Delhi"}}},{"$project":{"Account.Type":1,"_id":0}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$project":{"Account.Type":1,"_id":0}}])
[
  { Account: { Type: 'SB' } },
  { Account: { Type: 'SB' } },
  { Account: { Type: 'SB' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Account.Branch_city"}},{"$project":{"Account.Type":1,"_id":0}}])
[ {} ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Account.Branch_city"}},{"$project":{"count.Type":1,"_id":0}}])
[ {} ]
nt.Branch_city"}},{"$project":{"Account.Type":"$_id.Branch_city","_id":0}}])nch_city":"Delhi"}},{"$group":{"_id":"$Accou
[ { Account: {} } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Account.Branch_city"}},{"$project":{"Account.Type":"$_id.Branch_city","_id":0}}])
[ { Account: {} } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_t.Branch_city"}},{"$project":{"Account.Type":"$_id.Branch_city","_id":0}}])
Uncaught:
SyntaxError: Unexpected token (1:117)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_t.Branch_city"}},{"$project":{"Account.Type":"$_id.Branch_city","_id":0}}])
    |                                                                                                                      ^
  2 |

nt.Type"}},{"$project":{"Account.Type":"$_id.Type","_id":0}}]):{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Accou
[ { Account: {} } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Account.Type"}},{"$project":{"Account.Type":"$_id.Type","_id":0}}])
[ { Account: {} } ]
:"$Account.Type","Branch_city":"$Account.Branch_city"}}},{"$project":{"Account.Type":"$_id.Type","_id":0}}])_id":{"Type"
[ { Account: { Type: 'SB' } } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":{"Type":"$Account.Type","Branch_city":"$Account.Branch_city"}}},{"$project":{"Account.Type":"$_id.Type","_id":0}}])
[ { Account: { Type: 'SB' } } ]
Bank> db.CUSTOMERS.find({"Account.Balance":{"$gt":100000}},{"Name":1,"Phone_no":1,"_id":0})
[
Bank> db.CUSTOMERS.find({"Name":"Raj Anand Singh"},{"_id":0,"Loan.Installment.Inst_no":1,"Loan.Installment.Inst_Amount
Uncaught:
SyntaxError: Unterminated string constant. (1:83)

> 1 | db.CUSTOMERS.find({"Name":"Raj Anand Singh"},{"_id":0,"Loan.Installment.Inst_no":1,"Loan.Installment.Inst_Amount
    |                                                                                    ^
  2 |

1})k> db.CUSTOMERS.find({"Name":"Raj Anand Singh"},{"_id":0,"Loan.Installment.Inst_no":1,"Loan.Installment.Inst_Amount":
[
  {
    Loan: {
      Installment: [
        { Inst_no: 1, Inst_Amount: 10000 },
        { Inst_no: 2, Inst_Amount: 10000 },
        { Inst_no: 3, Inst_Amount: 10000 }
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$ne":"SB"}}},{"$group":{"_id":{"Nam"}}}])
Uncaught:
SyntaxError: Unexpected token (1:111)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$ne":"SB"}}},{"$group":{"_id":{"Nam"}}}])
    |                                                                                                                ^
  2 |

$Name","Type":"$Account.Type"}}},{"$project":{"Name":1,"_id":1}}])ccount.Type":{"$ne":"SB"}}},{"$group":{"_id":{"Name":"
[
  { _id: { Name: 'Ankita Singh', Type: 'FD' } },
  { _id: { Name: 'Swaroop Ray', Type: 'CA' } },
  { _id: { Name: 'Raj Anand Singh', Type: 'FD' } },
  { _id: { Name: 'Yash Saraf', Type: '' } },
  { _id: { Name: 'Aslesha Tiwari', Type: 'FD' } }
]
ame":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","_id":1}}])nin":["SB",""]}}},{"$group":{"_id":{"N
[
  { _id: { Name: 'Ankita Singh', Type: 'FD' }, Name: 'Ankita Singh' },
  { _id: { Name: 'Swaroop Ray', Type: 'CA' }, Name: 'Swaroop Ray' },
  {
    _id: { Name: 'Raj Anand Singh', Type: 'FD' },
    Name: 'Raj Anand Singh'
  },
  {
    _id: { Name: 'Aslesha Tiwari', Type: 'FD' },
    Name: 'Aslesha Tiwari'
  }
]
ame":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","Type":"$_id.Type","_id":0}}])"$group":{"_id":{"N
[
  { Name: 'Raj Anand Singh', Type: 'FD' },
  { Name: 'Ankita Singh', Type: 'FD' },
  { Name: 'Swaroop Ray', Type: 'CA' },
  { Name: 'Aslesha Tiwari', Type: 'FD' }
]
ccount.Type"}},{"$project":{"Name":1,"Type":"$_id","_id":0}}]):{"Account.Type":{"$nin":["SB",""]}}},{"$group":{"_id":"$A
[ { Type: 'CA' }, { Type: 'FD' } ]
ame"}},{"$project":{"Name":"$_id","Account.Type":1,"_id":0}}]):{"Account.Type":{"$nin":["SB",""]}}},{"$group":{"_id":"$N
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Aslesha Tiwari' },
  { Name: 'Swaroop Ray' }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$nin":["SB",""]}}},{"$group":{"_id":"$Name"}},{"$project":{"Name":"$_id","Account.Type":1,"_id":0}}])
[
  { Name: 'Aslesha Tiwari' },
  { Name: 'Swaroop Ray' },
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' }
]
Bank> db.CUSTOMERS.find({"Loan.Installment.Inst_Amount":50000},{"Name":1})
[ { _id: ObjectId("6516276b8ce4a541606305b2"), Name: 'Ankita Singh' } ]
Bank> db.CUSTOMERS.find({"Loan.Installment.Inst_Amount":50000},{"Name":1,"_id":0})
[ { Name: 'Ankita Singh' } ]
Bank> db.CUSTOMERS.find({"Account.Branch_name":{"$regex":/^SaltLake/}},{"Name":1,"Phone_no":1,"_id":0})
[
  { Name: 'Raj Anand Singh', Phone_no: 9861258466 },
  { Name: 'Ankita Singh', Phone_no: 9879958651 },
  { Name: 'Aslesha Tiwari', Phone_no: null }
]
Bank> db.CUSTOMERS.find({"Account.Branch_name":{"$regex":/^Juhu/}},{"Name":1,"Phone_no":1,"_id":0})
[
  { Name: 'Soumya Jha', Phone_no: 9885623344 },
  { Name: 'Abhijit Mishra', Phone_no: 9455845425 },
  { Name: 'Surya Narayan', Phone_no: 9937955215 }
]
Bank> db.CUSTOMERS.find({"Name":"Abhijit Mishra"},{"_id":0,"Account.Branch_name":1,"Account.Branch_city":1})
[
  {
    Account: [
      { Branch_name: 'Juhu Branch', Branch_city: 'Mumbai' },
      { Branch_name: 'Chandnichowk Branch', Branch_city: 'Delhi' }
    ]
  }
]
Bank> db.CUSTOMERS.find({"Name":"Swaroop Ray"},{"_id":0,"Account.Type":1,"Account.Balance":1})
[
  {
    Account: [
      { Type: 'CA', Balance: 850000 },
      { Type: 'CA', Balance: 35000 },
      { Type: 'CA', Balance: 99000 }
    ]
  }
]
Bank> db.CUSTOMERS.updateOne({"Name":"Swaroop Ray","Account.Balance":99000},{"$set":{"Account.Type":"FD"}})
MongoServerError: Cannot create field 'Type' in element {Account: [ { Account_no: "A0003", Type: "CA", Balance: 850000, Branch_code: "B004", Branch_name: "Andheri Branch", Branch_city: "Mumbai" }, { Account_no: "A0004", Type: "CA", Balance: 35000, Branch_code: "B004", Branch_name: "Andheri Branch", Branch_city: "Mumbai" }, { Account_no: "A0010", Type: "CA", Balance: 99000, Branch_code: "B004", Branch_name: "Andheri Branch", Branch_city: "Mumbai" } ]}
Bank> db.CUSTOMERS.find({"Name":"Swaroop Ray"},{"_id":0,"Account.Type":1,"Account.Balance":1})
[
  {
    Account: [
      { Type: 'CA', Balance: 850000 },
      { Type: 'CA', Balance: 35000 },
      { Type: 'FD', Balance: 99000 }
    ]
  }
]
Bank> db.CUSTOMERS.find({"Name":"Swaroop Ray"},{"_id":0,"Account.Type":1,"Account.Balance":1})
[
  {
    Account: [
      { Type: 'CA', Balance: 850000 },
      { Type: 'CA', Balance: 35000 },
      { Type: 'FD', Balance: 99000 }
    ]
  }
]
ame"}},{"$project":{"Name":"$_id","Account.Type":1,"_id":0}}]):{"Account.Type":{"$nin":["SB",""]}}},{"$group":{"_id":"$N
[
  { Name: 'Aslesha Tiwari' },
  { Name: 'Swaroop Ray' },
  { Name: 'Ankita Singh' },
  { Name: 'Raj Anand Singh' }
]
d":{"Name":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","Type":"$_id.Type","_id":0}}])"$group":{"_i
Uncaught:
SyntaxError: Missing semicolon. (1:3)

> 1 | ame":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","Type":"$_id.Type","_id":0}}])"$group":{"_id":{"N
    |    ^
  2 |
Bank>

ame":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","Type":"$_id.Type","_id":0}}])"$group":{"_id":{"N
[
  { Name: 'Raj Anand Singh', Type: 'FD' },
  { Name: 'Ankita Singh', Type: 'FD' },
  { Name: 'Swaroop Ray', Type: 'FD' },
  { Name: 'Swaroop Ray', Type: 'CA' },
  { Name: 'Aslesha Tiwari', Type: 'FD' }
]

test> use Bank
switched to db Bank
Bank> db.CUSTOMERS.find({"Loan.Branch_city":"Mumbai"},{"Loan.Loan_no":1,"_id":1})
[
  {
    _id: ObjectId("6516276b8ce4a541606305b2"),
    Loan: { Loan_no: 'L0003' }
  },
  {
    _id: ObjectId("65162ec78ce4a541606305ba"),
    Loan: { Loan_no: 'L0004' }
  }
]
Bank> db.CUSTOMERS.find({"Loan.Branch_city":"Mumbai"},{"Loan.Loan_no":1,"_id":0})
[ { Loan: { Loan_no: 'L0003' } }, { Loan: { Loan_no: 'L0004' } } ]
Bank> db.CUSTOMERS.find({"Account.Branch_city":"Delhi"},{"Account.Type":1,"_id":0})
[
  { Account: [ { Type: 'SB' }, { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] }
]
Bank> db.CUSTOMERS.find({"Account":{"$elemMatch":{"Branch_city":"Delhi"}}},{"Account.Type":1,"_id":0})
[
  { Account: [ { Type: 'SB' }, { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] }
]
Bank> db.CUSTOMERS.aggregate([{"$match":{"Account.Branch_city":"Delhi"}},{"$project":{"Account.Type":1,"_id":0}}])
[
  { Account: [ { Type: 'SB' }, { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] },
  { Account: [ { Type: 'SB' } ] }
]
Bank> db.CUSTOMERS.aggregate([{},{"$match":{"Account":{"Branch_city":"Delhi"}}},{"$project":{"Account.Type":1,"_id":0}}])
MongoServerError: A pipeline stage specification object must contain exactly one field.
t.Type":1,"_id":0}}])gregate([{"$unwind":"$Account"},{"$match":{"Account":{"Branch_city":"Delhi"}}},{"$project":{"Accoun

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account":{"Branch_city":"Delhi"}}},{"$project":{"Account.Type":1,"_id":0}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$project":{"Account.Type":1,"_id":0}}])
[
  { Account: { Type: 'SB' } },
  { Account: { Type: 'SB' } },
  { Account: { Type: 'SB' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Account.Branch_city"}},{"$project":{"Account.Type":1,"_id":0}}])
[ {} ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Account.Branch_city"}},{"$project":{"count.Type":1,"_id":0}}])
[ {} ]
nt.Branch_city"}},{"$project":{"Account.Type":"$_id.Branch_city","_id":0}}])nch_city":"Delhi"}},{"$group":{"_id":"$Accou
[ { Account: {} } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Account.Branch_city"}},{"$project":{"Account.Type":"$_id.Branch_city","_id":0}}])
[ { Account: {} } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_t.Branch_city"}},{"$project":{"Account.Type":"$_id.Branch_city","_id":0}}])
Uncaught:
SyntaxError: Unexpected token (1:117)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_t.Branch_city"}},{"$project":{"Account.Type":"$_id.Branch_city","_id":0}}])
    |                                                                                                                      ^
  2 |

nt.Type"}},{"$project":{"Account.Type":"$_id.Type","_id":0}}]):{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Accou
[ { Account: {} } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":"$Account.Type"}},{"$project":{"Account.Type":"$_id.Type","_id":0}}])
[ { Account: {} } ]
:"$Account.Type","Branch_city":"$Account.Branch_city"}}},{"$project":{"Account.Type":"$_id.Type","_id":0}}])_id":{"Type"
[ { Account: { Type: 'SB' } } ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_city":"Delhi"}},{"$group":{"_id":{"Type":"$Account.Type","Branch_city":"$Account.Branch_city"}}},{"$project":{"Account.Type":"$_id.Type","_id":0}}])
[ { Account: { Type: 'SB' } } ]
Bank> db.CUSTOMERS.find({"Account.Balance":{"$gt":100000}},{"Name":1,"Phone_no":1,"_id":0})
[
Bank> db.CUSTOMERS.find({"Name":"Raj Anand Singh"},{"_id":0,"Loan.Installment.Inst_no":1,"Loan.Installment.Inst_Amount
Uncaught:
SyntaxError: Unterminated string constant. (1:83)

> 1 | db.CUSTOMERS.find({"Name":"Raj Anand Singh"},{"_id":0,"Loan.Installment.Inst_no":1,"Loan.Installment.Inst_Amount
    |                                                                                    ^
  2 |

1})k> db.CUSTOMERS.find({"Name":"Raj Anand Singh"},{"_id":0,"Loan.Installment.Inst_no":1,"Loan.Installment.Inst_Amount":
[
  {
    Loan: {
      Installment: [
        { Inst_no: 1, Inst_Amount: 10000 },
        { Inst_no: 2, Inst_Amount: 10000 },
        { Inst_no: 3, Inst_Amount: 10000 }
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$ne":"SB"}}},{"$group":{"_id":{"Nam"}}}])
Uncaught:
SyntaxError: Unexpected token (1:111)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$ne":"SB"}}},{"$group":{"_id":{"Nam"}}}])
    |                                                                                                                ^
  2 |

$Name","Type":"$Account.Type"}}},{"$project":{"Name":1,"_id":1}}])ccount.Type":{"$ne":"SB"}}},{"$group":{"_id":{"Name":"
[
  { _id: { Name: 'Ankita Singh', Type: 'FD' } },
  { _id: { Name: 'Swaroop Ray', Type: 'CA' } },
  { _id: { Name: 'Raj Anand Singh', Type: 'FD' } },
  { _id: { Name: 'Yash Saraf', Type: '' } },
  { _id: { Name: 'Aslesha Tiwari', Type: 'FD' } }
]
ame":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","_id":1}}])nin":["SB",""]}}},{"$group":{"_id":{"N
[
  { _id: { Name: 'Ankita Singh', Type: 'FD' }, Name: 'Ankita Singh' },
  { _id: { Name: 'Swaroop Ray', Type: 'CA' }, Name: 'Swaroop Ray' },
  {
    _id: { Name: 'Raj Anand Singh', Type: 'FD' },
    Name: 'Raj Anand Singh'
  },
  {
    _id: { Name: 'Aslesha Tiwari', Type: 'FD' },
    Name: 'Aslesha Tiwari'
  }
]
ame":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","Type":"$_id.Type","_id":0}}])"$group":{"_id":{"N
[
  { Name: 'Raj Anand Singh', Type: 'FD' },
  { Name: 'Ankita Singh', Type: 'FD' },
  { Name: 'Swaroop Ray', Type: 'CA' },
  { Name: 'Aslesha Tiwari', Type: 'FD' }
]
ccount.Type"}},{"$project":{"Name":1,"Type":"$_id","_id":0}}]):{"Account.Type":{"$nin":["SB",""]}}},{"$group":{"_id":"$A
[ { Type: 'CA' }, { Type: 'FD' } ]
ame"}},{"$project":{"Name":"$_id","Account.Type":1,"_id":0}}]):{"Account.Type":{"$nin":["SB",""]}}},{"$group":{"_id":"$N
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Aslesha Tiwari' },
  { Name: 'Swaroop Ray' }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Type":{"$nin":["SB",""]}}},{"$group":{"_id":"$Name"}},{"$project":{"Name":"$_id","Account.Type":1,"_id":0}}])
[
  { Name: 'Aslesha Tiwari' },
  { Name: 'Swaroop Ray' },
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' }
]
Bank> db.CUSTOMERS.find({"Loan.Installment.Inst_Amount":50000},{"Name":1})
[ { _id: ObjectId("6516276b8ce4a541606305b2"), Name: 'Ankita Singh' } ]
Bank> db.CUSTOMERS.find({"Loan.Installment.Inst_Amount":50000},{"Name":1,"_id":0})
[ { Name: 'Ankita Singh' } ]
Bank> db.CUSTOMERS.find({"Account.Branch_name":{"$regex":/^SaltLake/}},{"Name":1,"Phone_no":1,"_id":0})
[
  { Name: 'Raj Anand Singh', Phone_no: 9861258466 },
  { Name: 'Ankita Singh', Phone_no: 9879958651 },
  { Name: 'Aslesha Tiwari', Phone_no: null }
]
Bank> db.CUSTOMERS.find({"Account.Branch_name":{"$regex":/^Juhu/}},{"Name":1,"Phone_no":1,"_id":0})
[
  { Name: 'Soumya Jha', Phone_no: 9885623344 },
  { Name: 'Abhijit Mishra', Phone_no: 9455845425 },
  { Name: 'Surya Narayan', Phone_no: 9937955215 }
]
Bank> db.CUSTOMERS.find({"Name":"Abhijit Mishra"},{"_id":0,"Account.Branch_name":1,"Account.Branch_city":1})
[
  {
    Account: [
      { Branch_name: 'Juhu Branch', Branch_city: 'Mumbai' },
      { Branch_name: 'Chandnichowk Branch', Branch_city: 'Delhi' }
    ]
  }
]
Bank> db.CUSTOMERS.find({"Name":"Swaroop Ray"},{"_id":0,"Account.Type":1,"Account.Balance":1})
[
  {
    Account: [
      { Type: 'CA', Balance: 850000 },
      { Type: 'CA', Balance: 35000 },
      { Type: 'CA', Balance: 99000 }
    ]
  }
]
Bank> db.CUSTOMERS.updateOne({"Name":"Swaroop Ray","Account.Balance":99000},{"$set":{"Account.Type":"FD"}})
MongoServerError: Cannot create field 'Type' in element {Account: [ { Account_no: "A0003", Type: "CA", Balance: 850000, Branch_code: "B004", Branch_name: "Andheri Branch", Branch_city: "Mumbai" }, { Account_no: "A0004", Type: "CA", Balance: 35000, Branch_code: "B004", Branch_name: "Andheri Branch", Branch_city: "Mumbai" }, { Account_no: "A0010", Type: "CA", Balance: 99000, Branch_code: "B004", Branch_name: "Andheri Branch", Branch_city: "Mumbai" } ]}
Bank> db.CUSTOMERS.find({"Name":"Swaroop Ray"},{"_id":0,"Account.Type":1,"Account.Balance":1})
[
  {
    Account: [
      { Type: 'CA', Balance: 850000 },
      { Type: 'CA', Balance: 35000 },
      { Type: 'FD', Balance: 99000 }
    ]
  }
]
Bank> db.CUSTOMERS.find({"Name":"Swaroop Ray"},{"_id":0,"Account.Type":1,"Account.Balance":1})
[
  {
    Account: [
      { Type: 'CA', Balance: 850000 },
      { Type: 'CA', Balance: 35000 },
      { Type: 'FD', Balance: 99000 }
    ]
  }
]
ame"}},{"$project":{"Name":"$_id","Account.Type":1,"_id":0}}]):{"Account.Type":{"$nin":["SB",""]}}},{"$group":{"_id":"$N
[
  { Name: 'Aslesha Tiwari' },
  { Name: 'Swaroop Ray' },
  { Name: 'Ankita Singh' },
  { Name: 'Raj Anand Singh' }
]
d":{"Name":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","Type":"$_id.Type","_id":0}}])"$group":{"_i
Uncaught:
SyntaxError: Missing semicolon. (1:3)

> 1 | ame":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","Type":"$_id.Type","_id":0}}])"$group":{"_id":{"N
    |    ^
  2 |
Bank>

ame":"$Name","Type":"$Account.Type"}}},{"$project":{"Name":"$_id.Name","Type":"$_id.Type","_id":0}}])"$group":{"_id":{"N
[
  { Name: 'Raj Anand Singh', Type: 'FD' },
  { Name: 'Ankita Singh', Type: 'FD' },
  { Name: 'Swaroop Ray', Type: 'FD' },
  { Name: 'Swaroop Ray', Type: 'CA' },
  { Name: 'Aslesha Tiwari', Type: 'FD' }
]
max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}]).toArray()"$Account.Account_no","Max_balance":{"$

Bank> var max1=0;t.forEach(function (item){max1=item.Maximum_balance;});

Bank> console.log(max1\)
Uncaught:
SyntaxError: Expecting Unicode escape sequence \uXXXX. (1:17)

> 1 | console.log(max1\)
    |                  ^
  2 |

Bank> console.log(max1)


Bank> console.log(t)
[
  {}, {}, {}, {}, {},
  {}, {}, {}, {}, {},
  {}
]

Bank> const t1 =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Account_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}}]).toArray()

Bank> console.log(t1)
[
  {}, {}, {}, {}, {},
  {}, {}, {}, {}, {},
  {}
]

Bank> const t1 =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Account_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}
...
Bank> const t1 =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Account_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:184)

> 1 | const t1 =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Account_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Maximum_balance":1}})
    |
                                                         ^
  2 |

Bank> const t1 =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Account_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project"d":0,"Maximum_balance":1}})
Uncaught:
SyntaxError: Unexpected token (1:153)

> 1 | const t1 =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Account_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project"d":0,"Maximum_balance":1}})
    |
                          ^
  2 |

max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}}]).toArray()id":"$Account.Account_no","Max_balance":{"$

Bank> var max1=0;t.forEach(function (item){max1=item.Max_balance;});

Bank> console.log(max1)
35000

Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"Max_balance":{"$max":"$Account.Balance"}},{"$project":{"_id":0,"Max_balance":1}}]).toArray()
MongoServerError: Unrecognized pipeline stage name: 'Max_balance'
Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Account_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}}])

Bank> console.log(t)
[
  { Max_balance: 35000 },
  { Max_balance: null },
  { Max_balance: 20000 },
  { Max_balance: 15000 },
  { Max_balance: 850000 },
  { Max_balance: 7200 },
  { Max_balance: 99000 },
  { Max_balance: 28500 },
  { Max_balance: 18750 },
  { Max_balance: 550000 },
  { Max_balance: 48000 }
]

Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Cust_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}}])

Bank> console.log(t)
[
  { Max_balance: 20000 },
  { Max_balance: 20000 },
  { Max_balance: 7200 },
  { Max_balance: 28500 },
  { Max_balance: 48000 },
  { Max_balance: null },
  { Max_balance: 850000 },
  { Max_balance: 18750 },
  { Max_balance: 28500 },
  { Max_balance: 550000 }
]

Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Cust_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,alance":1}}])
Uncaught:
SyntaxError: Unterminated string constant. (1:157)

> 1 | const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Cust_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,alance":1}}])
    |
                              ^
  2 |

max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}}]).sort({"Max_balance":-1}).limit(1).toArray()ance":{"$
TypeError: db.CUSTOMERS. ... ":-1}).limit is not a function
Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Account_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}}]).sort({"Max_balance":-1}).limit(1).t
TypeError: db.CUSTOMERS. ... ":-1}).limit is not a function
ount.Balance"}}},{"$project":{"_id":0,"Max_balance":1}}])count"},{"$group":{"_id":"$Cust_no","Max_balance":{"$max":"$Acc

Bank>  const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Cust_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}}])

Bank> const u=t.sort({})

Bank> const u=t.sort({"Max_balance":-1}).limit(1)
TypeError: t.sort({"Max_ ... ":-1}).limit is not a function
Bank> const u=t.sort({"Max_balance":-1})

Bank> console.log(u)
MongoServerError: $sort stage must have at least one sort key
Bank>  const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Cust_no","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1
...
Bank> const t= db.CUSTOMERS.find({},{"Account.Balance":1,"_id":0}).sort({"Account.Balance":-1}).limit(1)

Bank> console.log(t)
[
  {
    Account: [ { Balance: 850000 }, { Balance: 35000 }, { Balance: 99000 } ]
  }
]

Bank> const t = db.CUSTOMERS.find({}, { "Max_bal": {"$max":"Account.Balance"}}, "_id": 0 })
Uncaught:
SyntaxError: Unexpected token, expected "," (1:79)

> 1 | const t = db.CUSTOMERS.find({}, { "Max_bal": {"$max":"Account.Balance"}}, "_id": 0 })
    |                                                                                ^
  2 |

Bank> const t = db.CUSTOMERS.find({}, { "Max_bal": {"$max":"Account.Balance"}, "_id": 0 })

Bank> console.log(t)
[
  { Max_bal: 'Account.Balance' },
  { Max_bal: 'Account.Balance' },
  { Max_bal: 'Account.Balance' },
  { Max_bal: 'Account.Balance' },
  { Max_bal: 'Account.Balance' },
  { Max_bal: 'Account.Balance' },
  { Max_bal: 'Account.Balance' },
  { Max_bal: 'Account.Balance' },
  { Max_bal: 'Account.Balance' },
  { Max_bal: 'Account.Balance' }
]

Bank>  const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}}])

Bank> console.log(t)
[
  { Max_balance: 99000 },
  { Max_balance: 28500 },
  { Max_balance: 18750 },
  { Max_balance: 850000 },
  { Max_balance: 20000 },
  { Max_balance: 35000 },
  { Max_balance: 7200 },
  { Max_balance: 48000 },
  { Max_balance: 550000 },
  { Max_balance: null },
  { Max_balance: 15000 }
]

Bank>  const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max,{}_balance":1}}])

":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max_balance":-1},{"$limit":1}])balance":{"$max
Uncaught:
SyntaxError: Unexpected token (1:205)

> 1 | const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max_balance":-1},{"$limit":1}])
    |
                                                                              ^
  2 |

Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max_balance":-1},{"$limit":1}])
Uncaught:
SyntaxError: Unexpected token (1:205)

> 1 | const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max_balance":-1},{"$limit":1}])
    |
                                                                              ^
  2 |

Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max}_balance":-1},{"$limit":1}])
Uncaught:
SyntaxError: Unexpected token (1:206)

> 1 | const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max}_balance":-1},{"$limit":1}])
    |
                                                                               ^
  2 |

Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max}}_balance":-1},{"$limit":1}])
Uncaught:
SyntaxError: Unexpected token (1:207)

> 1 | const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max}}_balance":-1},{"$limit":1}])
    |
                                                                                ^
  2 |

":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max_balance":-1}},{"$limit":1}])alance":{"$max

Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max_balance":-1}},{"$limit":1}])

Bank> console.log(t)
[ { Max_balance: 850000 } ]

Bank> var max1=0;t.forEach(function (item){max1=item.Max_balance;});
MongoCursorExhaustedError: Cursor is exhausted
Bank> const t =  db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Balance","Max_balance":{"$max":"$Account.Balance"}}},{"$project":{"_id":0,"Max_balance":1}},{"$sort":{"Max_balance":-1}},{"$limit":1}])             .toArray()

Bank> var max1=0;t.forEach(function (item){max1=item.Max_balance;});

Bank> console.log(max1)
850000

Bank> db.CUSTOMERS.find({"Account.Balance":max1},{"Name":1,"Account.Account_no":1,"_id":0})
[
  {
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Balance":max1}},{"$project":{"_id":0,"Account])
Uncaught:
SyntaxError: Unterminated string constant. (1:104)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Balance":max1}},{"$project":{"_id":0,"Account])
    |                                                                                                         ^
  2 |

Account.Account_no":1,"Account.Balance":1}}])count"},{"$match":{"Account.Balance":max1}},{"$project":{"_id":0,"Name":1,"
[
  {
    Name: 'Swaroop Ray',
    Account: { Account_no: 'A0003', Balance: 850000 }
  }
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum}])
Uncaught:
SyntaxError: Unterminated string constant. (1:103)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum}])
    |                                                                                                        ^
  2 |
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"{"_id":0,"Account.Branch_code":1}}])nce"}}},{"$match":{"Total_balance":{"$gt":"Avg_balance"}}},{"$project":

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":1}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"{"_id":0,"Account.Branch_code":"$_id"}}])}},{"$match":{"Total_balance":{"$gt":"Avg_balance"}}},{"$project":

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"alance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])ranch_code":{"Total_balance":{"$gt":"Avg_b

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":"Avg_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"},"Avg_balae":{"$avg":"$Total_balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":"Avg_balance"}}}},{"$project":{"_iBank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"lance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])ranch_code":{"Total_balance":{"$gt":"Avg_ba

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"},"Avg_balance":{"$avg":"Total_balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":"Avg_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"t":{"_id":0,"Account.Branch_code":"$_id"}}])_balance":{"$gt":{"$avg":"Account.Total_Balance"}}}}},{"$projec

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":{"$avg":"Account.Total_Balance"}}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])

ount.Balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])de","Total_balance":{"$sum":"Acc
[
  { Total_balance: 0, Account: { Branch_code: 'Account.Branch_code' } }
]
ount.Balance"},"count":{$sum:1}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])e":{"$sum":"Acc
[
  { Total_balance: 0, Account: { Branch_code: 'Account.Branch_code' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"},"count":{$sum:1}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])
[
  { Total_balance: 0, Account: { Branch_code: 'Account.Branch_code' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"Account.Balance"},"Avg_balance":{"$avg":"Total_balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":"Avg_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"Account.Balance"},"count":{$sum:1}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])
[
  { Total_balance: 0, Account: { Branch_code: 'B005' } },
  { Total_balance: 0, Account: { Branch_code: '' } },
  { Total_balance: 0, Account: { Branch_code: 'B002' } },
  { Total_balance: 0, Account: { Branch_code: 'B003' } },
  { Total_balance: 0, Account: { Branch_code: 'B004' } },
  { Total_balance: 0, Account: { Branch_code: 'B001' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"count":{$sum:1}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])
[
  { Total_balance: 607000, Account: { Branch_code: 'B005' } },
  { Total_balance: 0, Account: { Branch_code: '' } },
  { Total_balance: 22200, Account: { Branch_code: 'B002' } },
  { Total_balance: 58750, Account: { Branch_code: 'B003' } },
  { Total_balance: 984000, Account: { Branch_code: 'B004' } },
  { Total_balance: 48000, Account: { Branch_code: 'B001' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"Total_balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":"Avg_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balan$e":{"$avg":"Total_balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":"Avg_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balanc_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])ranch_code":{"Total_balance":{"$gt":"Avg

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":"Avg_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Account.Branch_code":{"Total_bala$nce":{"$gt":"Avg_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balancg_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])anch_code":{"Total_balance":{"$gt":"$Av

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":"$Avg_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"Account.Branch_code","Total_balance":{"$sum":"Account.Balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":{"$avg":"Account.Total_Balance"}}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balancid":0,"Account.Branch_code":"$_id"}}]):{"Total_balance":{"$gt":{"$avg":"Total_Balance"}}}}},{"$project":{"_

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":{"$avg":"Total_Balance"}}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balancid":0,"Account.Branch_code":"$_id"}}]):{"Total_balance":{"$gt":{"$avg":"Total_balance"}}}}},{"$project":{"_

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":{"$avg":"Total_balance"}}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balanc_id":0,"Account.Branch_code":"$_id"}}]){"Total_balance":{"$gt":{"$avg":"$Total_balance"}}}}},{"$project":{"

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$match":{"Account.Branch_code":{"Total_balance":{"$gt":{"$avg":"$Total_balance"}}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balanc"_id":0,"Account.Branch_code":"$_id"}}])"$Total_balance":{"$gt":{"$avg":"$Total_balance"}}}}},{"$project":{
MongoServerError: unknown operator: $Total_balance
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$match":{"Account.Branch_code":{"$Total_balance":{"$gt":{"$avg":"$Total_balance"}}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
MongoServerError: unknown operator: $Total_balance
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$match":{"Account.Brnch_code":{"$Total_balance":{"$gt":{"$avg":"$Total_balance"}}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balancode":"$_id"}}]):{"Total_balance":{"$gt":{"$avg":"$Total_balance"}}}},{"$project":{"_id":0,"Account.Branch_c

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$match":{"Total_balance":{"$gt":{"$avg":"$Total_balance"}}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balanct":{"_id":0,"Account.Branch_code":"$_id"}}])},{"$match":{"Total_balance":{"$gt":"$Avg_balance"}}},{"$projec

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balancalance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])},{"$match":{"Total_b

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$group":{"_id":"$Account.Branch_code","Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$group":{.Branch_code","Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Uncaught:
SyntaxError: Unexpected token (1:144)

> 1 | db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$group":{.Branch_code","Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
    |
                 ^
  2 |
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balancvg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])},{"$match":{"Total_balance":{"$gt":"$A

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$group":{"_id":null,"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balancg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])}},{"$match":{"Total_balance":{"$gt":"Av

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$group":{"_id":null,"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_bala$nce":{"$gt":"Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.BalancAvg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}]),{"$match":{"$Total_balance":{"$gt":"$
MongoServerError: unknown top level operator: $Total_balance. If you have a field name that starts with a '$' symbol, consider using Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$group":{"_id":"$Account.Branch_code","Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$group":{"_id":"$Account.Branch_code","Avg_balance":{"$avg":"$Total_balBank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balancalance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])},{"$match":{"Total_b

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$group":{"_id":"$Account.Branch_code","Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"$Avg_balanBank> db.collection.aggregate([{$unwind: "$Account"},{$group:{_id: "$Account.Branch_code",totalBalance:{$sum:"$Account.Balance"}}},{$group:{   _id: null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:{branchCode:"$_id",totalBalance:"$totalBalance"}}}},{${_id:0,branchCode:"$branches.branchCode"}}])Balance":{$gt:"$averageTotalBalance"}}},{$project:

Bank> db.collection.aggregate([{$unwind: "$Account"},{$group:{_id: "$Account.Branch_code",totalBalance:{$sum:"$Account.Balance"}}},{$group:{   _id: null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:{branchCode:"$_id",totalBalance:"$totalBalance"}}}},{$unwind:"$branches"},{$match:{"branches.totalBalance":{$gt:"$averageTotalBalance"}}},{$project:{_id:0,branchCode:"$branches.branchCode"}}])
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balanc{"$gt":["$Total_balance","$Avg_balance"]}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}]):{"$expr":

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$group":{"_id":"$Account.Branch_code","Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"$expr":{"$gt":["$Total_balance","$Avg_balance"]}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"$expr":{"$gt":["$Total_balance","$Avg_balance"]}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
[
  { Account: { Branch_code: 'B005' } },
  { Account: { Branch_code: '' } },
  { Account: { Branch_code: 'B004' } },
  { Account: { Branch_code: 'B001' } },
  { Account: { Branch_code: 'B003' } },
  { Account: { Branch_code: 'B002' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"$expr":{"$gt":["$Total_balance","$Avg_balance"]}},"Account.Branch_code":{"$ne":""}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
MongoServerError: A pipeline stage specification object must contain exactly one field.
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"$expr":{"$gt":["$Total_balance","$Avg_balance"]},"Account.Branch_code":{"$ne":""}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
[
  { Account: { Branch_code: 'B002' } },
  { Account: { Branch_code: '' } },
  { Account: { Branch_code: 'B004' } },
  { Account: { Branch_code: 'B001' } },
  { Account: { Branch_code: 'B005' } },
  { Account: { Branch_code: 'B003' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"$expr":{"$gt":["$Total_balance","$Avg_balance"]}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
[
  { Account: { Branch_code: 'B005' } },
  { Account: { Branch_code: 'B004' } },
  { Account: { Branch_code: 'B002' } },
  { Account: { Branch_code: 'B003' } },
  { Account: { Branch_code: 'B001' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":"$Total_Balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":343990}}},{"$project":{"_id":0,"Account.Branch_code":"$_id"}}])
[
  { Account: { Branch_code: 'B005' } },
  { Account: { Branch_code: 'B004' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":343990}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","$Avg_balance":1}}])
MongoServerError: Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":343990}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Avg_balance":1}}])
[
  { Avg_balance: null, Account: { Branch_code: 'B005' } },
  { Avg_balance: null, Account: { Branch_code: 'B004' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":"$Total_balance"}}},{"$match":{"Total_balance":{"$gt":343990}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])
[
  { Total_balance: 607000, Account: { Branch_code: 'B005' } },
  { Total_balance: 984000, Account: { Branch_code: 'B004' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":{"$sum":"$Account.Balance"}}}},{"$match":{"Total_balance":{"$
gt":343990}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])
[
  { Total_balance: 607000, Account: { Branch_code: 'B005' } },
  { Total_balance: 984000, Account: { Branch_code: 'B004' } }
]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":{"$sum":"$Account.Balance"}}}},{"$match":{"Total_balance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])

Bank> const result= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Avg_balance":{"$avg":{"$sum":"$Account.Balance"}}}},{"$project":{"_id":0,"Avg_balance":1}}])

Bank> console.log(result)
[
  { Avg_balance: 19583.333333333332 },
  { Avg_balance: 328000 },
  { Avg_balance: 202333.33333333334 },
  { Avg_balance: 48000 },
  { Avg_balance: 11100 }
]

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":{"$sum":"$Account.Balance"}}}},{"$match":{"Total_balance":{"$gt":"$Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"},"Avg_balance":{"$avg":{"$sum":"$Account.Balance"}}}},{"$match":{"Total_balance":{"$gt":"Avg_balance"}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_
code","Total_Balance":{"$sum":"$Account.Balance"}}},{"$project":{"_id":0,"Total_balance":1}}])
[ {}, {}, {}, {}, {} ]
Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_Balance":{"$sum":"$Account.Balance"}}},{"$project":{"_id":0,"Total_Balance":1}}])
[
  { Total_Balance: 58750 },
  { Total_Balance: 984000 },
  { Total_Balance: 607000 },
  { Total_Balance: 48000 },
  { Total_Balance: 22200 }
]
Bank> var result= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_Balance":{"$sum":"$Account.Balance"}}},{"$project":{"_id":0,"Total_Balance":1}}]).toArray()

Bank> var new_totalBalance=0;result.forEach(function (item){new_total_Balance+=item.Total_Balance;})
ReferenceError: new_total_Balance is not defined
Bank> var new_totalBalance=0;result.forEach(function (item){new_totalBalance+=item.Total_Balance;})

Bank> var result1= db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Ac
count.Branch_code","Total_Balance":{"$sum":"$Account.Balance"}}},{"$project":{"_id":0,"Total_Balance":1}}]).count()
TypeError: db.CUSTOMERS. ... :1}}]).count is not a function
Bank> var new_totalBalance=0,count=0;result.forEach(function (item){new_totalBalance+=item.Total_Balance;count++;})

Bank> var Avg_Balance=new_totalBalance/count;

Bank> console.log(Avg_Balance)
343990

Bank> db.CUSTOMERS.aggregate([{"$unwind":"$Account"},{"$match":{"Account.Branch_code":{"$ne":""}}},{"$group":{"_id":"$Account.Branch_code","Total_balance":{"$sum":"$Account.Balance"}}},{"$match":{"Total_balance":{"$gt":Avg_Balance}}},{"$project":{"_id":0,"Account.Branch_code":"$_id","Total_balance":1}}])
[
  { Total_balance: 984000, Account: { Branch_code: 'B004' } },
  { Total_balance: 607000, Account: { Branch_code: 'B005' } }
]

test> use Bank2
switched to db Bank2
Bank2> show dbs
Bank        256.00 KiB
University    1.40 MiB
admin        40.00 KiB
config       84.00 KiB
local        88.00 KiB
test        224.00 KiB
Bank2> use test
switched to db test
test> use Bank
switched to db Bank
Bank> db.createView("CUSTOMER_ACC_DETAILS","CUSTOMERS",[{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance"}}])
{ ok: 1 }
Bank> db.CUSTOMER_ACC_DETAILS.find({})
[
  {
    Customer_No: 'C0001',
    Name: 'Raj Anand Singh',
    Account_number: [ 'A0005' ],
    Balance: [ 28500 ]
  },
  {
    Customer_No: 'C0002',
    Name: 'Ankita Singh',
    Account_number: [ 'A0005' ],
    Balance: [ 28500 ]
  },
  {
    Customer_No: 'C0003',
    Name: 'Soumya Jha',
    Account_number: [ 'A0001' ],
    Balance: [ 20000 ]
  },
  {
    Customer_No: 'C0004',
    Name: 'Abhijit Mishra',
    Account_number: [ 'A0001', 'A0002' ],
    Balance: [ 20000, 15000 ]
  },
  {
    Customer_No: 'C0005',
    Name: 'Yash Saraf',
    Account_number: [ '' ],
    Balance: [ null ]
  },
  {
    Customer_No: 'C0006',
    Name: 'Swaroop Ray',
    Account_number: [ 'A0003', 'A0004', 'A0010' ],
    Balance: [ 850000, 35000, 99000 ]
  },
  {
    Customer_No: 'C0007',
    Name: 'Surya Narayan',
    Account_number: [ 'A0009' ],
    Balance: [ 18750 ]
  },
  {
    Customer_No: 'C0008',
    Name: 'Pranav Praveen',
    Account_number: [ 'A0008' ],
    Balance: [ 7200 ]
  },
  {
    Customer_No: 'C0009',
    Name: 'Stuti Mishra',
    Account_number: [ 'A0007' ],
    Balance: [ 48000 ]
  },
  {
    Customer_No: 'C0010',
    Name: 'Aslesha Tiwari',
    Account_number: [ 'A0006' ],
    Balance: [ 550000 ]
  }
]
Bank> use Bank2
switched to db Bank2
Bank2> db.createView("CUSTOMER_ACC_DETAILS","CUSTOMERS",[{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance"}}])
{ ok: 1 }
Bank2> db.CUSTOMER_ACC_DETAILS.find({})
[
  {
    Customer_No: 'C0001',
    Name: 'Raj Anand Singh',
    Account_number: [ 'A0005' ],
    Balance: [ 28500 ]
  },
  {
    Customer_No: 'C0002',
    Name: 'Ankita Singh',
    Account_number: [ 'A0005' ],
    Balance: [ 28500 ]
  },
  {
    Customer_No: 'C0003',
    Name: 'Soumya Jha',
    Account_number: [ 'A0001' ],
    Balance: [ 20000 ]
  },
  {
    Customer_No: 'C0004',
    Name: 'Abhijit Mishra',
    Account_number: [ 'A0001', 'A0002' ],
    Balance: [ 20000, 15000 ]
  },
  {
    Customer_No: 'C0005',
    Name: 'Yash Saraf',
    Account_number: [ '' ],
    Balance: [ null ]
  },
  {
    Customer_No: 'C0006',
    Name: 'Swaroop Ray',
    Account_number: [ 'A0003', 'A0004', 'A0010' ],
    Balance: [ 850000, 35000, 99000 ]
  },
  {
    Customer_No: 'C0007',
    Name: 'Surya Narayan',
    Account_number: [ 'A0009' ],
    Balance: [ 18750 ]
  },
  {
    Customer_No: 'C0008',
    Name: 'Pranav Praveen',
    Account_number: [ 'A0008' ],
    Balance: [ 7200 ]
  },
  {
    Customer_No: 'C0009',
    Name: 'Stuti Mishra',
    Account_number: [ 'A0007' ],
    Balance: [ 48000 ]
  },
  {
    Customer_No: 'C0010',
    Name: 'Aslesha Tiwari',
    Account_number: [ 'A0006' ],
    Balance: [ 550000 ]
  }
]
Bank2> db.CUSTOMER_ACC_DETAILS.deleteOne({"Customer_No":"C0004"})
MongoServerError: Namespace Bank2.CUSTOMER_ACC_DETAILS is a view, not a collection
Bank2> db.CUSTOMER_ACC_DETAILS.updateOne({"Customer_No":"C0004"},{"$unset":"$Customer_No"})
MongoServerError: Namespace Bank2.CUSTOMER_ACC_DETAILS is a view, not a collection
Bank2> db.CUSTOMER_ACC_DETAILS.updateMany({},{"$set":{"Phone_No":null}})
MongoServerError: Namespace Bank2.CUSTOMER_ACC_DETAILS is a view, not a collection
Bank2> db.CUSTOMER_ACC_DETAILS.insertOne({"Customer_No":"C0004","Name":"Abhijit Mishra","Account_number":['A0001','A0002'],"Balance":[20000,15000]})
MongoServerError: Namespace Bank2.CUSTOMER_ACC_DETAILS is a view, not a collection
Bank2> db.CUSTOMER_ACC_DETAILS.remove({"Customer_No":"C0004"})
DeprecationWarning: Collection.remove() is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
MongoServerError: Namespace Bank2.CUSTOMER_ACC_DETAILS is a view, not a collection
Bank2> db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$match":{"Customer_No":{"$ne":"C0004"}}}]})
{ ok: 1 }
Bank2> db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$match":{"Customer_No":{"$ne":"C0004"}}},{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance"}}]})
{ ok: 1 }
Bank2> db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$match":{"Cust_no":{"$ne":"C0004"}}},{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance"}}]})
{ ok: 1 }
Bank2> db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$match":{"Cust_no":{"$eq":"C0004"}}},{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance"}}]})
{ ok: 1 }
Bank2> db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$match":{"Cust_no":{"$eq":"C0004"}}},{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_n
Uncaught:
SyntaxError: Unterminated string constant. (1:198)

> 1 | db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$match":{"Cust_no":{"$eq":"C0004"}}},{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_n
    |
                                                                       ^
  2 |

Bank2> db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$match":{"Cust_no":{"$ne":"C0004"}}},{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance"}}]})
{ ok: 1 }
Bank2> db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance"}]})
Uncaught:
SyntaxError: Unexpected token, expected "," (1:210)

> 1 | db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance"}]})
    |
                                                                                   ^
  2 |

Bank2> db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance"}}]})
{ ok: 1 }
Bank2> db.CUSTOMER_ACC_DETAILS.aggregate([{"$match":{"Cust_no":{"$ne":"C0004"}}},{"$unset":{"Customer_No":"C0004"}}])
MongoServerError: $unset specification must be a string or an array
Bank2> db.CUSTOMER_ACC_DETAILS.aggregate([{"$match":{"Cust_no":{"$ne":"C0004"}}},{"$unset":"C0004"}])
[
  {
    Customer_No: 'C0001',
    Name: 'Raj Anand Singh',
    Account_number: [ 'A0005' ],
    Balance: [ 28500 ]
  },
  {
    Customer_No: 'C0002',
    Name: 'Ankita Singh',
    Account_number: [ 'A0005' ],
    Balance: [ 28500 ]
  },
  {
    Customer_No: 'C0003',
    Name: 'Soumya Jha',
    Account_number: [ 'A0001' ],
    Balance: [ 20000 ]
  },
  {
    Customer_No: 'C0004',
    Name: 'Abhijit Mishra',
    Account_number: [ 'A0001', 'A0002' ],
    Balance: [ 20000, 15000 ]
  },
  {
    Customer_No: 'C0005',
    Name: 'Yash Saraf',
    Account_number: [ '' ],
    Balance: [ null ]
  },
  {
    Customer_No: 'C0006',
    Name: 'Swaroop Ray',
    Account_number: [ 'A0003', 'A0004', 'A0010' ],
    Balance: [ 850000, 35000, 99000 ]
  },
  {
    Customer_No: 'C0007',
    Name: 'Surya Narayan',
    Account_number: [ 'A0009' ],
    Balance: [ 18750 ]
  },
  {
    Customer_No: 'C0008',
    Name: 'Pranav Praveen',
    Account_number: [ 'A0008' ],
    Balance: [ 7200 ]
  },
  {
    Customer_No: 'C0009',
    Name: 'Stuti Mishra',
    Account_number: [ 'A0007' ],
    Balance: [ 48000 ]
  },
  {
    Customer_No: 'C0010',
    Name: 'Aslesha Tiwari',
    Account_number: [ 'A0006' ],
    Balance: [ 550000 ]
  }
]
Bank2> db.runCommand({"collMod":"CUSTOMER_ACC_DETAILS","viewOn":"CUSTOMERS","pipeline":[{"$project":{"_id":0,"Customer_No":"$Cust_no","Name":"$Name","Account_number":"$Account.Account_no","Balance":"$Account.Balance","Phone_no":"$Phone_no"}}]})
{ ok: 1 }
Bank2> db.CUSTOMER_ACC_DETAILS.find({})
[
  {
    Customer_No: 'C0001',
    Name: 'Raj Anand Singh',
    Account_number: [ 'A0005' ],
    Balance: [ 28500 ],
    Phone_no: 9861258466
  },
  {
    Customer_No: 'C0002',
    Name: 'Ankita Singh',
    Account_number: [ 'A0005' ],
    Balance: [ 28500 ],
    Phone_no: 9879958651
  },
  {
    Customer_No: 'C0003',
    Name: 'Soumya Jha',
    Account_number: [ 'A0001' ],
    Balance: [ 20000 ],
    Phone_no: 9885623344
  },
  {
    Customer_No: 'C0004',
    Name: 'Abhijit Mishra',
    Account_number: [ 'A0001', 'A0002' ],
    Balance: [ 20000, 15000 ],
    Phone_no: 9455845425
  },
  {
    Customer_No: 'C0005',
    Name: 'Yash Saraf',
    Account_number: [ '' ],
    Balance: [ null ],
    Phone_no: 9665854585
  },
  {
    Customer_No: 'C0006',
    Name: 'Swaroop Ray',
    Account_number: [ 'A0003', 'A0004', 'A0010' ],
    Balance: [ 850000, 35000, 99000 ],
    Phone_no: 9437855466
  },
  {
    Customer_No: 'C0007',
    Name: 'Surya Narayan',
    Account_number: [ 'A0009' ],
    Balance: [ 18750 ],
    Phone_no: 9937955215
  },
  {
    Customer_No: 'C0008',
    Name: 'Pranav Praveen',
    Account_number: [ 'A0008' ],
    Balance: [ 7200 ],
    Phone_no: 9336652441
  },
  {
    Customer_No: 'C0009',
    Name: 'Stuti Mishra',
    Account_number: [ 'A0007' ],
    Balance: [ 48000 ],
    Phone_no: 7870266534
  },
  {
    Customer_No: 'C0010',
    Name: 'Aslesha Tiwari',
    Account_number: [ 'A0006' ],
    Balance: [ 550000 ],
    Phone_no: null
  }
]
Bank2> db.createView("BRANCH_LOCATE","CUSTOMERS",[{"$match":{"Account.Branch_city":{"$ne":"Kolkata"}}},{"$project":{"_id":0,"Branch_Name":"$Account.Branch_name":1,"Branch_city":"$Account.Branch_city":1}}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:153)

> 1 | db.createView("BRANCH_LOCATE","CUSTOMERS",[{"$match":{"Account.Branch_city":{"$ne":"Kolkata"}}},{"$project":{"_id":0,"Branch_Name":"$Account.Branch_name":1,"Branch_city":"$Account.Branch_city":1}}])
    |
                          ^
  2 |

Bank2> db.createView("BRANCH_LOCATE","CUSTOMERS",[{"$match":{"Account.Branch_city":{"$ne":"Kolkata"}}},{"$project":{"_id":0,"Branch_Name":"$Account.Branch_name","Branch_city":"$Account.Branch_city"}}])
{ ok: 1 }
Bank2> db.BRANCH_LOCATE.find({})
[
  { Branch_Name: [ 'Juhu Branch' ], Branch_city: [ 'Mumbai' ] },
  {
    Branch_Name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Branch_city: [ 'Mumbai', 'Delhi' ]
  },
  { Branch_Name: [ '' ], Branch_city: [ '' ] },
  {
    Branch_Name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Branch_city: [ 'Mumbai', 'Mumbai', 'Mumbai' ]
  },
  { Branch_Name: [ 'Juhu Branch' ], Branch_city: [ 'Mumbai' ] },
  { Branch_Name: [ 'Chandnichowk Branch' ], Branch_city: [ 'Delhi' ] },
  { Branch_Name: [ 'Janakpuri Branch' ], Branch_city: [ 'Delhi' ] }
]
Bank2> db.BRANCH_LOCATE.drop()
true
Bank2> db.createView("BRANCH_LOCATE","CUSTOMERS",[{"$match":{"Account.Branch_city":{"$nin":["Kolkata",""]}}},{"$project":{"_id":0,"Branch_Name":"$Account.Branch_name","Branch_city":"$Account.Branch_city"}}])
{ ok: 1 }
Bank2> db.BRANCH_LOCATE.drop()
true
Bank2> db.createView("BRANCH_LOCATE","CUSTOMERS",[{"$match":{"Account.Branch_city":{"$nin":["Kolkata",""]}}},{"$project":{"_id":0,"Branch_Name":"$Account.Branch_name","Branch_city":"$Account.Branch_city"}}])
{ ok: 1 }
Bank2> db.BRANCH_LOCATE.drop()
true
Bank2>

Bank2>

Bank2>

Bank2>

Bank2>

Bank2>

Bank2> db.createView("BRANCH_LOCATE","CUSTOMERS",[{"$match":{"Account.Branch_city":{"$nin":["Kolkata",""]}}},{"$project":{"_id":0,"Branch_Name":"$Account.Branch_name","Branch_city":"$Account.Branch_city"}}])
{ ok: 1 }
Bank2> db.BRANCH_LOCATE.find({})
[
  { Branch_Name: [ 'Juhu Branch' ], Branch_city: [ 'Mumbai' ] },
  {
    Branch_Name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Branch_city: [ 'Mumbai', 'Delhi' ]
  },
  {
    Branch_Name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Branch_city: [ 'Mumbai', 'Mumbai', 'Mumbai' ]
  },
  { Branch_Name: [ 'Juhu Branch' ], Branch_city: [ 'Mumbai' ] },
  { Branch_Name: [ 'Chandnichowk Branch' ], Branch_city: [ 'Delhi' ] },
  { Branch_Name: [ 'Janakpuri Branch' ], Branch_city: [ 'Delhi' ] }
]
Bank2> db.createView("LOAN_M","CUSTOMERS",[{"$match":{"Loan.Branch_city":{"$eq":"Mumbai"]}}},{"$project":{"_id":0,"Name":"$Name","Loan_no":"$Loan.Loan_no","Amount":"$Loan.Amount"}}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:81)

> 1 | db.createView("LOAN_M","CUSTOMERS",[{"$match":{"Loan.Branch_city":{"$eq":"Mumbai"]}}},{"$project":{"_id":0,"Name":"$Name","Loan_no":"$Loan.Loan_no","Amount":"$Loan.Amount"}}])
    |                                                                                  ^
  2 |

Bank2> db.createView("LOAN_M","CUSTOMERS",[{"$match":{"Loan.Branch_city":{"$eq":"Mumbai"}}},{"$project":{"_id":0,"Name":"$Name","Loan_no":"$Loan.Loan_no","Amount":"$Loan.Amount"}}])
{ ok: 1 }
Bank2> db.LOAN_M.find({})
[
  { Name: 'Ankita Singh', Loan_no: 'L0003', Amount: 8000000 },
  { Name: 'Aslesha Tiwari', Loan_no: 'L0004', Amount: 100000 }
]
Bank2> db.LOAN_M.find({"Amount":{"$gte":50000,"$lte":500000}},{"Name":1})
[ { Name: 'Aslesha Tiwari' } ]
Bank2> db.CUSTOMERS.find({"Loan.Amount":{"$gte":50000,"$lte":500000},"Loan.Branch_city":"Mumbai"},{"_id":0,"Name":1})
[ { Name: 'Aslesha Tiwari' } ]
Bank2> db.createView("ALL_CUSTOMERS","CUSTOMERS",["$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_city":"$Account.Branch_city","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_city":"$Loan.Branch_city"}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:53)

> 1 | db.createView("ALL_CUSTOMERS","CUSTOMERS",["$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_city":"$Account.Branch_city","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_city":"$Loan.Branch_city"}])
    |                                                      ^
  2 |

Bank2> db.createView("ALL_CUSTOMERS","CUSTOMERS",["$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_city":"$Account.Branch_city","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_city":"$Loan.Branch_city"}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:53)

> 1 | db.createView("ALL_CUSTOMERS","CUSTOMERS",["$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_city":"$Account.Branch_city","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_city":"$Loan.Branch_city"}])
    |                                                      ^
  2 |

Bank2> db.createView("ALL_CUSTOMERS","CUSTOMERS",["$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_city":"$Account.Branch_city","Loan_Branch_city":"$Loan.Branch_city"}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:53)

> 1 | db.createView("ALL_CUSTOMERS","CUSTOMERS",["$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_city":"$Account.Branch_city","Loan_Branch_city":"$Loan.Branch_city"}])
    |                                                      ^
  2 |

Bank2> db.createView("ALL_CUSTOMERS","CUSTOMERS",[{"$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_city":"$Account.Branch_city","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_city":"$Loan.Branch_city"}}])
{ ok: 1 }
Bank2> db.ALL_CUSTOMERS.find({})
[
  {
    _id: ObjectId("651627128ce4a541606305b0"),
    Name: 'Raj Anand Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_city: 'Kolkata'
  },
  {
    _id: ObjectId("6516276b8ce4a541606305b2"),
    Name: 'Ankita Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_city: 'Mumbai'
  },
  {
    _id: ObjectId("651627828ce4a541606305b3"),
    Name: 'Soumya Jha',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_city: ''
  },
  {
    _id: ObjectId("6516292a8ce4a541606305b4"),
    Name: 'Abhijit Mishra',
    Acc_Branch_code: [ 'B003', 'B002' ],
    Acc_Branch_city: [ 'Mumbai', 'Delhi' ],
    Loan_Branch_code: '',
    Loan_Branch_city: ''
  },
  {
    _id: ObjectId("65162a468ce4a541606305b5"),
    Name: 'Yash Saraf',
    Acc_Branch_code: [ '' ],
    Acc_Branch_city: [ '' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_city: 'Chennai'
  },
  {
    _id: ObjectId("65162b148ce4a541606305b6"),
    Name: 'Swaroop Ray',
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Acc_Branch_city: [ 'Mumbai', 'Mumbai', 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_city: ''
  },
  {
    _id: ObjectId("65162b878ce4a541606305b7"),
    Name: 'Surya Narayan',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_city: ''
  },
  {
    _id: ObjectId("65162ced8ce4a541606305b8"),
    Name: 'Pranav Praveen',
    Acc_Branch_code: [ 'B002' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_city: 'Chennai'
  },
  {
    _id: ObjectId("65162dfd8ce4a541606305b9"),
    Name: 'Stuti Mishra',
    Acc_Branch_code: [ 'B001' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_city: 'Kolkata'
  },
  {
    _id: ObjectId("65162ec78ce4a541606305ba"),
    Name: 'Aslesha Tiwari',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_city: 'Mumbai'
  }
]
Bank2> db.ALL_CUSTOMERS.drop()
true
Bank2> db.createView("ALL_CUSTOMERS","CUSTOMERS",[{"$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_name":"$Account.Branch_name","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_name":"$Loan.Branch_name"}}])
{ ok: 1 }
Bank2> db.ALL_CUSTOMERS.find({"$and":[{"$or":[{"Acc_Branch_name":"Juhu Branch"},{"Loan_Branch_name":"Juhu Branch"}]},{"$or":[{"Acc_Branch_code":{"$ne":""}},{"Acc_Loan_Branch_code":{"$ne":""}}]}]},{"Name":1})
[
  { _id: ObjectId("651627828ce4a541606305b3"), Name: 'Soumya Jha' },
  { _id: ObjectId("6516292a8ce4a541606305b4"), Name: 'Abhijit Mishra' },
  { _id: ObjectId("65162b878ce4a541606305b7"), Name: 'Surya Narayan' }
]
Bank2> db.ALL_CUSTOMERS.find({})
[
  {
    _id: ObjectId("651627128ce4a541606305b0"),
    Name: 'Raj Anand Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch'
  },
  {
    _id: ObjectId("6516276b8ce4a541606305b2"),
    Name: 'Ankita Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch'
  },
  {
    _id: ObjectId("651627828ce4a541606305b3"),
    Name: 'Soumya Jha',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    _id: ObjectId("6516292a8ce4a541606305b4"),
    Name: 'Abhijit Mishra',
    Acc_Branch_code: [ 'B003', 'B002' ],
    Acc_Branch_name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    _id: ObjectId("65162a468ce4a541606305b5"),
    Name: 'Yash Saraf',
    Acc_Branch_code: [ '' ],
    Acc_Branch_name: [ '' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch'
  },
  {
    _id: ObjectId("65162b148ce4a541606305b6"),
    Name: 'Swaroop Ray',
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Acc_Branch_name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    _id: ObjectId("65162b878ce4a541606305b7"),
    Name: 'Surya Narayan',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    _id: ObjectId("65162ced8ce4a541606305b8"),
    Name: 'Pranav Praveen',
    Acc_Branch_code: [ 'B002' ],
    Acc_Branch_name: [ 'Chandnichowk Branch' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch'
  },
  {
    _id: ObjectId("65162dfd8ce4a541606305b9"),
    Name: 'Stuti Mishra',
    Acc_Branch_code: [ 'B001' ],
    Acc_Branch_name: [ 'Janakpuri Branch' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch'
  },
  {
    _id: ObjectId("65162ec78ce4a541606305ba"),
    Name: 'Aslesha Tiwari',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch'
  }
]
Bank2> db.ALL_CUSTOMERS.find({"$and":[{"$or":[{"Acc_Branch_name":"Juhu Branch"},{"Loan_Branch_name":"Juhu Branch"}]},{"$or":[{"Acc_Branch_code":{"$ne":""}},{"Acc_Loan_Branch_code":{"$ne":""}}]}]},{"Name
Uncaught:
SyntaxError: Unterminated string constant. (1:190)

> 1 | db.ALL_CUSTOMERS.find({"$and":[{"$or":[{"Acc_Branch_name":"Juhu Branch"},{"Loan_Branch_name":"Juhu Branch"}]},{"$or":[{"Acc_Branch_code":{"$ne":""}},{"Acc_Loan_Branch_code":{"$ne":""}}]}]},{"Name
    |
                                                               ^
  2 |

Bank2> db.createView("ALL_CUSTOMERS","CUSTOMERS",[{"$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_name":"$Account.Branch_name","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_name":"$Loan.Branch_name"}}
...
Bank2> db.ALL_CUSTOMERS.drop()
true
Bank2> db.createView("ALL_CUSTOMERS","CUSTOMERS",[{"$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_name":"$Account.Branch_name","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_name":"$Loan.Branch_name"},"_id":0}])
MongoServerError: A pipeline stage specification object must contain exactly one field.
Bank2> db.createView("ALL_CUSTOMERS","CUSTOMERS",[{"$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_name":"$Account.Branch_name","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_name":"$Loan.Branch_name"},"_id":0
... db.createView("ALL_CUSTOMERS","CUSTOMERS",[{"$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_name":"$Account.Branch_name","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_name":"$Loan.Branch_name"},"_id":0
Bank2> db.createView("ALL_CUSTOMERS","CUSTOMERS",[{"$project":{"Name":"$Name","Acc_Branch_code":"$Account.Branch_code","Acc_Branch_name":"$Account.Branch_name","Loan_Branch_code":"$Loan.Branch_code","Loan_Branch_name":"$Loan.Branch_name","_id":0}}])
{ ok: 1 }
Bank2> db.ALL_CUSTOMERS.find({})
[
  {
    Name: 'Raj Anand Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch'
  },
  {
    Name: 'Ankita Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch'
  },
  {
    Name: 'Soumya Jha',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    Name: 'Abhijit Mishra',
    Acc_Branch_code: [ 'B003', 'B002' ],
    Acc_Branch_name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    Name: 'Yash Saraf',
    Acc_Branch_code: [ '' ],
    Acc_Branch_name: [ '' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch'
  },
  {
    Name: 'Swaroop Ray',
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Acc_Branch_name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    Name: 'Surya Narayan',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    Name: 'Pranav Praveen',
    Acc_Branch_code: [ 'B002' ],
    Acc_Branch_name: [ 'Chandnichowk Branch' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch'
  },
  {
    Name: 'Stuti Mishra',
    Acc_Branch_code: [ 'B001' ],
    Acc_Branch_name: [ 'Janakpuri Branch' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch'
  },
  {
    Name: 'Aslesha Tiwari',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch'
  }
]
Bank2> db.ALL_CUSTOMERS.find({"$and":[{"$or":[{"Acc_Branch_name":"Juhu Branch"},{"Loan_Branch_name":"Juhu Branch"}]},{"$or":[{"Acc_Branch_code":{"$ne":""}},{"Acc_Loan_Branch_code":{"$ne":""}}]}]},{"Name":1})
[
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Surya Narayan' }
]
Bank2> db.ALL_CUSTOMERS.drop()
true
Bank2> db.createView("ALL_CUSTOMERS", "CUSTOMERS", [{ "$project": { "Name": "$Name", "Acc_Branch_code": "$Account.Branch_code", "Acc_Branch_name": "$Account.Branch_name", "Loan_Branch_code": "$Loan.Branch_code", "Loan_Branch_name": "$Loan.Branch_name", "_id": 0, "Customer_No":"$Cust_no" } }])
{ ok: 1 }
Bank2> db.ALL_CUSTOMERS.find({})
[
  {
    Name: 'Raj Anand Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Customer_No: 'C0001'
  },
  {
    Name: 'Ankita Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Customer_No: 'C0002'
  },
  {
    Name: 'Soumya Jha',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Customer_No: 'C0003'
  },
  {
    Name: 'Abhijit Mishra',
    Acc_Branch_code: [ 'B003', 'B002' ],
    Acc_Branch_name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Customer_No: 'C0004'
  },
  {
    Name: 'Yash Saraf',
    Acc_Branch_code: [ '' ],
    Acc_Branch_name: [ '' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Customer_No: 'C0005'
  },
  {
    Name: 'Swaroop Ray',
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Acc_Branch_name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Customer_No: 'C0006'
  },
  {
    Name: 'Surya Narayan',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Customer_No: 'C0007'
  },
  {
    Name: 'Pranav Praveen',
    Acc_Branch_code: [ 'B002' ],
    Acc_Branch_name: [ 'Chandnichowk Branch' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Customer_No: 'C0008'
  },
  {
    Name: 'Stuti Mishra',
    Acc_Branch_code: [ 'B001' ],
    Acc_Branch_name: [ 'Janakpuri Branch' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Customer_No: 'C0009'
  },
  {
    Name: 'Aslesha Tiwari',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Customer_No: 'C0010'
  }
]
Bank2> db.createView("ALL_CUSTOMERS", "CUSTOMERS", [{ "$project": { "Name": "$Name", "Acc_Branch_code": "$Account.Branch_code", "Acc_Branch_name": "$Account.Branch_name", "Loan_Branch_code": "$Loan.Branch_code", "Loan_Branch_name": "$Loan.Branch_name", "_id": 0, "Customer_No":"$Cust_no"
...
Bank2> db.ALL_CUSTOMERS.drop()
true
Bank2> db.createView("ALL_CUSTOMERS", "CUSTOMERS", [{ "$project": {"Customer_No":"$Cust_no", "Name": "$Name", "Acc_Branch_code": "$Account.Branch_code", "Acc_Branch_name": "$Account.Branch_name", "Loan_Branch_code": "$Loan.Branch_code", "Loan_Branch_name": "$Loan.Branch_name", "_id": 0 } }])
{ ok: 1 }
Bank2> db.ALL_CUSTOMERS.find({})
[
  {
    Customer_No: 'C0001',
    Name: 'Raj Anand Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch'
  },
  {
    Customer_No: 'C0002',
    Name: 'Ankita Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch'
  },
  {
    Customer_No: 'C0003',
    Name: 'Soumya Jha',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    Customer_No: 'C0004',
    Name: 'Abhijit Mishra',
    Acc_Branch_code: [ 'B003', 'B002' ],
    Acc_Branch_name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    Customer_No: 'C0005',
    Name: 'Yash Saraf',
    Acc_Branch_code: [ '' ],
    Acc_Branch_name: [ '' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch'
  },
  {
    Customer_No: 'C0006',
    Name: 'Swaroop Ray',
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Acc_Branch_name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    Customer_No: 'C0007',
    Name: 'Surya Narayan',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Loan_Branch_code: '',
    Loan_Branch_name: ''
  },
  {
    Customer_No: 'C0008',
    Name: 'Pranav Praveen',
    Acc_Branch_code: [ 'B002' ],
    Acc_Branch_name: [ 'Chandnichowk Branch' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch'
  },
  {
    Customer_No: 'C0009',
    Name: 'Stuti Mishra',
    Acc_Branch_code: [ 'B001' ],
    Acc_Branch_name: [ 'Janakpuri Branch' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch'
  },
  {
    Customer_No: 'C0010',
    Name: 'Aslesha Tiwari',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch'
  }
]
Bank2> db.ALL_CUSTOMERS.find({"$and":[{"$or":[{"Acc_Branch_name":"Juhu Branch"},{"Loan_Branch_name":"Juhu Branch"}]},{"$or":[{"Acc_Branch_code":{"$ne":""}},{"Acc_Loan_Branch_code":{"$ne":""}}]}]},{"Customer_No":1,"Name":1})
[
  { Customer_No: 'C0003', Name: 'Soumya Jha' },
  { Customer_No: 'C0004', Name: 'Abhijit Mishra' },
  { Customer_No: 'C0007', Name: 'Surya Narayan' }
]
Bank2> db.ALL_CUSTOMERS.drop()
true
Bank2> db.createView("ALL_CUSTOMERS", "CUSTOMERS", [{ "$project": {"Customer_No":"$Cust_no", "Name": "$Name", "Acc_Branch_code": "$Account.Branch_code", "Acc_Branch_name": "$Account.Branch_name", "Acc_Branch_city": "$Account.Branch_city","Loan_Branch_code": "$Loan.Branch_code", "Loan_Branch_name": "$Loan.Branch_name", "Loan_Branch_city":"Loan.Branch_city", "_id": 0 } }])
{ ok: 1 }
Bank2> db.ALL_CUSTOMERS.find({})
[
  {
    Customer_No: 'C0001',
    Name: 'Raj Anand Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Loan_Branch_city: 'Loan.Branch_city'
  },
  {
    Customer_No: 'C0002',
    Name: 'Ankita Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Loan_Branch_city: 'Loan.Branch_city'
  },
  {
    Customer_No: 'C0003',
    Name: 'Soumya Jha',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: 'Loan.Branch_city'
  },
  {
    Customer_No: 'C0004',
    Name: 'Abhijit Mishra',
    Acc_Branch_code: [ 'B003', 'B002' ],
    Acc_Branch_name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Acc_Branch_city: [ 'Mumbai', 'Delhi' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: 'Loan.Branch_city'
  },
  {
    Customer_No: 'C0005',
    Name: 'Yash Saraf',
    Acc_Branch_code: [ '' ],
    Acc_Branch_name: [ '' ],
    Acc_Branch_city: [ '' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Loan_Branch_city: 'Loan.Branch_city'
  },
  {
    Customer_No: 'C0006',
    Name: 'Swaroop Ray',
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Acc_Branch_name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Acc_Branch_city: [ 'Mumbai', 'Mumbai', 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: 'Loan.Branch_city'
  },
  {
    Customer_No: 'C0007',
    Name: 'Surya Narayan',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: 'Loan.Branch_city'
  },
  {
    Customer_No: 'C0008',
    Name: 'Pranav Praveen',
    Acc_Branch_code: [ 'B002' ],
    Acc_Branch_name: [ 'Chandnichowk Branch' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Loan_Branch_city: 'Loan.Branch_city'
  },
  {
    Customer_No: 'C0009',
    Name: 'Stuti Mishra',
    Acc_Branch_code: [ 'B001' ],
    Acc_Branch_name: [ 'Janakpuri Branch' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Loan_Branch_city: 'Loan.Branch_city'
  },
  {
    Customer_No: 'C0010',
    Name: 'Aslesha Tiwari',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Loan_Branch_city: 'Loan.Branch_city'
  }
]
Bank2> db.ALL_CUSTOMERS.find({"$and":[{"$or":[{"Acc_Branch_name":"Juhu Branch"},{"Loan_Branch_name":"Juhu Branch"}]},{"$or":[{"Acc_Branch_code":{"$ne":""}},{"Acc_Loan_Branch_code":{"$ne":""}}]}]},{"Customer_No":1,"Name":1})
[
  { Customer_No: 'C0003', Name: 'Soumya Jha' },
  { Customer_No: 'C0004', Name: 'Abhijit Mishra' },
  { Customer_No: 'C0007', Name: 'Surya Narayan' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{"$group":{"_id":{"Acc_Branch_code":"$Acc_Branch_code","Loan_Branch_code":"$Loan_Branch_code"},"No_of_Customers":{"$count":{}}}},{"$project":{"No_of_Customers":1}}])
[
  {
    _id: { Acc_Branch_code: [ 'B003', 'B002' ], Loan_Branch_code: '' },
    No_of_Customers: 1
  },
  {
    _id: { Acc_Branch_code: [ 'B002' ], Loan_Branch_code: 'B006' },
    No_of_Customers: 1
  },
  {
    _id: {
      Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
      Loan_Branch_code: ''
    },
    No_of_Customers: 1
  },
  {
    _id: { Acc_Branch_code: [ 'B003' ], Loan_Branch_code: '' },
    No_of_Customers: 2
  },
  {
    _id: { Acc_Branch_code: [ '' ], Loan_Branch_code: 'B006' },
    No_of_Customers: 1
  },
  {
    _id: { Acc_Branch_code: [ 'B005' ], Loan_Branch_code: 'B004' },
    No_of_Customers: 2
  },
  {
    _id: { Acc_Branch_code: [ 'B001' ], Loan_Branch_code: 'B005' },
    No_of_Customers: 1
  },
  {
    _id: { Acc_Branch_code: [ 'B005' ], Loan_Branch_code: 'B005' },
    No_of_Customers: 1
  }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{"$group":{"_id":{"Acc_Branch_code":"$Acc_Branch_code","Loan_Branch_code":"$Loan_Branch_code"},"No_of_Customers":{"$count":{}}}},{"$project":{"No_of_Customers":1,"_id":0}}])
[
  { No_of_Customers: 1 },
  { No_of_Customers: 2 },
  { No_of_Customers: 1 },
  { No_of_Customers: 1 },
  { No_of_Customers: 1 },
  { No_of_Customers: 2 },
  { No_of_Customers: 1 },
  { No_of_Customers: 1 }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{"$group":{"_id":{"Acc_Branch_code":"$Acc_Branch_code","Loan_Branch_code":"$Loan_Branch_code"},"No_of_Customers":{"$count":{}}}},{"$project":{"Acc_Branch_code":"$_id","No_of_Customers":1,"_id":0}}])
[
  {
    No_of_Customers: 1,
    Acc_Branch_code: { Acc_Branch_code: [ 'B003', 'B002' ], Loan_Branch_code: '' }
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: { Acc_Branch_code: [ 'B005' ], Loan_Branch_code: 'B005' }
  },
  {
    No_of_Customers: 2,
    Acc_Branch_code: { Acc_Branch_code: [ 'B005' ], Loan_Branch_code: 'B004' }
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: { Acc_Branch_code: [ 'B001' ], Loan_Branch_code: 'B005' }
  },
  {
    No_of_Customers: 2,
    Acc_Branch_code: { Acc_Branch_code: [ 'B003' ], Loan_Branch_code: '' }
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: { Acc_Branch_code: [ '' ], Loan_Branch_code: 'B006' }
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: {
      Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
      Loan_Branch_code: ''
    }
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: { Acc_Branch_code: [ 'B002' ], Loan_Branch_code: 'B006' }
  }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{"$group":{"_id":{"Acc_Branch_code":"$Acc_Branch_code","Loan_Branch_code":"$Loan_Branch_code"},"No_of_Customers":{"$count":{}}}},{"$project":{"Acc_Branch_code":"$_id.Acc_Branch_code","No_of_Customers":1,"_id":0}}])
[
  { No_of_Customers: 1, Acc_Branch_code: [ 'B003', 'B002' ] },
  { No_of_Customers: 1, Acc_Branch_code: [ 'B002' ] },
  { No_of_Customers: 1, Acc_Branch_code: [ 'B004', 'B004', 'B004' ] },
  { No_of_Customers: 2, Acc_Branch_code: [ 'B003' ] },
  { No_of_Customers: 1, Acc_Branch_code: [ '' ] },
  { No_of_Customers: 2, Acc_Branch_code: [ 'B005' ] },
  { No_of_Customers: 1, Acc_Branch_code: [ 'B001' ] },
  { No_of_Customers: 1, Acc_Branch_code: [ 'B005' ] }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{"$group":{"_id":{"Acc_Branch_code":"$Acc_Branch_code","Loan_Branch_code":"$Loan_Branch_code"},"No_of_Customers":{"$count":{}}}},{"$project":{"Acc_Branch_code":"$_id.Acc_Branch_code","Loan_Branch_code":"$_id.Loan_Branch_code","No_of_Customers":1,"_id":0}}])
[
  {
    No_of_Customers: 1,
    Acc_Branch_code: [ 'B002' ],
    Loan_Branch_code: 'B006'
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: [ 'B003', 'B002' ],
    Loan_Branch_code: ''
  },
  {
    No_of_Customers: 2,
    Acc_Branch_code: [ 'B003' ],
    Loan_Branch_code: ''
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: [ '' ],
    Loan_Branch_code: 'B006'
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Loan_Branch_code: ''
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: [ 'B005' ],
    Loan_Branch_code: 'B005'
  },
  {
    No_of_Customers: 2,
    Acc_Branch_code: [ 'B005' ],
    Loan_Branch_code: 'B004'
  },
  {
    No_of_Customers: 1,
    Acc_Branch_code: [ 'B001' ],
    Loan_Branch_code: 'B005'
  }
]
Bank2> db.customers.aggregate([{$project:{Acc_Branch_code: 1,Loan_Branch_code: 1}},{$unwind:"$Acc_Branch_code"},{$unwind:"$Loan_Branch_code"},{ $project:{brBank2> db.customers.aggregate([{$project:{Acc_Branch_code: 1,Loan_Branch_code: 1}},{$unwind:"$Acc_Branch_code"},{$unwind:"$Loan_Branch_code"},{ $project:{branch_code:{$cond:{if:{$ne:["$Acc_Branch_code",""]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])

Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code: 1,Loan_Branch_code: 1}},{$unwind:"$Acc_Branch_code"},{$unwind:"$Loan_Branch_code"},{ $project:{branch_code:{$cond:{if:{$ne:["$Acc_Branch_code",""]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  { customer_count: 3, branch_code: 'B005' },
  { customer_count: 2, branch_code: 'B002' },
  { customer_count: 1, branch_code: 'B006' },
  { customer_count: 3, branch_code: 'B004' },
  { customer_count: 1, branch_code: 'B001' },
  { customer_count: 3, branch_code: 'B003' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$project:{branch_code: {$ifNull: ["$Acc_Branch_code","$Loan_Branch_code"]}}},{$group:{_id_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  { customer_count: 3, branch_code: 'B004' },
  { customer_count: 3, branch_code: 'B005' },
  { customer_count: 2, branch_code: 'B002' },
  { customer_count: 3, branch_code: 'B003' },
  { customer_count: 1, branch_code: '' },
  { customer_count: 1, branch_code: 'B001' }
]
Bank2> db.ALL_CUSTOMERS.drop()
true
Bank2> db.createView("ALL_CUSTOMERS", "CUSTOMERS", [{ "$project": {"Customer_No":"$Cust_no", "Name": "$Name", "Acc_Branch_code": "$Account.Branch_code", "Acc_Branch_name": "$Account.Branch_name", "Acc_Branch_city": "$Account.Branch_city","Loan_Branch_code": "$Loan.Branch_code", "Loan_Branch_name": "$Loan.Branch_name", "Loan_Branch_city":"$Loan.Branch_city", "_id": 0 } }])
{ ok: 1 }
Bank2> db.ALL_CUSTOMERS.find({})
[
  {
    Customer_No: 'C0001',
    Name: 'Raj Anand Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Loan_Branch_city: 'Kolkata'
  },
  {
    Customer_No: 'C0002',
    Name: 'Ankita Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Loan_Branch_city: 'Mumbai'
  },
  {
    Customer_No: 'C0003',
    Name: 'Soumya Jha',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0004',
    Name: 'Abhijit Mishra',
    Acc_Branch_code: [ 'B003', 'B002' ],
    Acc_Branch_name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Acc_Branch_city: [ 'Mumbai', 'Delhi' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0005',
    Name: 'Yash Saraf',
    Acc_Branch_code: [ '' ],
    Acc_Branch_name: [ '' ],
    Acc_Branch_city: [ '' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Loan_Branch_city: 'Chennai'
  },
  {
    Customer_No: 'C0006',
    Name: 'Swaroop Ray',
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Acc_Branch_name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Acc_Branch_city: [ 'Mumbai', 'Mumbai', 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0007',
    Name: 'Surya Narayan',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0008',
    Name: 'Pranav Praveen',
    Acc_Branch_code: [ 'B002' ],
    Acc_Branch_name: [ 'Chandnichowk Branch' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Loan_Branch_city: 'Chennai'
  },
  {
    Customer_No: 'C0009',
    Name: 'Stuti Mishra',
    Acc_Branch_code: [ 'B001' ],
    Acc_Branch_name: [ 'Janakpuri Branch' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Loan_Branch_city: 'Kolkata'
  },
  {
    Customer_No: 'C0010',
    Name: 'Aslesha Tiwari',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Loan_Branch_city: 'Mumbai'
  }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$project:{branch_code: {$ifNull: ["$Acc_Branch_code","$Loan_Branch_code"]}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  { customer_count: 3, branch_code: 'B004' },
  { customer_count: 1, branch_code: 'B001' },
  { customer_count: 3, branch_code: 'B003' },
  { customer_count: 2, branch_code: 'B002' },
  { customer_count: 3, branch_code: 'B005' },
  { customer_count: 1, branch_code: '' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code: 1,Loan_Branch_code: 1}},{$unwind:"$Acc_Branch_code"},{$unwind:"$Loan_Branch_code"},{ $project:{branch_code:{$cond:{if:{$ne:["$Acc_Branch_code",""]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  { customer_count: 3, branch_code: 'B004' },
  { customer_count: 1, branch_code: 'B001' },
  { customer_count: 3, branch_code: 'B003' },
  { customer_count: 2, branch_code: 'B002' },
  { customer_count: 3, branch_code: 'B005' },
  { customer_count: 1, branch_code: 'B006' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$project:{branch_code: {$ifNull: ["$Acc_Branch_code","$Loan_Branch_code"]}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  { customer_count: 3, branch_code: 'B005' },
  { customer_count: 2, branch_code: 'B002' },
  { customer_count: 1, branch_code: '' },
  { customer_count: 3, branch_code: 'B004' },
  { customer_count: 1, branch_code: 'B001' },
  { customer_count: 3, branch_code: 'B003' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$project:{branch_code: {$cond:{if:{$ne:["$Acc_Branch_code", ""]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$pr$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  { customer_count: 3, branch_code: 'B003' },
  { customer_count: 2, branch_code: 'B002' },
  { customer_count: 1, branch_code: 'B006' },
  { customer_count: 1, branch_code: 'B001' },
  { customer_count: 3, branch_code: 'B004' },
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:"$Acc_Branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  { customer_count: 3, branch_code: 'B004' },
  { customer_count: 1, branch_code: 'B001' },
  { customer_count: 3, branch_code: 'B003' },
  { customer_count: 2, branch_code: 'B002' },
  { customer_count: 3, branch_code: 'B005' },
  { customer_count: 1, branch_code: '' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{"Acc_Branch_code":"$Acc_Branch_code","Loan_Branch_code":"$Loan_Branch_code"},customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  {
    customer_count: 1,
    branch_code: { Acc_Branch_code: 'B002', Loan_Branch_code: '' }
  },
  {
    customer_count: 1,
    branch_code: { Acc_Branch_code: '', Loan_Branch_code: 'B006' }
  },
  {
    customer_count: 3,
    branch_code: { Acc_Branch_code: 'B003', Loan_Branch_code: '' }
  },
  {
    customer_count: 1,
    branch_code: { Acc_Branch_code: 'B005', Loan_Branch_code: 'B005' }
  },
  {
    customer_count: 1,
    branch_code: { Acc_Branch_code: 'B002', Loan_Branch_code: 'B006' }
  },
  {
    customer_count: 2,
    branch_code: { Acc_Branch_code: 'B005', Loan_Branch_code: 'B004' }
  },
  {
    customer_count: 1,
    branch_code: { Acc_Branch_code: 'B001', Loan_Branch_code: 'B005' }
  },
  {
    customer_count: 3,
    branch_code: { Acc_Branch_code: 'B004', Loan_Branch_code: '' }
  }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{"Acc_Branch_code":"$Acc_Branch_code","Loan_Branch_code":"$Loan_Branch_code"},customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id.Acc_Branch_code",customer_count:1}}])
[
  { customer_count: 1, branch_code: 'B005' },
  { customer_count: 2, branch_code: 'B005' },
  { customer_count: 1, branch_code: '' },
  { customer_count: 1, branch_code: 'B001' },
  { customer_count: 1, branch_code: 'B002' },
  { customer_count: 3, branch_code: 'B004' },
  { customer_count: 1, branch_code: 'B002' },
  { customer_count: 3, branch_code: 'B003' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:{$cond:{if:{$ifNull:["$Acc_Branch_code",false]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}},customer_count:{$sum:1}}},{$project:{_id:0,brbranch_code:"$_id",customer_count:1}}])
[
  { customer_count: 3, branch_code: 'B004' },
  { customer_count: 1, branch_code: 'B001' },
  { customer_count: 3, branch_code: 'B003' },
  { customer_count: 3, branch_code: 'B005' },
  { customer_count: 2, branch_code: 'B002' },
  { customer_count: 1, branch_code: '' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$project:{branch_code: {$cond:{"$and":[{if:{$ne:["$Acc_Branch_code", ""]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"},{if:{$ne:["$Loan_Branch_code", ""]},then:"$Loan_Branch_code",else:"$Acc_Branch_code"}]}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
MongoServerError: Invalid $project :: caused by :: Unrecognized parameter to $cond: $and
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$project:{branch_code: {$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$concat:["$Acc_Branch_code","/","$Loan_Branch_code"]},else:{$cond:{if:{$ne:["$Acc_Branch_code", ""] },then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,brancbranch_code:"$_id",customer_count:1}}])
[
  { customer_count: 3, branch_code: 'B003' },
  { customer_count: 1, branch_code: 'B001/B005' },
  { customer_count: 1, branch_code: 'B002' },
  { customer_count: 1, branch_code: 'B006' },
  { customer_count: 2, branch_code: 'B005/B004' },
  { customer_count: 1, branch_code: 'B002/B006' },
  { customer_count: 3, branch_code: 'B004' },
  { customer_count: 1, branch_code: 'B005' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$project:{branch_code: {$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:"$Acc_Branch_code",then:"$Loan_Branch_code",else:{$cond:{if:{$ne:["$Acc_Branch_code", ""] },then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  { customer_count: 2, branch_code: 'B005' },
  { customer_count: 1, branch_code: 'B002' },
  { customer_count: 2, branch_code: 'B006' },
  { customer_count: 5, branch_code: 'B004' },
  { customer_count: 3, branch_code: 'B003' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$project:{branch_code: {$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{  $cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Acc_Branch_code",else:"$Loan_Branch_code"}},else:{$cond:{if:{$ne:["$Acc_Branch_code", ""] },then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[
  { customer_count: 5, branch_code: 'B004' },
  { customer_count: 2, branch_code: 'B005' },
  { customer_count: 1, branch_code: 'B002' },
  { customer_count: 3, branch_code: 'B003' },
  { customer_count: 2, branch_code: 'B006' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Acc_Branch_code"}},if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}},else:{$cond:{if:{$ne:["$Acc_Branch_code", ""]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[ { customer_count: 5, branch_code: null } ]
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Acc_Branch_code"}},if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{$ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:"$Loan_Branch_code"}},else:{$cond:{if:{$ne:["$Acc_Branch_code", ""]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
MongoServerError: Missing 'else' parameter to $cond
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Acc_Branch_code"}},if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{$ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:"Loan_Branch_code",else:"$Loan_Branch_code"}},else:{$cond:{if:{$ne:["$Acc_Branch_code", ""]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}},{$group:{_id_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
MongoServerError: unknown group operator '$cond'
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$uBank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Acc_Branch_code"},if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{$ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:"Loan_Branch_code",else:"$Loan_Branch_code"},else:{$cond:{if:{$ne:["$Acc_Branch_code", ""]},then:"$Acc_Branch_code",else:"$Loan_Branch_code"}}}}}},{$group:{_id_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
MongoServerError: An object representing an expression must have exactly one field: { $cond: { if: { $eq: [ "$Acc_Branch_code", "$Loan_Branch_code" ] }, then: "$Acc_Branch_code", else: "$Acc_Branch_code" }, if: { $and: [ { $ne: [ "$Acc_Branch_code", "" ] }, { $ne: [ "$Loan_Branch_code", "" ] }, { $ne: [ "$Acc_Branch_code", "$Loan_Branch_code" ] } ] }, then: "Loan_Branch_code", else: "$Loan_Branch_code" }
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Acc_Branch_code"},else:"$Acc_Branch_code"}}}}},{$group:{_id:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:"$Loan_Branch_code",else:"$Loan_Branch_code"}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
MongoServerError: An object representing an expression must have exactly one field: { $cond: { if: { $eq: [ "$Acc_Branch_code", "$Loan_Branch_code" ] }, then: "$Acc_Branch_code", else: "$Acc_Branch_code" }, else: "$Acc_Branch_code" }
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{branch_code:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Acc_Branch_code"},else:"$Acc_Branch_code"}}}}}},{$group:{_id:{branch_code:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:"$Loan_Branch_code",else:"$Loan_Branch_code"}}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
MongoServerError: An object representing an expression must have exactly one field: { $cond: { if: { $eq: [ "$Acc_Branch_code", "$Loan_Branch_code" ] }, then: "$Acc_Branch_code", else: "$Acc_Branch_code" }, else: "$Acc_Branch_code" }
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{branch_code:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Acc_Branch_code"},else:{$cond:{if:{$ne:["$Acc_Branch_code", ""]},then: "$Acc_Branch_code",else: "$Loan_Branch_code"}}}}}}}},{$group:{_id:{branch_code:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:"$Loan_Branch_code",else:"$Loan_Branch_code"}}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
MongoServerError: An object representing an expression must have exactly one field: { $cond: { if: { $eq: [ "$Acc_Branch_code", "$Loan_Branch_code" ] }, then: "$Acc_Branch_code", else: "$Acc_Branch_code" }, else: { $cond: { if: { $ne: [ "$Acc_Branch_code", "" ] }, then: "$Acc_Branch_code", else: "$Loan_Branch_code" } } }
Bank2> db.ALL_CUSTOMERS.aggregate([{$project:{Acc_Branch_code:1,Loan_Branch_code:1}},{$unwind:{path:"$Acc_Branch_code",preserveNullAndEmptyArrays:true}},{$unwind:{path:"$Loan_Branch_code",preserveNullAndEmptyArrays:true}},{$group:{_id:{branch_code:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:{$cond:{if:{$eq:["$Acc_Branch_code","$Loan_Branch_code"]},then:"$Acc_Branch_code",else:"$Acc_Branch_code"}},else:{$cond:{if:{$ne:["$Acc_Branch_code", ""]},then: "$Acc_Branch_code",else: "$Loan_Branch_code"}}}}}}},{$group:{_id:{branch_code:{$cond:{if:{$and:[{ $ne: ["$Acc_Branch_code", ""] },{ $ne: ["$Loan_Branch_code", ""] },{ $ne: ["$Acc_Branch_code", "$Loan_Branch_code"]}]},then:"$Loan_Branch_code",else:"$Loan_Branch_code"}}}}},{$group:{_id:"$branch_code",customer_count:{$sum:1}}},{$project:{_id:0,branch_code:"$_id",customer_count:1}}])
[ { customer_count: 1, branch_code: null } ]


test> use Bank2
switched to db Bank2
Bank2> db.ALL_CUSTOMERS.find({})
[
  {
    Customer_No: 'C0001',
    Name: 'Raj Anand Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Loan_Branch_city: 'Kolkata'
  },
  {
    Customer_No: 'C0002',
    Name: 'Ankita Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Loan_Branch_city: 'Mumbai'
  },
  {
    Customer_No: 'C0003',
    Name: 'Soumya Jha',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0004',
    Name: 'Abhijit Mishra',
    Acc_Branch_code: [ 'B003', 'B002' ],
    Acc_Branch_name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Acc_Branch_city: [ 'Mumbai', 'Delhi' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0005',
    Name: 'Yash Saraf',
    Acc_Branch_code: [ '' ],
    Acc_Branch_name: [ '' ],
    Acc_Branch_city: [ '' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Loan_Branch_city: 'Chennai'
  },
  {
    Customer_No: 'C0006',
    Name: 'Swaroop Ray',
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Acc_Branch_name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Acc_Branch_city: [ 'Mumbai', 'Mumbai', 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0007',
    Name: 'Surya Narayan',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0008',
    Name: 'Pranav Praveen',
    Acc_Branch_code: [ 'B002' ],
    Acc_Branch_name: [ 'Chandnichowk Branch' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Loan_Branch_city: 'Chennai'
  },
  {
    Customer_No: 'C0009',
    Name: 'Stuti Mishra',
    Acc_Branch_code: [ 'B001' ],
    Acc_Branch_name: [ 'Janakpuri Branch' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Loan_Branch_city: 'Kolkata'
  },
  {
    Customer_No: 'C0010',
    Name: 'Aslesha Tiwari',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Loan_Branch_city: 'Mumbai'
  }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Acc_Branch_code" }, { $group: { _id: "$Acc_Branch_code", Customer_Count: { $$sum: 1 } } }, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }])
[
  { Branch_Code: 'B005', Customer_Count: 3 },
  { Branch_Code: 'B003', Customer_Count: 3 },
  { Branch_Code: '', Customer_Count: 1 },
  { Branch_Code: 'B001', Customer_Count: 1 },
  { Branch_Code: 'B004', Customer_Count: 3 },
  { Branch_Code: 'B002', Customer_Count: 2 }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Acc_Branch_code" }, { $group: { _id: "$Acc_Branch_code", Customer_Count: { $sum: 1 } } }, {$match:{"Branch_Code":{"$ne":""}}}, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }])
[
  { Branch_Code: 'B004', Customer_Count: 3 },
  { Branch_Code: 'B001', Customer_Count: 1 },
  { Branch_Code: 'B003', Customer_Count: 3 },
  { Branch_Code: 'B005', Customer_Count: 3 },
  { Branch_Code: 'B002', Customer_Count: 2 },
  { Branch_Code: '', Customer_Count: 1 }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Acc_Branch_code" }, { $group: { _id: "$Acc_Branch_code", Customer_Count: { $sum: 1 } } }, {$match:{"Branch_Code":{"$ne":""}}}, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }]
...
Bank2> db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Acc_Branch_code" },{$match:{"Acc_Branch_code":{"$ne":""}}}, { $group: { _id: "$Acc_Branch_code", Customer_Count: { $sum: 1 } } }, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }])
[
  { Branch_Code: 'B004', Customer_Count: 3 },
  { Branch_Code: 'B001', Customer_Count: 1 },
  { Branch_Code: 'B002', Customer_Count: 2 },
  { Branch_Code: 'B005', Customer_Count: 3 },
  { Branch_Code: 'B003', Customer_Count: 3 }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Loan_Branch_code" },{$match:{"Loan_Branch_code":{"$ne":""}}}, { $group: { _id: "$Loan_Branch_code", Customer_Count: { $sum: 1 } } }, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }])
[
  { Branch_Code: 'B005', Customer_Count: 2 },
  { Branch_Code: 'B004', Customer_Count: 2 },
  { Branch_Code: 'B006', Customer_Count: 2 }
]
Bank2> const a= db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Acc_Branch_code" },{$match:{"Acc_Branch_code":{"$ne":""}}}, { $group: { _id: "$Acc_Br
Uncaught:
SyntaxError: Unterminated string constant. (1:127)

> 1 | const a= db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Acc_Branch_code" },{$match:{"Acc_Branch_code":{"$ne":""}}}, { $group: { _id: "$Acc_Br
    |
^
  2 |

Bank2> anch_code", Customer_Count: { $sum: 1 } } }, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }])
Bank2> const a= db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Acc_Branch_code" },{$match:{"Acc_Branch_code":{"$ne":""}}}, { $group: { _id: "$Acc_Branch_code", Customer_Count: { $sum: 1 } } }, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }])

Bank2> const b=db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Loan_Branch_code" },{$match:{"Loan_Branch_code":{"$ne":""}}}, { $group: { _idBank2> const b=db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Loan_Branch_code" },{$match:{"Loan_Branch_code":{"$ne":""}}}, { $group: { _id: "$Loan_Branch_code", Customer_Count: { $sum: 1 } } }, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }])

Bank2> var mergedResult = db.collection.aggregate([{ $project: { mergedResult: { $concatArrays: [a,b] } } }]).toArray();
BSONError: Cannot convert circular structure to BSON
Bank2> const a= db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Acc_Branch_code" },{$match:{"Acc_Branch_code":{"$ne":""}}}, { $group: { _id: "$Acc_Branch_code", Customer_Count: { $sum: 1 } } }, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }]).toArray()

Bank2> const b=db.ALL_CUSTOMERS.aggregate([{ $unwind: "$Loan_Branch_code" },{$match:{"Loan_Branch_code":{"$ne":""}}}, { $group: { _id: "$Loan_Branch_code", Customer_Count: { $sum: 1 } } }, { $project: { _id: 0, Branch_Code: "$_id", Customer_Count: "$Customer_Count" } }]).toArray()

Bank2> var mergedResult = db.collection.aggregate([{ $project: { mergedResult: { $concatArrays: [a,b] } } }]).toArray();

Bank2> var mergedResult = db.ALL_CUSTOMERS.aggregate([{ $project: { mergedResult: { $concatArrays: [a,b] } } }]).toArray();

Bank2> var finalResult = mergedResult[0].mergedResult;

Bank2> console.log(finalResult)
[
  { Branch_Code: 'B004', Customer_Count: 3 },
  { Branch_Code: 'B001', Customer_Count: 1 },
  { Branch_Code: 'B002', Customer_Count: 2 },
  { Branch_Code: 'B005', Customer_Count: 3 },
  { Branch_Code: 'B003', Customer_Count: 3 },
  { Branch_Code: 'B005', Customer_Count: 2 },
  { Branch_Code: 'B004', Customer_Count: 2 },
  { Branch_Code: 'B006', Customer_Count: 2 }
]

Bank2> db.collection.aggregate([{$group: {_id: { "Acc_Branch_code": "$Acc_Branch_code", "Loan_Branch_code": "$Loan_Branch_code" },count: { $sum: 1 }}}])

Bank2> db.ALL_CUSTOMERS.aggregate([{$group: {_id: { "Acc_Branch_code": "$Acc_Branch_code", "Loan_Branch_code": "$Loan_Branch_code" },count: { $sum: 1 }}}])
[
  {
    _id: { Acc_Branch_code: [ 'B003' ], Loan_Branch_code: '' },
    count: 2
  },
  {
    _id: { Acc_Branch_code: [ '' ], Loan_Branch_code: 'B006' },
    count: 1
  },
  {
    _id: {
      Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
      Loan_Branch_code: ''
    },
    count: 1
  },
  {
    _id: { Acc_Branch_code: [ 'B001' ], Loan_Branch_code: 'B005' },
    count: 1
  },
  {
    _id: { Acc_Branch_code: [ 'B002' ], Loan_Branch_code: 'B006' },
    count: 1
  },
  {
    _id: { Acc_Branch_code: [ 'B003', 'B002' ], Loan_Branch_code: '' },
    count: 1
  },
  {
    _id: { Acc_Branch_code: [ 'B005' ], Loan_Branch_code: 'B005' },
    count: 1
  },
  {
    _id: { Acc_Branch_code: [ 'B005' ], Loan_Branch_code: 'B004' },
    count: 2
  }
]
Bank2> db.ALL_CUSTOMERS.find({})
[
  {
    Customer_No: 'C0001',
    Name: 'Raj Anand Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Loan_Branch_city: 'Kolkata'
  },
  {
    Customer_No: 'C0002',
    Name: 'Ankita Singh',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Loan_Branch_city: 'Mumbai'
  },
  {
    Customer_No: 'C0003',
    Name: 'Soumya Jha',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0004',
    Name: 'Abhijit Mishra',
    Acc_Branch_code: [ 'B003', 'B002' ],
    Acc_Branch_name: [ 'Juhu Branch', 'Chandnichowk Branch' ],
    Acc_Branch_city: [ 'Mumbai', 'Delhi' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0005',
    Name: 'Yash Saraf',
    Acc_Branch_code: [ '' ],
    Acc_Branch_name: [ '' ],
    Acc_Branch_city: [ '' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Loan_Branch_city: 'Chennai'
  },
  {
    Customer_No: 'C0006',
    Name: 'Swaroop Ray',
    Acc_Branch_code: [ 'B004', 'B004', 'B004' ],
    Acc_Branch_name: [ 'Andheri Branch', 'Andheri Branch', 'Andheri Branch' ],
    Acc_Branch_city: [ 'Mumbai', 'Mumbai', 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0007',
    Name: 'Surya Narayan',
    Acc_Branch_code: [ 'B003' ],
    Acc_Branch_name: [ 'Juhu Branch' ],
    Acc_Branch_city: [ 'Mumbai' ],
    Loan_Branch_code: '',
    Loan_Branch_name: '',
    Loan_Branch_city: ''
  },
  {
    Customer_No: 'C0008',
    Name: 'Pranav Praveen',
    Acc_Branch_code: [ 'B002' ],
    Acc_Branch_name: [ 'Chandnichowk Branch' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B006',
    Loan_Branch_name: 'Srirampuram Branch',
    Loan_Branch_city: 'Chennai'
  },
  {
    Customer_No: 'C0009',
    Name: 'Stuti Mishra',
    Acc_Branch_code: [ 'B001' ],
    Acc_Branch_name: [ 'Janakpuri Branch' ],
    Acc_Branch_city: [ 'Delhi' ],
    Loan_Branch_code: 'B005',
    Loan_Branch_name: 'SaltLake Branch',
    Loan_Branch_city: 'Kolkata'
  },
  {
    Customer_No: 'C0010',
    Name: 'Aslesha Tiwari',
    Acc_Branch_code: [ 'B005' ],
    Acc_Branch_name: [ 'SaltLake Branch' ],
    Acc_Branch_city: [ 'Kolkata' ],
    Loan_Branch_code: 'B004',
    Loan_Branch_name: 'Andheri Branch',
    Loan_Branch_city: 'Mumbai'
  }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $concatArrays: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } }])
[
  { _id: 'B003', customerCount: 3 },
  { _id: '', customerCount: 5 },
  { _id: 'B002', customerCount: 2 },
  { _id: 'B006', customerCount: 2 },
  { _id: 'B001', customerCount: 1 },
  { _id: 'B004', customerCount: 5 },
  { _id: 'B005', customerCount: 5 }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } }])
[
  { _id: '', customerCount: 5 },
  { _id: 'B005', customerCount: 4 },
  { _id: 'B002', customerCount: 2 },
  { _id: 'B004', customerCount: 3 },
  { _id: 'B006', customerCount: 2 },
  { _id: 'B001', customerCount: 1 },
  { _id: 'B003', customerCount: 3 }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, {$match:{"Branch_code":{"$ne",""}}},{ $group: { Branch_code : "$mergedBranchCodes", customerCount: { $sum: 1 } } }])
Uncaught:
SyntaxError: Unexpected token (1:189)

> 1 | db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, {$match:{"Branch_code":{"$ne",""}}},{ $group: { Branch_code : "$mergedBranchCodes", customerCount: { $sum: 1 } } }])
    |
                                       ^
  2 |

Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, {$match:{"Branch_code":{"$ne":""}}},{ $group: { Branch_code : "$mergedBranchCodes", customerCount: { $sum: 1 } } }])
MongoServerError: The field 'Branch_code' must be an accumulator object
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } }
...
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}}])
[
  { _id: 'B004', customerCount: 3 },
  { _id: 'B001', customerCount: 1 },
  { _id: 'B003', customerCount: 3 },
  { _id: 'B005', customerCount: 4 },
  { _id: 'B002', customerCount: 2 },
  { _id: 'B006', customerCount: 2 }
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { mergedBranchCodes:1, customercustomerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}}])
MongoServerError: The field 'mergedBranchCodes' must be an accumulator object
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}},{"$project":{"Branch_Code":"$_id",customerCount: { $sum: 1 }}}])
[
  { _id: 'B005', Branch_Code: 'B005', customerCount: 1 },
  { _id: 'B003', Branch_Code: 'B003', customerCount: 1 },
  { _id: 'B006', Branch_Code: 'B006', customerCount: 1 },
  { _id: 'B001', Branch_Code: 'B001', customerCount: 1 },
  { _id: 'B004', Branch_Code: 'B004', customerCount: 1 },
  { _id: 'B002', Branch_Code: 'B002', customerCount: 1 }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}},{"$project":{"Branch_Code":"$_id",customerCount: 1}}])
[
  { _id: 'B004', customerCount: 3, Branch_Code: 'B004' },
  { _id: 'B001', customerCount: 1, Branch_Code: 'B001' },
  { _id: 'B002', customerCount: 2, Branch_Code: 'B002' },
  { _id: 'B005', customerCount: 4, Branch_Code: 'B005' },
  { _id: 'B006', customerCount: 2, Branch_Code: 'B006' },
  { _id: 'B003', customerCount: 3, Branch_Code: 'B003' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}},{"$project":{"Branch_Code":"$_id",customerCount: 1}}])
MongoServerError: a group specification must include an _id
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}},{"$project":{"Branch_Code":"$_id",customerCount: 1,"_id":0}}])
[
  { customerCount: 3, Branch_Code: 'B003' },
  { customerCount: 4, Branch_Code: 'B005' },
  { customerCount: 3, Branch_Code: 'B004' },
  { customerCount: 2, Branch_Code: 'B002' },
  { customerCount: 2, Branch_Code: 'B006' },
  { customerCount: 1, Branch_Code: 'B001' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}},{"$project":{"Branch_Code":"$_id","_id":0}}])
[
  { Branch_Code: 'B005' },
  { Branch_Code: 'B003' },
  { Branch_Code: 'B006' },
  { Branch_Code: 'B001' },
  { Branch_Code: 'B004' },
  { Branch_Code: 'B002' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}},{"$project":{"Branch_Code":"$_id","customerCount": 1,"_id":0}}])
[
  { customerCount: 4, Branch_Code: 'B005' },
  { customerCount: 3, Branch_Code: 'B003' },
  { customerCount: 2, Branch_Code: 'B006' },
  { customerCount: 1, Branch_Code: 'B001' },
  { customerCount: 3, Branch_Code: 'B004' },
  { customerCount: 2, Branch_Code: 'B002' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}},{"$addFields":{"Branch_Code":"$_id","customerCount": 1}},{"$project":{"_id":0}}])
[
  { customerCount: 1, Branch_Code: 'B004' },
  { customerCount: 1, Branch_Code: 'B001' },
  { customerCount: 1, Branch_Code: 'B002' },
  { customerCount: 1, Branch_Code: 'B005' },
  { customerCount: 1, Branch_Code: 'B006' },
  { customerCount: 1, Branch_Code: 'B003' }
]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}},{"$project":{"Branch_Code":"$_id"}},{"$project":{"_id":0,"customerCount": 1}}])
[ {}, {}, {}, {}, {}, {} ]
Bank2> db.ALL_CUSTOMERS.aggregate([{ $project: { mergedBranchCodes: { $setUnion: ["$Acc_Branch_code", ["$Loan_Branch_code"]] } } }, { $unwind: "$mergedBranchCodes" }, { $group: { _id: "$mergedBranchCodes", customerCount: { $sum: 1 } } },{$match:{"_id":{"$ne":""}}},{"$project":{"customerCount": 1,"Branch_Code":"$_id","_id":0}}])
[
  { customerCount: 3, Branch_Code: 'B003' },
  { customerCount: 4, Branch_Code: 'B005' },
  { customerCount: 3, Branch_Code: 'B004' },
  { customerCount: 2, Branch_Code: 'B002' },
  { customerCount: 2, Branch_Code: 'B006' },
  { customerCount: 1, Branch_Code: 'B001' }
]

Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project"}:]}}])
Uncaught:
SyntaxError: Unexpected token (1:114)

> 1 | db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project"}:]}}])
Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project"}:]}}])
Uncaught:
SyntaxError: Unexpected token (1:114)

> 1 | db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project"}:]}}])
    |                                                                                                                   ^
  2 |

":{"_id":0,"Loan_no":1}}]}}])lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project
MongoServerError: must specify 'as' field for a $lookup
Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project":{"_idn_no":1}}]}}])
MongoServerError: must specify 'as' field for a $lookup
Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$projectn_no":1}}]}}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:121)

> 1 | db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$projectn_no":1}}]}}])    |                                                                                                                          ^
  2 |

":{"_id":0,"Loan_no":1}}],"as":"Branch"}}])":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project
[
  {
    _id: ObjectId("651a6e281bb3cbbad5da7703"),
    Loan_no: 'L0001',
    Cust_no: 'C0005',
    Amount: 3000000,
    Branch_code: 'B006',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7704"),
    Loan_no: 'L0002',
    Cust_no: 'C0001',
    Amount: 50000,
    Branch_code: 'B005',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7705"),
    Loan_no: 'L0003',
    Cust_no: 'C0002',
    Amount: 8000000,
    Branch_code: 'B004',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7706"),
    Loan_no: 'L0004',
    Cust_no: 'C0010',
    Amount: 100000,
    Branch_code: 'B004',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7707"),
    Loan_no: 'L0005',
    Cust_no: 'C0009',
    Amount: 9500000,
    Branch_code: 'B005',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7708"),
    Loan_no: 'L0006',
    Cust_no: 'C0008',
    Amount: 25000,
    Branch_code: 'B006',
    Branch: [ {}, {} ]
  }
]
Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project":{"_id":0,"Loan_no":1}}],"as":"Branch"}}])
[
  {
    _id: ObjectId("651a6e281bb3cbbad5da7703"),
    Loan_no: 'L0001',
    Cust_no: 'C0005',
    Amount: 3000000,
    Branch_code: 'B006',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7704"),
    Loan_no: 'L0002',
    Cust_no: 'C0001',
    Amount: 50000,
    Branch_code: 'B005',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7705"),
    Loan_no: 'L0003',
    Cust_no: 'C0002',
    Amount: 8000000,
    Branch_code: 'B004',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7706"),
    Loan_no: 'L0004',
    Cust_no: 'C0010',
    Amount: 100000,
    Branch_code: 'B004',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7707"),
    Loan_no: 'L0005',
    Cust_no: 'C0009',
    Amount: 9500000,
    Branch_code: 'B005',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7708"),
    Loan_no: 'L0006',
    Cust_no: 'C0008',
    Amount: 25000,
    Branch_code: 'B006',
    Branch: [ {}, {} ]
  }
]
Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project":{"_id":0,"Loan":{"Loan_no":1}}},{ $replaceRoot: { newRoot: "$Loan" } }],"as":"Branch"}}])
MongoServerError: PlanExecutor error during aggregation :: caused by :: 'newRoot' expression  must evaluate to an object, but resulting value was: MISSING. Type of resulting value: 'missing'. Input document: {}
Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","pipeline":[{"$match":{"Branch_city":{"$eq":"Mumbai"}}},{"$project":{"_id":0,"Loan":{"Loan_no":1}}}],"as":"Branch"}}])
[
  {
    _id: ObjectId("651a6e281bb3cbbad5da7703"),
    Loan_no: 'L0001',
    Cust_no: 'C0005',
    Amount: 3000000,
    Branch_code: 'B006',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7704"),
    Loan_no: 'L0002',
    Cust_no: 'C0001',
    Amount: 50000,
    Branch_code: 'B005',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7705"),
    Loan_no: 'L0003',
    Cust_no: 'C0002',
    Amount: 8000000,
    Branch_code: 'B004',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7706"),
    Loan_no: 'L0004',
    Cust_no: 'C0010',
    Amount: 100000,
    Branch_code: 'B004',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7707"),
    Loan_no: 'L0005',
    Cust_no: 'C0009',
    Amount: 9500000,
    Branch_code: 'B005',
    Branch: [ {}, {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7708"),
    Loan_no: 'L0006',
    Cust_no: 'C0008',
    Amount: 25000,
    Branch_code: 'B006',
    Branch: [ {}, {} ]
  }
]
Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","let":{"L_no":"$Loan_no","B_code":"$Branch_code"},"pipeline":[{"$match":{"$expr":{"$and":[{"$eq":["$Branch_code","$$B_code"]},{"$eq":["$Branch_city","Mumbai"]}]}}},{"$project":{"_id":0,"Loan_no":1}}],"as":"Loan_data"}}])
MongoServerError: 'L_no' starts with an invalid character for a user variable name
Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","let":{"l_no":"$Loan_no","b_code":"$Branch_code"},"pipeline":[{"$match":{"$expr":{"$and":[{"$eq":["$Branch_code","$$b_code"]},{"$eq":["$Branch_city","Mumbai"]}]}}},{"$project":{"_id":0,"Loan_no":1}}],"as":"Loan_data"}}])
[
  {
    _id: ObjectId("651a6e281bb3cbbad5da7703"),
    Loan_no: 'L0001',
    Cust_no: 'C0005',
    Amount: 3000000,
    Branch_code: 'B006',
    Loan_data: []
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7704"),
    Loan_no: 'L0002',
    Cust_no: 'C0001',
    Amount: 50000,
    Branch_code: 'B005',
    Loan_data: []
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7705"),
    Loan_no: 'L0003',
    Cust_no: 'C0002',
    Amount: 8000000,
    Branch_code: 'B004',
    Loan_data: [ {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7706"),
    Loan_no: 'L0004',
    Cust_no: 'C0010',
    Amount: 100000,
    Branch_code: 'B004',
    Loan_data: [ {} ]
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7707"),
    Loan_no: 'L0005',
    Cust_no: 'C0009',
    Amount: 9500000,
    Branch_code: 'B005',
    Loan_data: []
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7708"),
    Loan_no: 'L0006',
    Cust_no: 'C0008',
    Amount: 25000,
    Branch_code: 'B006',
    Loan_data: []
  }
]
Bank3> db.LOAN.find({})
[
  {
    _id: ObjectId("651a6e281bb3cbbad5da7703"),
    Loan_no: 'L0001',
    Cust_no: 'C0005',
    Amount: 3000000,
    Branch_code: 'B006'
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7704"),
    Loan_no: 'L0002',
    Cust_no: 'C0001',
    Amount: 50000,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7705"),
    Loan_no: 'L0003',
    Cust_no: 'C0002',
    Amount: 8000000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7706"),
    Loan_no: 'L0004',
    Cust_no: 'C0010',
    Amount: 100000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7707"),
    Loan_no: 'L0005',
    Cust_no: 'C0009',
    Amount: 9500000,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651a6e281bb3cbbad5da7708"),
    Loan_no: 'L0006',
    Cust_no: 'C0008',
    Amount: 25000,
    Branch_code: 'B006'
  }
]
Bank3> db.BRANCH.find({})
[
  {
    _id: ObjectId("651a732c1bb3cbbad5da770a"),
    Branch_code: 'B001',
    Branch_name: 'Janakpuri Branch',
    Branch_city: 'Delhi'
  },
  {
    _id: ObjectId("651a732c1bb3cbbad5da770b"),
    Branch_code: 'B002',
    Branch_name: 'Chandnichowk Branch',
    Branch_city: 'Delhi'
  },
  {
    _id: ObjectId("651a732c1bb3cbbad5da770c"),
    Branch_code: 'B003',
    Branch_name: 'Juhu Branch',
    Branch_city: 'Mumbai'
  },
  {
    _id: ObjectId("651a732c1bb3cbbad5da770d"),
    Branch_code: 'B004',
    Branch_name: 'Andheri Branch',
    Branch_city: 'Mumbai'
  },
  {
    _id: ObjectId("651a732c1bb3cbbad5da770e"),
    Branch_code: 'B005',
    Branch_name: 'Saltlake Branch',
    Branch_city: 'Kolkata'
  },
  {
    _id: ObjectId("651a732c1bb3cbbad5da770f"),
    Branch_code: 'B006',
    Branch_name: 'Srirampuram Branch',
    Branch_city: 'Chennai'
  }
]
Bank3> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"Loan_data"}},{"$match":{"Loan_data.Branch_city":"Mumbai"}},{"$project":{"_id":0,"Loan_no":1}}])
[ { Loan_no: 'L0003' }, { Loan_no: 'L0004' } ]
Bank3> db.ACCOUNT.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"Account_data"}},{"$match":{"Account_data.Branch_city":"Delhi"}},{"$project":{"_id":0,"Type":1}}])
[ { Type: 'SB' } ]
Bank3> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$lookup":{"from":"ACCOUNT","localField":"Customer_data.Account_no","foreignField":"Account_no","as":"Customer_data2"}},{"$match":{"Customer_data2.Balance":{"$gt":100000}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])

Bank3> db.ACCOUNT.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","F"}}])
Uncaught:
SyntaxError: Unexpected token (1:82)

> 1 | db.ACCOUNT.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","F"}}])
    |                                                                                   ^
  2 |

Bank3> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Customer_data.Account_no","as":"Customer_data2"}},{"$match":{"Customer_data2.Balance":{"$gt":100000}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Raj Anand Singh', Phone_no: Long("9861258466") },
  { Name: 'Ankita Singh', Phone_no: Long("9879958651") },
  { Name: 'Soumyajha', Phone_no: Long("9885623344") },
  { Name: 'Abhijit Mishra', Phone_no: Long("9455845425") },
  { Name: 'Yash Saraf', Phone_no: Long("9665854585") },
  { Name: 'Swaroop Ray', Phone_no: Long("9437855466") },
  { Name: 'Suryanarayan', Phone_no: Long("9937955212") },
  { Name: 'Pranav Praveen', Phone_no: Long("9336652441") },
  { Name: 'Stuti Misra', Phone_no: Long("7870266534") },
  { Name: 'Aslesha Tiwari' }
]
Bank3> db.ACCOUNT.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"Acc"}},{"$match":{"Acc.Balance":{"$gt":100000}}},{"$project":{"_id":0,"Acc.Cust_no":1}}])

Bank3> db.ACCOUNT.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"Acc"}},{"$match":{"Acc.Balance":{"$gt":100000}}},{"$project":{"_id":0,"Account_no":1}}])

Bank3> db.ACCOUNT.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"Acc"}},{"$match":{"Balance":{"$gt":100000}}},{"$project":{"_id":0,"Account_no":1}}])
[
  { Account_no: 'A0001' },
  { Account_no: 'А000З' },
  { Account_no: 'А0006' }
]
Bank3> const t= db.ACCOUNT.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"Acc"}},{"$match":{"Balance":{"$gt":100000}}},{"$project":{"_id":0,"Account_no":1}}]).toArray()

Bank3> const t1=[];t.forEach(function (item){t1.push=item.Account_no});

Bank3> console.log(t1)
[ push: 'А0006' ]

Bank3> console.log(t1
...
Bank3> const t1=[];t.forEach(function (item)){t1.push=item.Account_no});
Uncaught:
SyntaxError: Unexpected token, expected "{" (1:37)

> 1 | const t1=[];t.forEach(function (item)){t1.push=item.Account_no});
    |                                      ^
  2 |

Bank3> const t1=[];t.forEach(function (item){t1.push(item.Account_no);});

Bank3> console.log(t1)
[ 'A0001', 'А000З', 'А0006' ]

Bank3> db.CUSTOMERS.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$match":{"Customer_data.Account_no":{"$in":t1}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])

Bank3> db.CUSTOMERS.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$match":{"Customer_data.Account_no":{"$in":t1}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])

Bank3> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Customer_data.Account_no","as":"Customer_data2"}},{"$match":{"Customer_data2.Balance":{"$gt":100000}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Raj Anand Singh', Phone_no: Long("9861258466") },
  { Name: 'Ankita Singh', Phone_no: Long("9879958651") },
  { Name: 'Soumyajha', Phone_no: Long("9885623344") },
  { Name: 'Abhijit Mishra', Phone_no: Long("9455845425") },
  { Name: 'Yash Saraf', Phone_no: Long("9665854585") },
  { Name: 'Swaroop Ray', Phone_no: Long("9437855466") },
  { Name: 'Suryanarayan', Phone_no: Long("9937955212") },
  { Name: 'Pranav Praveen', Phone_no: Long("9336652441") },
  { Name: 'Stuti Misra', Phone_no: Long("7870266534") },
  { Name: 'Aslesha Tiwari' }
]
Bank3> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$lookup":{"from":"ACCOUNT","localField":"Customer_data.Account_no","foreignField":"Account_no","as":"Customer_data2"}},{"$match":{"Customer_data2.Balance":{"$gt":100000}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Soumyajha', Phone_no: Long("9885623344") },
  { Name: 'Abhijit Mishra', Phone_no: Long("9455845425") }
]
Bank3> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$match":{"Customer_data.Account_no":{"$in":t1}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Soumyajha', Phone_no: Long("9885623344") },
  { Name: 'Abhijit Mishra', Phone_no: Long("9455845425") }
]
Bank3> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$match":{"Customer_data.Account_no":{"$in":t1}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Soumyajha', Phone_no: Long("9885623344") },
  { Name: 'Abhijit Mishra', Phone_no: Long("9455845425") }
]
Bank3> db.DEPOSITOR.aggregate([{"$match":{"Account_no":{"$in":t1}}},{"$project":{"_id":0,"Cust_no":1}}])
[ { Cust_no: 'C0003' }, { Cust_no: 'C0004' } ]
Bank3> console.log(t1)
[ 'A0001', 'А000З', 'А0006' ]

Bank3> db.DEPOSITOR.find({"Account_no":{"$in":t1}},{"_id":0,"Cust_no":1})
[ { Cust_no: 'C0003' }, { Cust_no: 'C0004' } ]
Bank3> db.DEPOSITOR.find({"Account_no":{"$in":["A0001","A0003","A0006"]}},{"_id":0,"Cust_no":1})
[
  { Cust_no: 'C0003' },
  { Cust_no: 'C0004' },
  { Cust_no: 'C0006' },
  { Cust_no: 'C0010' }
]
Bank3> db.DEPOSITOR.find({"Account_no":{"$in":"t1"}},{"_id":0,"Cust_no":1})
MongoServerError: $in needs an array
Bank3> db.DEPOSITOR.find({"Account_no":{"$in":[t1]}},{"_id":0,"Cust_no":1})

Bank3> db.DEPOSITOR.find({"Account_no":{"$in":t1}},{"_id":0,"Cust_no":1})
[ { Cust_no: 'C0003' }, { Cust_no: 'C0004' } ]
Bank3> db.DEPOSITOR.find({})
\[
  {
    _id: ObjectId("651a6d621bb3cbbad5da76f6"),
    Account_no: 'A0001',
    Cust_no: 'C0003'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76f7"),
    Cust_no: 'C0004',
    Account_no: 'A0001'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76f8"),
    Cust_no: 'C0004',
    Account_no: 'A0002'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76f9"),
    Account_no: 'A0003',
    Cust_no: 'C0006'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fa"),
    Cust_no: 'C0006',
    Account_no: 'A0004'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fb"),
    Cust_no: 'C0001',
    Account_no: 'A0005'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fc"),
    Cust_no: 'C0002',
    Account_no: 'A0005'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fd"),
    Cust_no: 'C0010',
    Account_no: 'A0006'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fe"),
    Cust_no: 'C0009',
    Account_no: 'A0007'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76ff"),
    Cust_no: 'C0008',
    Account_no: 'A0008'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da7700"),
    Cust_no: 'C0007',
    Account_no: 'A0009'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da7701"),
    Cust_no: 'C0006',
    Account_no: 'A0010'
  }
]
Bank3> const res = db.DEPOSITOR.find({"Account_no":{"$in":t1}},{"_id":0,"Cust_no":1}).toArray()

Bank3> const y=[];res.forEach(function (item){y.push(item.Cust_no);});

Bank3> console.log(y)
[ 'C0003', 'C0004' ]

Bank3> printjson(res)
[
  {
    Cust_no: 'C0003'
  },
  {
    Cust_no: 'C0004'
  }
]

Bank3> db.ACCOUNT.find()
[
  {
    _id: ObjectId("651a69c81bb3cbbad5da76eb"),
    Account_no: 'A0001',
    Type: 'SB',
    Balance: 200000,
    Branch_code: 'B003'
  },
  {
    _id: ObjectId("651a69c81bb3cbbad5da76ec"),
    Account_no: 'A0002',
    Type: 'SB',
    Balance: 15000,
    Branch_code: 'В002'
  },
  {
    _id: ObjectId("651a69c81bb3cbbad5da76ed"),
    Account_no: 'А000З',
    Type: 'СА',
    Balance: 850000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651a69c81bb3cbbad5da76ee"),
    Account_no: 'А0004',
    Type: 'СА',
    Balance: 35000,
    Branch_code: 'В004'
  },
  {
    _id: ObjectId("651a69c81bb3cbbad5da76ef"),
    Account_no: 'А0005',
    Type: 'FD',
    Balance: 28500,
    Branch_code: 'В005'
  },
  {
    _id: ObjectId("651a69c81bb3cbbad5da76f0"),
    Account_no: 'А0006',
    Type: 'FD',
    Balance: 550000,
    Branch_code: 'В005'
  },
  {
    _id: ObjectId("651a69c81bb3cbbad5da76f1"),
    Account_no: 'А0007',
    Type: 'SB',
    Balance: 48000,
    Branch_code: 'В001'
  },
  {
    _id: ObjectId("651a69c81bb3cbbad5da76f2"),
    Account_no: 'А0008',
    Type: 'SB',
    Balance: 7200,
    Branch_code: 'B002'
  },
  {
    _id: ObjectId("651a69c81bb3cbbad5da76f3"),
    Account_no: 'А0009',
    Type: 'SB',
    Balance: 18750,
    Branch_code: 'B003'
  },
  {
    _id: ObjectId("651a69c81bb3cbbad5da76f4"),
    Account_no: 'А0010',
    Type: 'FD',
    Balance: 99000,
    Branch_code: 'В004'
  }
]
Bank3> db.DEPOSITOR.find()
[
  {
    _id: ObjectId("651a6d621bb3cbbad5da76f6"),
    Account_no: 'A0001',
    Cust_no: 'C0003'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76f7"),
    Cust_no: 'C0004',
    Account_no: 'A0001'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76f8"),
    Cust_no: 'C0004',
    Account_no: 'A0002'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76f9"),
    Account_no: 'A0003',
    Cust_no: 'C0006'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fa"),
    Cust_no: 'C0006',
    Account_no: 'A0004'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fb"),
    Cust_no: 'C0001',
    Account_no: 'A0005'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fc"),
    Cust_no: 'C0002',
    Account_no: 'A0005'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fd"),
    Cust_no: 'C0010',
    Account_no: 'A0006'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fe"),
    Cust_no: 'C0009',
    Account_no: 'A0007'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da76ff"),
    Cust_no: 'C0008',
    Account_no: 'A0008'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da7700"),
    Cust_no: 'C0007',
    Account_no: 'A0009'
  },
  {
    _id: ObjectId("651a6d621bb3cbbad5da7701"),
    Cust_no: 'C0006',
    Account_no: 'A0010'
  }
]
Bank3> db.CUSTOMER.find()
[
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76d5"),
    Cust_no: 'C0001',
    Name: 'Raj Anand Singh',
    Phone_no: Long("9861258466"),
    City: 'Delhi'
  },
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76d6"),
    Cust_no: 'C0002',
    Name: 'Ankita Singh',
    Phone_no: Long("9879958651"),
    City: 'Bangalore'
  },
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76d7"),
    Cust_no: 'C0003',
    Name: 'Soumyajha',
    Phone_no: Long("9885623344"),
    City: 'Mumbai'
  },
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76d8"),
    Cust_no: 'C0004',
    Name: 'Abhijit Mishra',
    Phone_no: Long("9455845425"),
    City: 'Mumbai'
  },
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76d9"),
    Cust_no: 'C0005',
    Name: 'Yash Saraf',
    Phone_no: Long("9665854585"),
    City: 'Kolkata'
  },
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76da"),
    Cust_no: 'C0006',
    Name: 'Swaroop Ray',
    Phone_no: Long("9437855466"),
    City: 'Chennai'
  },
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76db"),
    Cust_no: 'C0007',
    Name: 'Suryanarayan',
    Phone_no: Long("9937955212"),
    City: 'Gurgaon'
  },
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76dc"),
    Cust_no: 'C0008',
    Name: 'Pranav Praveen',
    Phone_no: Long("9336652441"),
    City: 'Pune'
  },
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76dd"),
    Cust_no: 'C0009',
    Name: 'Stuti Misra',
    Phone_no: Long("7870266534"),
    City: 'Delhi'
  },
  {
    _id: ObjectId("651a60ec1bb3cbbad5da76de"),
    Cust_no: 'C0010',
    Name: 'Aslesha Tiwari',
    City: 'Mumbai'
  }
]
Bank3> db.ACCOUNT.aggregate([{$match:{Balance:{$gt:100000}}},{$lookup:{from:"CUSTOMER",localField:"Cust_no",foreignField:"Cust_no",as:"customer_info"}},{$unwind:"$customer_info"},{$project:{"customer_info.Name":1,"customer_info.Phone_no":1,_id:0}}])

Bank3> db.DEPOSITOR.aggregate([{$lookup:{from:"ACCOUNT",localField:"Account_no",foreignField:"Account_no",as:"account_info"}},{$match:{"account_info.Balance":{$gt:100000}}},{$lookup:{from:"CUSTOMER",localField:"Cust_no",foreignField:"Cust_no",as:"customer_info"}},{$project:{"customer_info.Name":1,"customer_info.Phone_no":1,_id:0}}])
[
  {
    customer_info: [ { Name: 'Soumyajha', Phone_no: Long("9885623344") } ]
  },
  {
    customer_info: [ { Name: 'Abhijit Mishra', Phone_no: Long("9455845425") } ]
  }
]
Bank3> db.DEPOSITOR.find({"Account_no":{"$in":t1}},{"Cust_no":1,"_id":0})
[ { Cust_no: 'C0003' }, { Cust_no: 'C0004' } ]
Bank3> db.DEPOSITOR.find({"Account_no":{"$all":{"$in":t1}}},{"Cust_no":1,"_id":0})
MongoServerError: $all needs an array
Bank3> db.DEPOSITOR.find({"Account_no":{"$all":t1}},{"Cust_no":1,"_id":0})

Bank3> db.DEPOSITOR.find({"Account_no":{"$all":t1}},{"Cust_no":1,"_id":0})
Bank3> db.DEPOSITOR.aggregate([{"$match":{"Account_no":{"$in":t1}}},{"$project":{"Cust_no":1,"_id":0}}])
[ { Cust_no: 'C0003' }, { Cust_no: 'C0004' } ]
Bank3> db.DEPOSITOR.aggregate([{"$match":{"Account_no":{"$all":t1}}},{"$project":{"Cust_no":1,"_id":0}}])

Bank3> console.log(t1)
[ 'A0001', 'А000З', 'А0006' ]

Bank3> db.DEPOSITOR.find({"Account_no":"A0006"})
[
  {
    _id: ObjectId("651a6d621bb3cbbad5da76fd"),
    Cust_no: 'C0010',
    Account_no: 'A0006'
  }
]
Bank3> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"cust"}},{"$match":{"cust.Account_no":{"$in":t1}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Soumyajha', Phone_no: Long("9885623344") },
  { Name: 'Abhijit Mishra', Phone_no: Long("9455845425") }
]
Bank3> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"cust"}},{"$match":{"cust.Account_no":{"$in":t1}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Soumya Jha', Phone_no: Long("9885623344") },
  { Name: 'Abhijit Mishra', Phone_no: Long("9455845425") }
]
Bank3> use Bank4
switched to db Bank4
Please enter a MongoDB connection string (Default: mongodb://localhosBank4> db.CUSTOMER.insertOne({"Cust_no":"C0003","Name":"Soumya Jha","Phone_no":9885623344,"City":"Mumbai"})
{
  acknowledged: true,
  insertedId: ObjectId("651ab2404928331084eb0f35")
}
Bank4> db.CUSTOMER.insertMany([{"Cust_no":"C0004","Name":"Abhijit Mishra","Phone_no":9455845425,"City":"Mumbai"},{"Cust_no":"C0006","Name":"Swaroop Ray","Phone_no":9437855466,"City":"Chennai"},{"Cust_no":"C0010","Name":"Aslesha Tiwari","Phone_no":null,"City":"Mumbai"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("651ab2f74928331084eb0f36"),
    '1': ObjectId("651ab2f74928331084eb0f37"),
    '2': ObjectId("651ab2f74928331084eb0f38")
  }
}
Bank4> db.DEPOSITOR.insertMany([{"Cust_no":"C0003","Account_no":"A0001"},{"Cust_no":"C0004","Account_no":"A0001"},{"Cust_no":"C0006","Account_no":"A0003"},{"Cust_no":"C0010","Account_no":"A0006"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("651ab38a4928331084eb0f39"),
    '1': ObjectId("651ab38a4928331084eb0f3a"),
    '2': ObjectId("651ab38a4928331084eb0f3b"),
    '3': ObjectId("651ab38a4928331084eb0f3c")
  }
}
Bank4> db.ACCOUNT.insertMany([{"Account_no":"A0001","Type":"SB","Balance":200000,"Branch_code":"B003"},{"Account_no":"A0003","Type":"CA","Balance":850000,"Branch_code":"B004"},{"Account_no":"A0006","Type":"FD","Balance":550000,"Branch_code":"B005"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("651ab4594928331084eb0f3d"),
    '1': ObjectId("651ab4594928331084eb0f3e"),
    '2': ObjectId("651ab4594928331084eb0f3f")
Bank4> const x= db.ACCOUNT.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"Acc"}},{"$match":{"Balance":{"$gt":100000}}},{"$project":{"_id":0,"Account_no":Bank4> const x= db.ACCOUNT.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"AccBank4> const x= db.ACCOUNT.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"Acc"}},{"$match":{"Balance":{"$gt":100000}}},{"$project":{"_id":0,"Account_no":1}}]).toArray()

Bank4> console.log(x)
[
  { Account_no: 'A0001' },
  { Account_no: 'A0003' },
  { Account_no: 'A0006' }
]

Bank4> const y=[];x.forEach(function (item){y.push(item.Account_no);});

Bank4> console.log(y)
[ 'A0001', 'A0003', 'A0006' ]

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$match":{"Customer_data.Account_no":{"$in":y}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Soumya Jha', Phone_no: 9885623344 },
  { Name: 'Abhijit Mishra', Phone_no: 9455845425 },
  { Name: 'Swaroop Ray', Phone_no: 9437855466 },
  { Name: 'Aslesha Tiwari', Phone_no: null }
]
Bank4> db.CUSTOMER.DROP()
TypeError: db.CUSTOMER.DROP is not a function
Bank4> db.CUSTOMER.drop()
true
Bank4> db.CUSTOMER.insertMany([{"Cust_no":"C0001","Name":"Raj Anand Singh","Phone_no":9861258466,"City":"Delhi"},{"Cust_no":"C0002","Name":"Ankita Singh","Phone_no":9879958651,"City":"Bangalore"},{"Cust_no":"C0003","Name":"Soumya Jha","Phone_no":9885623344,"City":"Mumbai"},{"Cust_no":"C0004","Name":"Abhijit Mishra","Phone_no":9455845425,"City":"Mumbai"},{"Cust_no":"C0005","Name":"Yash Saraf","Phone_no":9665854585,"City":"Kolkata"},{"Cust_no":"C0006","Name":"Swaroop Ray","Phone_no":9437855466,"City":"Chennai"},{"Cust_no":"C0007","Name":"Surya Narayan","Phone_no":9937955212,"City":"Gurgaon"},{"Cust_no":"C0008","Name":"Pranav Praveen","Phone_no":9336652441,"City":"Pune"},{"Cust_no":"C0009","Name":"Stuti Misra","Phone_no":7870266534,"City":"Mumbai"},{"Cust_no":"C0010","Name":"Aslesha Tiwari","Phone_no":null,"City":"Mumbai"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("651abe884928331084eb0f40"),
    '1': ObjectId("651abe884928331084eb0f41"),
    '2': ObjectId("651abe884928331084eb0f42"),
    '3': ObjectId("651abe884928331084eb0f43"),
    '4': ObjectId("651abe884928331084eb0f44"),
    '5': ObjectId("651abe884928331084eb0f45"),
    '6': ObjectId("651abe884928331084eb0f46"),
    '7': ObjectId("651abe884928331084eb0f47"),
    '8': ObjectId("651abe884928331084eb0f48"),
    '9': ObjectId("651abe884928331084eb0f49")
  }
}
Bank4> db.ACCOUNT.drop()
true
Bank4> db.ACCOUNT.insertMany([{"Account_no":"A0001","Type":"SB","Balance":200000,"Branch_code":"B003"},{"Account_no":"A0002","Type":"SB","Balance":15000,"Branch_code":"B002"},{"Account_no":"A0003","Type":"CA","Balance":850000,"Branch_code":"B004"},{"Account_no":"A0004","Type":"CA","Balance":35000,"Branch_code":"B004"},{"Account_no":"A0005","Type":"FD","Balance":28500,"Branch_code":"B005"},{"Account_no":"A0006","Type":"FD","Balance":550000,"Branch_code":"B005"},{"Account_no":"A0007","Type":"SB","Balance":48000,"Branch_code":"B001"},{"Account_no":"A0008","Type":"SB","Balance":7200,"Branch_code":"B002"},{"Account_no":"A0009","Type":"SB","Balance":18750,"Branch_code":"B003"},{"Account_no":"A0010","Type":"FD","Balance":99000,"Branch_code":"B004"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("651abff54928331084eb0f4a"),
    '1': ObjectId("651abff54928331084eb0f4b"),
    '2': ObjectId("651abff54928331084eb0f4c"),
    '3': ObjectId("651abff54928331084eb0f4d"),
    '4': ObjectId("651abff54928331084eb0f4e"),
    '5': ObjectId("651abff54928331084eb0f4f"),
    '6': ObjectId("651abff54928331084eb0f50"),
    '7': ObjectId("651abff54928331084eb0f51"),
    '8': ObjectId("651abff54928331084eb0f52"),
    '9': ObjectId("651abff54928331084eb0f53")
  }
}
Bank4> db.DEPOSITOR.drop()
true
Bank4> db.DEPOSITOR.insertMany([{"Cust_no":"C0003","Account_no":"A0001"},{"Cust_no":"C0004","Account_no":"A0001"},{"Cust_no":"C0004","Account_no":"A0002"},{"Cust_no":"C0006","Account_no":"A0003"},{"Cust_no":"C0006","Account_no":"A0004"},{"Cust_no":"C0001","Account_no":"A0005"},{"Cust_no":"C0002","Account_no":"A0005"},{"Cust_no":"C0010","Account_no":"A0006"},{"Cust_no":"C0009","Account_no":"A0007"},{"Cust_no":"C0008","Account_no":"A0008"},{"Cust_no":"C0007","Account_no":"A0009"},{"Cust_no":"C0006","Account_no":"A0010"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("651ac4144928331084eb0f54"),
    '1': ObjectId("651ac4144928331084eb0f55"),
    '2': ObjectId("651ac4144928331084eb0f56"),
    '3': ObjectId("651ac4144928331084eb0f57"),
    '4': ObjectId("651ac4144928331084eb0f58"),
    '5': ObjectId("651ac4144928331084eb0f59"),
    '6': ObjectId("651ac4144928331084eb0f5a"),
    '7': ObjectId("651ac4144928331084eb0f5b"),
    '8': ObjectId("651ac4144928331084eb0f5c"),
    '9': ObjectId("651ac4144928331084eb0f5d"),
    '10': ObjectId("651ac4144928331084eb0f5e"),
    '11': ObjectId("651ac4144928331084eb0f5f")
  }
}
Bank4> db.LOAN.insertMany([{"Loan_no":"L0001","Cust_no":"C0005","Amount":3000000,"Branch_code":"B006"},{"Loan_no":"L0002","Cust_no":"C0001","Amount":50000,"Branch_code":"B005"},{"Loan_no":"L0003","Cust_no":"C0002","Amount":8000000,"Branch_code":"B004"},{"Loan_no":"L0004","Cust_no":"C0010","Amount":100000,"Branch_code":"B004"},{"Loan_no":"L0005","Cust_no":"C0009","Amount":9500000,"Branch_code":"B005"},{"Loan_no":"L0006","Cust_no":"C0008","Amount":25000,"Branch_code":"B006"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("651ac52c4928331084eb0f60"),
    '1': ObjectId("651ac52c4928331084eb0f61"),
    '2': ObjectId("651ac52c4928331084eb0f62"),
    '3': ObjectId("651ac52c4928331084eb0f63"),
    '4': ObjectId("651ac52c4928331084eb0f64"),
    '5': ObjectId("651ac52c4928331084eb0f65")
  }
}
Bank4> db.BRANCH.insertMany([{"Branch_code":"B001","Branch_name":"Janakpuri Branch","Branch_city":"Delhi"},{"Branch_code":"B002","Branch_name":"Chandnichowk Branch","Branch_city":"Delhi"},{"Branch_code":"B003","Branch_name":"Juhu Branch","Branch_city":"Mumbai"},{"Branch_code":"B004","Branch_name":"Andheri Branch","Branch_city":"Mumbai"},{"Branch_code":"B005","Branch_name":"Saltlake Branch","Branch_city":"Kolkata"},{"Branch_code":"B006","Branch_name":"Srirampuram Branch","Branch_city":"Chennai"}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("651ac6394928331084eb0f66"),
    '1': ObjectId("651ac6394928331084eb0f67"),
    '2': ObjectId("651ac6394928331084eb0f68"),
    '3': ObjectId("651ac6394928331084eb0f69"),
    '4': ObjectId("651ac6394928331084eb0f6a"),
    '5': ObjectId("651ac6394928331084eb0f6b")
  }
}
Bank4> db.INSTALLMENT.insertMany([{"Inst_no":1,"Loan_no":"L0005","Inst_amount":500000},{"Inst_no":1,"Loan_no":"L0002","Inst_amount":10000},{"Inst_no":1,"Loan_no":"L0003","Inst_amount":50000},{"Inst_no":1,"Loan_no":"L0004","Inst_amount":20000},{"Inst_no":2,"Loan_no":"L0005","Inst_amount":500000},{"Inst_no":1,"Loan_no":"L0006","Inst_amount":3000},{"Inst_no":2,"Loan_no":"L0002","Inst_amount":10000},{"Inst_no":3,"Loan_no":"L0002","Inst_amount":10000},{"Inst_no":2,"Loan_no":"L0003","Inst_amount":50000},{"Inst_no":2,"Loan_no":"L0004","Inst_amount":20000}])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId("651ac7444928331084eb0f6c"),
    '1': ObjectId("651ac7444928331084eb0f6d"),
    '2': ObjectId("651ac7444928331084eb0f6e"),
    '3': ObjectId("651ac7444928331084eb0f6f"),
    '4': ObjectId("651ac7444928331084eb0f70"),
    '5': ObjectId("651ac7444928331084eb0f71"),
    '6': ObjectId("651ac7444928331084eb0f72"),
    '7': ObjectId("651ac7444928331084eb0f73"),
    '8': ObjectId("651ac7444928331084eb0f74"),
    '9': ObjectId("651ac7444928331084eb0f75")
  }
}
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"Loan_data"}},{"$match":{"Loan_data.Branch_city":"Mumbai"}},{"$project":{"_id":0,"Loan_no":1}}])
[ { Loan_no: 'L0003' }, { Loan_no: 'L0004' } ]
Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"Account_data"}},{"$match":{"Account_data.Branch_city":"Delhi"}},{"$project":{"_id":0,"Type":1}}])
[ { Type: 'SB' }, { Type: 'SB' }, { Type: 'SB' } ]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Customer_data.Account_no","as":"Customer_data2"}},{"$match":{"Customer_data2.Balance":{"$gt":100000}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Raj Anand Singh', Phone_no: 9861258466 },
  { Name: 'Ankita Singh', Phone_no: 9879958651 },
  { Name: 'Soumya Jha', Phone_no: 9885623344 },
  { Name: 'Abhijit Mishra', Phone_no: 9455845425 },
  { Name: 'Yash Saraf', Phone_no: 9665854585 },
  { Name: 'Swaroop Ray', Phone_no: 9437855466 },
  { Name: 'Surya Narayan', Phone_no: 9937955212 },
  { Name: 'Pranav Praveen', Phone_no: 9336652441 },
  { Name: 'Stuti Misra', Phone_no: 7870266534 },
  { Name: 'Aslesha Tiwari', Phone_no: null }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"Customer_data"}},{"$unwind":"$Customer_data"},{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Customer_data.Account_no","as":"Customer_data2"}},{"$match":{"Customer_data2.Balance":{"$gt":100000}}},{"$project":{"_id":0,"Name":1,"Phone_no":1}}])
[
  { Name: 'Raj Anand Singh', Phone_no: 9861258466 },
  { Name: 'Ankita Singh', Phone_no: 9879958651 },
  { Name: 'Soumya Jha', Phone_no: 9885623344 },
  { Name: 'Abhijit Mishra', Phone_no: 9455845425 },
  { Name: 'Abhijit Mishra', Phone_no: 9455845425 },
  { Name: 'Swaroop Ray', Phone_no: 9437855466 },
  { Name: 'Swaroop Ray', Phone_no: 9437855466 },
  { Name: 'Swaroop Ray', Phone_no: 9437855466 },
  { Name: 'Surya Narayan', Phone_no: 9937955212 },
  { Name: 'Pranav Praveen', Phone_no: 9336652441 },
  { Name: 'Stuti Misra', Phone_no: 7870266534 },
  { Name: 'Aslesha Tiwari', Phone_no: null }
]
Bank4> db.DEPOSITOR.aggregate([{$lookup:{from:"ACCOUNT",localField:"Account_no",foreignField:"Account_no",as:"account_info"}},{$match:{"account_info.Balance":{$gt:100000}}},{$lookup:{from:"CUSTOMER",localField:"Cust_no",foreignField:"Cust_no",as:"customer_info"}},{$project:{"customer_info.Name":1,"customer_info.Phone_no":1,_id:0}}])
[
  { customer_info: [ { Name: 'Soumya Jha', Phone_no: 9885623344 } ] },
  {
    customer_info: [ { Name: 'Abhijit Mishra', Phone_no: 9455845425 } ]
  },
  { customer_info: [ { Name: 'Swaroop Ray', Phone_no: 9437855466 } ] },
  { customer_info: [ { Name: 'Aslesha Tiwari', Phone_no: null } ] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$match":{"Acc_data.Balance":{"$gt":100000}}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$project":{"_id":0,"Cust_data.Name":1,"Cust_data.Phone_no":1}}])
[
  { Cust_data: [ { Name: 'Soumya Jha', Phone_no: 9885623344 } ] },
  { Cust_data: [ { Name: 'Abhijit Mishra', Phone_no: 9455845425 } ] },
  { Cust_data: [ { Name: 'Swaroop Ray', Phone_no: 9437855466 } ] },
  { Cust_data: [ { Name: 'Aslesha Tiwari', Phone_no: null } ] }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Name":"Raj Anand Singh"}},{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I_data"}},{"$project":{"_id":0,"I_data.Inst_no":1,"I_data.Inst_amount":1}}])
[
  {
    I_data: [
      { Inst_no: 1, Inst_amount: 10000 },
      { Inst_no: 2, Inst_amount: 10000 },
      { Inst_no: 3, Inst_amount: 10000 }
    ]
  }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$match":{"Acc_data.Type":{"$ne":"SB"}}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$project":{"_id":0,"Cust_data.Name":1,"Cust_data.Phone_no":1}}])
[
  { Cust_data: [ { Name: 'Swaroop Ray', Phone_no: 9437855466 } ] },
  { Cust_data: [ { Name: 'Swaroop Ray', Phone_no: 9437855466 } ] },
  { Cust_data: [ { Name: 'Raj Anand Singh', Phone_no: 9861258466 } ] },
  { Cust_data: [ { Name: 'Ankita Singh', Phone_no: 9879958651 } ] },
  { Cust_data: [ { Name: 'Aslesha Tiwari', Phone_no: null } ] },
  { Cust_data: [ { Name: 'Swaroop Ray', Phone_no: 9437855466 } ] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$match":{"Acc_data.Type":{"$ne":"SB"}}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$project":{"_id":0,"Cust_data.Name":1,"Cust_data.Type":1}}])
[
  { Cust_data: [ { Name: 'Swaroop Ray' } ] },
  { Cust_data: [ { Name: 'Swaroop Ray' } ] },
  { Cust_data: [ { Name: 'Raj Anand Singh' } ] },
  { Cust_data: [ { Name: 'Ankita Singh' } ] },
  { Cust_data: [ { Name: 'Aslesha Tiwari' } ] },
  { Cust_data: [ { Name: 'Swaroop Ray' } ] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$match":{"Acc_data.Type":{"$ne":"SB"}}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$project":{"_id":0,"Cust_data.Name":1,"Acc_data.Type":1}}])
[
  {
    Acc_data: [ { Type: 'CA' } ],
    Cust_data: [ { Name: 'Swaroop Ray' } ]
  },
  {
    Acc_data: [ { Type: 'CA' } ],
    Cust_data: [ { Name: 'Swaroop Ray' } ]
  },
  {
    Acc_data: [ { Type: 'FD' } ],
    Cust_data: [ { Name: 'Raj Anand Singh' } ]
  },
  {
    Acc_data: [ { Type: 'FD' } ],
    Cust_data: [ { Name: 'Ankita Singh' } ]
  },
  {
    Acc_data: [ { Type: 'FD' } ],
    Cust_data: [ { Name: 'Aslesha Tiwari' } ]
  },
  {
    Acc_data: [ { Type: 'FD' } ],
    Cust_data: [ { Name: 'Swaroop Ray' } ]
  }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I_data"}},{"$match":{"I_data.Inst_amount":50000}},{"$project":{"_id":0,"L_data.Name":1}}])
[
  { L_data: [ { Name: 'Ankita Singh' } ] }
]
Bank4> db.CUSTOMER.find()
[
  {
    _id: ObjectId("651abe884928331084eb0f40"),
    Cust_no: 'C0001',
    Name: 'Raj Anand Singh',
    Phone_no: 9861258466,
    City: 'Delhi'
  },
  {
    _id: ObjectId("651abe884928331084eb0f41"),
    Cust_no: 'C0002',
    Name: 'Ankita Singh',
    Phone_no: 9879958651,
    City: 'Bangalore'
  },
  {
    _id: ObjectId("651abe884928331084eb0f42"),
    Cust_no: 'C0003',
    Name: 'Soumya Jha',
    Phone_no: 9885623344,
    City: 'Mumbai'
  },
  {
    _id: ObjectId("651abe884928331084eb0f43"),
    Cust_no: 'C0004',
    Name: 'Abhijit Mishra',
    Phone_no: 9455845425,
    City: 'Mumbai'
  },
  {
    _id: ObjectId("651abe884928331084eb0f44"),
    Cust_no: 'C0005',
    Name: 'Yash Saraf',
    Phone_no: 9665854585,
    City: 'Kolkata'
  },
  {
    _id: ObjectId("651abe884928331084eb0f45"),
    Cust_no: 'C0006',
    Name: 'Swaroop Ray',
    Phone_no: 9437855466,
    City: 'Chennai'
  },
  {
    _id: ObjectId("651abe884928331084eb0f46"),
    Cust_no: 'C0007',
    Name: 'Surya Narayan',
    Phone_no: 9937955212,
    City: 'Gurgaon'
  },
  {
    _id: ObjectId("651abe884928331084eb0f47"),
    Cust_no: 'C0008',
    Name: 'Pranav Praveen',
    Phone_no: 9336652441,
    City: 'Pune'
  },
  {
    _id: ObjectId("651abe884928331084eb0f48"),
    Cust_no: 'C0009',
    Name: 'Stuti Misra',
    Phone_no: 7870266534,
    City: 'Mumbai'
  },
  {
    _id: ObjectId("651abe884928331084eb0f49"),
    Cust_no: 'C0010',
    Name: 'Aslesha Tiwari',
    Phone_no: null,
    City: 'Mumbai'
  }
]
Bank4> db.ACCOUNT.find()
[
  {
    _id: ObjectId("651abff54928331084eb0f4a"),
    Account_no: 'A0001',
    Type: 'SB',
    Balance: 200000,
    Branch_code: 'B003'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4b"),
    Account_no: 'A0002',
    Type: 'SB',
    Balance: 15000,
    Branch_code: 'B002'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4c"),
    Account_no: 'A0003',
    Type: 'CA',
    Balance: 850000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4d"),
    Account_no: 'A0004',
    Type: 'CA',
    Balance: 35000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4e"),
    Account_no: 'A0005',
    Type: 'FD',
    Balance: 28500,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4f"),
    Account_no: 'A0006',
    Type: 'FD',
    Balance: 550000,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651abff54928331084eb0f50"),
    Account_no: 'A0007',
    Type: 'SB',
    Balance: 48000,
    Branch_code: 'B001'
  },
  {
    _id: ObjectId("651abff54928331084eb0f51"),
    Account_no: 'A0008',
    Type: 'SB',
    Balance: 7200,
    Branch_code: 'B002'
  },
  {
    _id: ObjectId("651abff54928331084eb0f52"),
    Account_no: 'A0009',
    Type: 'SB',
    Balance: 18750,
    Branch_code: 'B003'
  },
  {
    _id: ObjectId("651abff54928331084eb0f53"),
    Account_no: 'A0010',
    Type: 'FD',
    Balance: 99000,
    Branch_code: 'B004'
  }
]
Bank4> db.DEPOSITOR.find()
[
  {
    _id: ObjectId("651ac4144928331084eb0f54"),
    Cust_no: 'C0003',
    Account_no: 'A0001'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f55"),
    Cust_no: 'C0004',
    Account_no: 'A0001'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f56"),
    Cust_no: 'C0004',
    Account_no: 'A0002'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f57"),
    Cust_no: 'C0006',
    Account_no: 'A0003'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f58"),
    Cust_no: 'C0006',
    Account_no: 'A0004'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f59"),
    Cust_no: 'C0001',
    Account_no: 'A0005'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f5a"),
    Cust_no: 'C0002',
    Account_no: 'A0005'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f5b"),
    Cust_no: 'C0010',
    Account_no: 'A0006'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f5c"),
    Cust_no: 'C0009',
    Account_no: 'A0007'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f5d"),
    Cust_no: 'C0008',
    Account_no: 'A0008'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f5e"),
    Cust_no: 'C0007',
    Account_no: 'A0009'
  },
  {
    _id: ObjectId("651ac4144928331084eb0f5f"),
    Cust_no: 'C0006',
    Account_no: 'A0010'
  }
]
Bank4> db.BRANCH.find()
[
  {
    _id: ObjectId("651ac6394928331084eb0f66"),
    Branch_code: 'B001',
    Branch_name: 'Janakpuri Branch',
    Branch_city: 'Delhi'
  },
  {
    _id: ObjectId("651ac6394928331084eb0f67"),
    Branch_code: 'B002',
    Branch_name: 'Chandnichowk Branch',
    Branch_city: 'Delhi'
  },
  {
    _id: ObjectId("651ac6394928331084eb0f68"),
    Branch_code: 'B003',
    Branch_name: 'Juhu Branch',
    Branch_city: 'Mumbai'
  },
  {
    _id: ObjectId("651ac6394928331084eb0f69"),
    Branch_code: 'B004',
    Branch_name: 'Andheri Branch',
    Branch_city: 'Mumbai'
  },
  {
    _id: ObjectId("651ac6394928331084eb0f6a"),
    Branch_code: 'B005',
    Branch_name: 'Saltlake Branch',
    Branch_city: 'Kolkata'
  },
  {
    _id: ObjectId("651ac6394928331084eb0f6b"),
    Branch_code: 'B006',
    Branch_name: 'Srirampuram Branch',
    Branch_city: 'Chennai'
  }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$match":{"Acc_data.Type":{"$ne":"SB"}}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$lookup":{"from":"BRANCH","localField":"Acc_data.Branch_code","foreignField":"Branch_code","as":"Branch_data"}},{"$match":{"Branch_data.Branch_name":"Saltlake Branch"}},{"$project":{"_id":0,"Cust_data.Name":1,"Cust_data.Phone_no":1}}])
[
  { Cust_data: [ { Name: 'Raj Anand Singh', Phone_no: 9861258466 } ] },
  { Cust_data: [ { Name: 'Ankita Singh', Phone_no: 9879958651 } ] },
  { Cust_data: [ { Name: 'Aslesha Tiwari', Phone_no: null } ] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$match":{"Acc_data.Type":{"$ne":"SB"}}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$lookup":{"from":"BRANCH","localField":"Acc_data.Branch_code","foreignField":"Branch_code","as":"Branch_data"}},{"$match":{"Branch_data.Branch_name":{"$regex":/^Saltlake/}}},{"$project":{"_id":0,"Cust_data.Name":1,"Cust_data.Phone_no":1}}])
[
  { Cust_data: [ { Name: 'Raj Anand Singh', Phone_no: 9861258466 } ] },
  { Cust_data: [ { Name: 'Ankita Singh', Phone_no: 9879958651 } ] },
  { Cust_data: [ { Name: 'Aslesha Tiwari', Phone_no: null } ] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$lookup":{"from":"BRANCH","localField":"Acc_data.Branch_code","foreignField":"Branch_code","as":"Branch_data"}},{"$match":{"Branch_data.Branch_name":{"$regex":/^Saltlak/^Saltlake/}}},{"$project":{"_id":0,"Cust_data.Name":1,"Cust_data.Phone_no":1}}])
[
  { Cust_data: [ { Name: 'Raj Anand Singh', Phone_no: 9861258466 } ] },
  { Cust_data: [ { Name: 'Ankita Singh', Phone_no: 9879958651 } ] },
  { Cust_data: [ { Name: 'Aslesha Tiwari', Phone_no: null } ] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$match":{"Acc_data.Type":{"$ne":"SB"}}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$lookup":{"from":"BRANCH","localField":"Acc_data.Branch_code","foreignField":"Branch_code","as":"Branch_data"}},{"$project":{"_id":0,"Branch_data.Branch_name":1,"Branch_data.Branch_city":1}}])
[
  {
    Branch_data: [ { Branch_name: 'Andheri Branch', Branch_city: 'Mumbai' } ]
  },
  {
    Branch_data: [ { Branch_name: 'Andheri Branch', Branch_city: 'Mumbai' } ]
  },
  {
    Branch_data: [ { Branch_name: 'Saltlake Branch', Branch_city: 'Kolkata' } ]
  },
  {
    Branch_data: [ { Branch_name: 'Saltlake Branch', Branch_city: 'Kolkata' } ]
  },
  {
    Branch_data: [ { Branch_name: 'Saltlake Branch', Branch_city: 'Kolkata' } ]
  },
  {
    Branch_data: [ { Branch_name: 'Andheri Branch', Branch_city: 'Mumbai' } ]
  }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$match":{"Cust_data.Name":"Abhijit Mishra"}},{"$lookup":{"from":"BRANCH","localField":"Acc_data.Branch_code","foreignField":"Branch_code","as":"Branch_data"}},{"$project":{"_id":0,"Branch_data.Branch_name":1,"Branch_data.Branch_city":1}}])
[
  {
    Branch_data: [ { Branch_name: 'Juhu Branch', Branch_city: 'Mumbai' } ]
  },
  {
    Branch_data: [ { Branch_name: 'Chandnichowk Branch', Branch_city: 'Delhi' } ]
  }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$match":{"Cust_data.Name":"Swaroop Ray"}},{"$project":{"_id":0,"Acc_data.Type":1,"Acc_data.Balance":1}}])
[
  { Acc_data: [ { Type: 'CA', Balance: 850000 } ] },
  { Acc_data: [ { Type: 'CA', Balance: 35000 } ] },
  { Acc_data: [ { Type: 'FD', Balance: 99000 } ] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"Cust_data.Name"},"No_of_Accounts":{"$count":{}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$_id","No_of_Accounts":1}}])
MongoServerError: A pipeline stage specification object must contain exactly one field.
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$_id","No_of_Accounts":1}}])
[ { No_of_Accounts: 12, Cust_data: { Name: 'Cust_data.Name' } } ]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":1,"No_of_Accounts":1}}])
[ { No_of_Accounts: 12 } ]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"$No_of_Accounts":{"$gt":1}}},{"$project":{"_id":1,"Cust_data.Name":1,"No_of_Accounts":1}}])
MongoServerError: unknown top level operator: $No_of_Accounts. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$unwind":"$Acc_data"},{"$group":{"_id":"Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":1,"Cust_data.Name":1,"No_of_Accounts":1}}])
[ { _id: 'Cust_data.Name', No_of_Accounts: 12 } ]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":1,"Cust_data.Name":1,"No_of_Accounts":1}}])
[
  { _id: [ 'Abhijit Mishra' ], No_of_Accounts: 2 },
  { _id: [ 'Swaroop Ray' ], No_of_Accounts: 3 }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$_id","No_of_Accounts":1}}])
[
  { No_of_Accounts: 2, Cust_data: { Name: [ 'Abhijit Mishra' ] } },
  { No_of_Accounts: 3, Cust_data: { Name: [ 'Swaroop Ray' ] } }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":1,"No_of_Accounts":1}}])
[ { No_of_Accounts: 2 }, { No_of_Accounts: 3 } ]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$project":{"Cust_data.Name":1}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"No_of_Accounts":1}}])

Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$project":{"Cust_data.Name":1}},{"$project":{"_id":0,"No_of_Accounts":1}}])

Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$_id.Name","No_of_Accounts":1}}])
[
  { No_of_Accounts: 3, Cust_data: { Name: [] } },
  { No_of_Accounts: 2, Cust_data: { Name: [] } }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$_id.Cust_data.Name","No_of_Accounts":1}}])
[
  { No_of_Accounts: 2, Cust_data: { Name: [] } },
  { No_of_Accounts: 3, Cust_data: { Name: [] } }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$$Name","No_of_Accounts":1}}])
MongoServerError: Invalid $project :: caused by :: Use of undefined variable: Name
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$$Cust_data.Name","No_of_Accounts":1}}])
MongoServerError: Invalid $project :: caused by :: Use of undefined variable: Cust_data
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$_id.Cust_data.$[].Name","No_of_Accounts":1}}])
MongoServerError: Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$_id","No_of_Accounts":1}}])
[
  { No_of_Accounts: 2, Cust_data: { Name: [ 'Abhijit Mishra' ] } },
  { No_of_Accounts: 3, Cust_data: { Name: [ 'Swaroop Ray' ] } }
]
Bank4> db.ACCOUNT.find()
[
  {
    _id: ObjectId("651abff54928331084eb0f4a"),
    Account_no: 'A0001',
    Type: 'SB',
    Balance: 200000,
    Branch_code: 'B003'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4b"),
    Account_no: 'A0002',
    Type: 'SB',
    Balance: 15000,
    Branch_code: 'B002'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4c"),
    Account_no: 'A0003',
    Type: 'CA',
    Balance: 850000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4d"),
    Account_no: 'A0004',
    Type: 'CA',
    Balance: 35000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4e"),
    Account_no: 'A0005',
    Type: 'FD',
    Balance: 28500,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4f"),
    Account_no: 'A0006',
    Type: 'FD',
    Balance: 550000,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651abff54928331084eb0f50"),
    Account_no: 'A0007',
    Type: 'SB',
    Balance: 48000,
    Branch_code: 'B001'
  },
  {
    _id: ObjectId("651abff54928331084eb0f51"),
    Account_no: 'A0008',
    Type: 'SB',
    Balance: 7200,
    Branch_code: 'B002'
  },
  {
    _id: ObjectId("651abff54928331084eb0f52"),
    Account_no: 'A0009',
    Type: 'SB',
    Balance: 18750,
    Branch_code: 'B003'
  },
  {
    _id: ObjectId("651abff54928331084eb0f53"),
    Account_no: 'A0010',
    Type: 'FD',
    Balance: 99000,
    Branch_code: 'B004'
  }
]
Please enter a MongoDB connection string (Default: mongodb://locBank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":["$match":{"$expr":{"$eq":["$Balance","$$maxBalance"]}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no"}}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:163)

> 1 | db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":["$match":{"$expr":{"$eq":["$Balance","$$maxBalance"]}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no"}}])
    |

                                         ^
  2 |

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":[{"$match":{"$expr":{"$eq":["$Balance","$$maxBalance"]}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no"}}])
[ { Account_no: 'A0003' } ]
Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":[{"$match":{"$expr":{"$eq":["$Balance","$$maxBalance"]}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"Acc_max_Balance.Balance"}}])
[ { Account_no: 'A0003', Balance: 'Acc_max_Balance.Balance' } ]
Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":[{"$match":{"$expr":{"$eq":["$Balance","$$maxBalance"]}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])
[ { Account_no: 'A0003', Balance: 850000 } ]
Bank4>

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","pipeline":[{"$match":{"$expr":{"$eq":["$Balance","$maxBalance"]}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":[{"$match":{"Balance":{"$eq":$$maxBalance}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])
ReferenceError: $$maxBalance is not defined
Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":[{"$match":{"Balance":{"$eq":$maxBalance}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])
ReferenceError: $maxBalance is not defined
Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":[{"$match":{"Balance":{"$eq":maxBalance}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])
ReferenceError: maxBalance is not defined
Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":[{"$match":{"Balance":{"$eq":"maxBalance"}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":[{"$match":{"Balance":{"$eq":"$maxBalance"}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},"pipeline":[{"$match":{"Balance":{"$eq":"$$maxBalance"}}}],"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},{"$match":{"Balance":{"$eq":"maxBalance"}}},"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])
Uncaught:
SyntaxError: Unexpected token (1:143)

> 1 | db.ACCOUNT.aggregate([{"$group":{"_id":null,"maxBalance":{"$max":"$Balance"}}},{"$lookup":{"from":"ACCOUNT","let":{"maxBalance":"$maxBalance"},{"$match":{"Balance":{"$eq":"maxBalance"}}},"as":"Acc_max_Balance"}},{"$unwind":"$Acc_max_Balance"},{"$project":{"_id":0,"Account_no":"$Acc_max_Balance.Account_no","Balance":"$Acc_max_Balance.Balance"}}])
    |

                     ^
Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":"$Branch_code","totalBalance":{"$sum":"$Balance"}}},{"$group":{"_id":null,"avgTotalBalance":{"$avg":"$totalBalance"}}},{"$lookup":{"from":"ACCOUNT","pipeline":[{"$match":{"$expr":{"$gt":["$totalBalance","$avgTotalBalance"]}}}],"as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$project":{"_id":0,"Acc_data.Branch_code":"$_id","totalBalance":1}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":"$Branch_code","totalBalance":{"$sum":"$Balance"}}},{"$group":{"_id":null,"avgTotalBalance":{"$avg":"$totalBalance"}}},{"$lookup":{"from":"ACCOUNT","pipeline":[{"$match":{"$expr":{"$gt":["$totalBalance","$avgTotalBalance"]}}}],"as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$project":{"_id":0,"Acc_data.Branch_code":"$_id"}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":"$Branch_code","totalBalance":{"$sum":"$Balance"}}},{"$group":{"_id":null,"avgTotalBalance":{"$avg":"$totalBalance"}}},{"$lookup":{"from":"ACCOUNT","pipeline":[{"$match":{"$expr":{"$gt":["$totalBalance","$avgTotalBalance"]}}}],"as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$project":{"_id":0,"$Acc_data.Branch_code":"$_id"}}])
MongoServerError: Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.
Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":"$Branch_code","totalBalance":{"$sum":"$Balance"}}},{"$group":{"_id":null,"avgTotalBalance":{"$avg":"$totalBalance"}}},{"$lookup":{"from":"ACCOUNT","pipeline":[{"$match":{"$expr":{"$gt":["$totalBalance","$avgTotalBalance"]}}}],"as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$project":{"_id":0,"Branch_code":"$_id"}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":"$Branch_code","totalBalance":{"$sum":"$Balance"}}},{"$group":{"_id":null,"avgTotalBalance":{"$avg":"$totalBalance"}}},{"$lookup":{"from":"ACCOUNT","pipeline":[{"$match":{"$expr":{"$gt":["$totalBalance","$avgTotalBalance"]}}}],"as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$project":{"_id":0,"Branch_code":1}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":"$Branch_code","totalBalance":{"$sum":"$Balance"}}},{"$group":{"_id":null,"avgTotalBalance":{"$avg":"$totalBalance"}}},{"$lookup":{"from":"ACCOUNT","let":{"totalBalance":"$totalBalance","avgTotalBalance":"$avgTotalBalance"},"pipeline":[{"$match":{"$expr":{"$gt":["$$totalBalance","$$avgTotalBalance"]}}}],"as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$project":{"_id":0,"Branch_code":1}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":"$Branch_code","totalBalance":{"$sum":"$Balance"}}},{"$group":{"_id":null,"avgTotalBalance":{"$avg":"$totalBalance"}}},{"$lookup":{"from":"ACCOUNT","let":{"totalBalance":"$totalBalance","avgTotalBalance":"$avgTotalBalance"},"pipeline":[{"$match":{"$expr":{"$gt":["$$totalBalance","$$avgTotalBalance"]}}}],"as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$project":{"_id":0,"Branch_code":"$_id"}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":"$Branch_code","totalBalance":{"$sum":"$Balance"}}},{"$group":{"_id":null,"avgTotalBalance":{"$avg":"$totalBalance"}}},{"$lookup":{"from":"ACCOUNT","let":{"totalBalance":"$totalBalance","avgTotalBalance":"$avgTotalBalance"},"pipeline":[{"$match":{"$expr":{"$gt":["$$totalBalance","$$avgTotalBalance"]}}}],"as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$project":{"_id":0,"Acc_data.Branch_code":"$_id"}}])

Bank4> db.ACCOUNT.aggregate([{"$group":{"_id":"$Branch_code","totalBalance":{"$sum":"$Balance"}}},{"$group":{"_id":null,"avgTotalBalance":{"$avg":"$totalBalance"}}},{"$lookup":{"from":"ACCOUNT","let":{"totalBalance":"$totalBalance","avgTotalBalance":"$avgTotalBalance"},"pipeline":[{"$match":{"$expr":{"$gt":["$$totalBalance","$$avgTotalBalance"]}}}],"as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$project":{"_id":1,"Acc_data.Branch_code":"$_id"}}])

Bank4> db.ACCOUNT.aggregate([{$group:{_id:"$Branch_code",totalBalance:{$sum:"$Balance"}}},{$group:{_id:null,averageTotalBalance:{$avgBank4> db.ACCOUNT.aggregate([{$group:{_id:"$Branch_code",totalBalance:{$sum:"$Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$p$project:{_id:0,Branch_code:"$branches"}}])

Bank4> db.ACCOUNT.aggregate([{$group:{_id:"$Branch_code",totalBalance:{$sum:"$Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unw
Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}},{$project:{_id:0,Branch_code:"$branches"}}])
Uncaught:
SyntaxError: Unexpected token (1:399)

> 1 | db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}},{$project:{_id:0,Branch_code:"$branches"}}])
    |


      ^
  2 |

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}},{$project:{_id:0,Branch_code:"$branches"}}])
Uncaught:
SyntaxError: Unexpected token (1:399)

> 1 | db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}},{$project:{_id:0,Branch_code:"$branches"}}])
    |


      ^
  2 |

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}},{$project:{_id:0,Branch_code:"$branches"}
Uncaught:
SyntaxError: Unexpected token (1:399)

> 1 | db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}},{$project:{_id:0,Branch_code:"$branches"}
    |


      ^
  2 |

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$e
$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])
Uncaught:
SyntaxError: Missing semicolon. (1:444)

> 1 | db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])
    |


                                                   ^
  2 |

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unw
Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwBank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])

Bank4> db.BRANCH.aggregate([{$lookup:{from:"ACCOUNT",localField:"Branch_code",foreignField:"Branch_code",as:"branch_accounts"}},{$unwind:"$branch_accounts"},{$group:{_id:"$Branch_code",totalBalance:{$sum:"$branch_accounts.Balance"}}},{$group:{_id:null,averageTotalBalance:{$avg:"$totalBalance"},branches:{$push:"$_id"}}},{$unwind:"$branches"},{$match:{$expr:{$gt:["$totalBalance","$averageTotalBalance"]}}},{$project:{_id:0,Branch_code:"$branches"}}])

Bank4> db.BRANCH.aggregate([{ $lookup: { from: "ACCOUNT", localField: "Branch_code", foreignField: "Branch_code", as: "branch_accounts" } }, { $unwind: "$branch_accounts" }, { $group: { _id: "$Branch_code", totalBalance: { $sum: "$branch_accounts.Balance" } } }, { $group: { _id: null, averageTotalBalance: { $avg: "$totalBalance" }, branches: { $push: "$_id" } } }, { $unwind: "$branches" }, { $mat
$match: { $expr: { $gt: ["$totalBalance", "$averageTotalBalance"] } } }, { $project: { _id: 0, Branch_code: "$branches" } }])

Bank4> db.BRANCH.aggregate([{ $lookup: { from: "ACCOUNT", localField: "Branch_code", foreignField: "Branch_code", as: "branch_accounts" } }, { $unwind: "$branch_accounts" }, { $group: { _id: "$Branch_code", totalBalance: { $sum: "$branch_accounts.Balance" } } }, { $group: { _id: null, averageTotalBalance: { $avg: "$totalBalance" }, branches: { $push: "$_id" } } }, { $unwind: "$branches" }, { $mat$match: { $expr: { $gt: ["$totalBalance", "$averageTotalBalance"] } } }, { $project: { _id: 0, Branch_code: "$branches" } }])

Bank4> db.ACCOUNT.aggregate([{ $group: { _id: "$Branch_code", totalBalance: { $sum: "$Balance" } } }, { $group: { _id: null, averageTBank4> db.ACCOUNT.aggregate([{ $group: { _id: "$Branch_code", totalBalance: { $sum: "$Balance" } } }, { $group: { _id: null, averageTotalBalance: { $avg: "$totalBalance" }, branches: { $push: "$_id" } } }, { $unwind: "$branches" }, { $match: { $expr: { $gt: ["$total
Balance", "$averageTotalBalance"] } } }, { $project: { _id: 0, Branch_code: "$branches" } }])

Bank4> db.ACCOUNT.aggregate([{ $group: { _id: "$Branch_code", totalBalance: { $sum: "$Balance" } } }, { $group: { _id: null, averageT
Bank4> db.ACCOUNT.aggregate([{ $group: { _id: "$Branch_code", totalBalance: { $sum: "$Balance" } } }, { $group: { _id: null, averageTotalBalance: { $avg: "$totalBalance" }, branches: { $push: "$_id" } } }, { $unwind: "$branches" }, { $match: { $expr: { $gt: ["$totalBalance", "$averageTotalBalance"] } } }, { $project: { _id: 0, Branch_code: "$branches" } }])

Bank4> db.ACCOUNT.aggregate([{ $group: { _id: "$Branch_code", totalBalance: { $sum: "$Balance" } } }, { $group: { _id: null, averageTBank4> db.ACCOUNT.aggregate([{ $group: { _id: "$Branch_code", totalBalance: { $sum: "$Balance" } } }, { $group: { _id: null, averageTotalBalance: { $avg: "$totalBalance" }, branches: { $push: "$_id" } } }, { $unwind: "$branches" }, { $match: { $expr: { $gt: ["$totalBalance", "$averageTotalBalance"] } } }, { $project: { _id: 0, Branch_code: "$branches" } }])


Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$match":{"Acc_data.Account_no":"A0004"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$project":{"_id":0,"Cust_data.Name":1,"Cust_data.Phone_no":1,"Cust_data.Cust_no":1}}])
[
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}}])
[
  {
    _id: ObjectId("651ac52c4928331084eb0f60"),
    Loan_no: 'L0001',
    Cust_no: 'C0005',
    Amount: 3000000,
    Branch_code: 'B006',
    L_data: [
      {
        _id: ObjectId("651abe884928331084eb0f44"),
        Cust_no: 'C0005',
        Name: 'Yash Saraf',
        Phone_no: 9665854585,
        City: 'Kolkata'
      }
    ]
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f61"),
    Loan_no: 'L0002',
    Cust_no: 'C0001',
    Amount: 50000,
    Branch_code: 'B005',
    L_data: [
      {
        _id: ObjectId("651abe884928331084eb0f40"),
        Cust_no: 'C0001',
        Name: 'Raj Anand Singh',
        Phone_no: 9861258466,
        City: 'Delhi'
      }
    ]
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f62"),
    Loan_no: 'L0003',
    Cust_no: 'C0002',
    Amount: 8000000,
    Branch_code: 'B004',
    L_data: [
      {
        _id: ObjectId("651abe884928331084eb0f41"),
        Cust_no: 'C0002',
        Name: 'Ankita Singh',
        Phone_no: 9879958651,
        City: 'Bangalore'
      }
    ]
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f63"),
    Loan_no: 'L0004',
    Cust_no: 'C0010',
    Amount: 100000,
    Branch_code: 'B004',
    L_data: [
      {
        _id: ObjectId("651abe884928331084eb0f49"),
        Cust_no: 'C0010',
        Name: 'Aslesha Tiwari',
        Phone_no: null,
        City: 'Mumbai'
      }
    ]
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f64"),
    Loan_no: 'L0005',
    Cust_no: 'C0009',
    Amount: 9500000,
    Branch_code: 'B005',
    L_data: [
      {
        _id: ObjectId("651abe884928331084eb0f48"),
        Cust_no: 'C0009',
        Name: 'Stuti Misra',
        Phone_no: 7870266534,
        City: 'Mumbai'
      }
    ]
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f65"),
    Loan_no: 'L0006',
    Cust_no: 'C0008',
    Amount: 25000,
    Branch_code: 'B006',
    L_data: [
      {
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"L_data",
...
{"$match":{"L_data.Name":"Yash Saraf"}},{"$project":{"_id":0,"L_data.Loan_no":1,"L_data.Branch_code":1}}])s":"L_data"}},
[ { L_data: [ {} ] } ]
Bank4> db.LOAN.aggregate([{ "$lookup": { "from": "CUSTOMER", "localField": "Cust_no", "foreignField": "Cust_no", "as": "L_data" } }, { "$match": { "L_data.Name": "Yash Saraf" } }, { "$project": { "_id": 0, "L_data.Loan_no": 1, "L_data.Branch_code": 1 } }])
[ { L_data: [ {} ] } ]
{"$match":{"L_data.Name":"Yash Saraf"}},{"$project":{"_id":0,"Loan_no":1,"Branch_code":1}}])":"Cust_no","as":"L_data"}},
[ { Loan_no: 'L0001', Branch_code: 'B006' } ]
{"$match":{"Loan_no":""}},{"$project":{"_id":0,"L_data.Name":1}}])d":"Cust_no","foreignField":"Cust_no","as":"L_data"}},

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"Loan_no":""}},{"$project":{"_id":0,"L_data.Name":1}}])

{"$match":{"L_data.Loan_no":""}},{"$project":{"_id":0,"L_data.Name":1}}])t_no","foreignField":"Cust_no","as":"L_data"}},

{"$match":{"L_data.Loan_no":""}},{"$project":{"_id":0,"Name":1}}])d":"Cust_no","foreignField":"Cust_no","as":"C_data"}},

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$match":{"L_data.Loan_no":""}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"C_data"}}tch":{"L_data.Loan_no":""}},{"$project":{"_id":0,"Name":1}}])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:112)

> 1 | db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"C_data"}}tch":{"L_data.Loan_no":""}},{"$project":{"_id":0,"Name":1}}])
    |                                                                                                                 ^
  2 |

{"$match":{"C_data.Loan_no":""}},{"$project":{"_id":0,"Name":1}}])d":"Cust_no","foreignField":"Cust_no","as":"C_data"}},

{"$match":{"C_data.Loan_no":""}},{"$project":{"_id":0,"Name":1}}])d":"Cust_no","foreignField":"Cust_no","as":"C_data"}},

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$match":{"C_data.Loan_no":""}},{"$project":{"_id":0,"Name":1}}])


test> use Bank4
switched to db Bank4
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$match":{"C_data.Loan_no":""}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$match":{"C_data.Loan_no":{"$eq":""}}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.find()
[
  {
    _id: ObjectId("651abe884928331084eb0f40"),
    Cust_no: 'C0001',
    Name: 'Raj Anand Singh',
    Phone_no: 9861258466,
    City: 'Delhi'
  },
  {
    _id: ObjectId("651abe884928331084eb0f41"),
    Cust_no: 'C0002',
    Name: 'Ankita Singh',
    Phone_no: 9879958651,
    City: 'Bangalore'
  },
  {
    _id: ObjectId("651abe884928331084eb0f42"),
    Cust_no: 'C0003',
    Name: 'Soumya Jha',
    Phone_no: 9885623344,
    City: 'Mumbai'
  },
  {
    _id: ObjectId("651abe884928331084eb0f43"),
    Cust_no: 'C0004',
    Name: 'Abhijit Mishra',
    Phone_no: 9455845425,
    City: 'Mumbai'
  },
  {
    _id: ObjectId("651abe884928331084eb0f44"),
    Cust_no: 'C0005',
    Name: 'Yash Saraf',
    Phone_no: 9665854585,
    City: 'Kolkata'
  },
  {
    _id: ObjectId("651abe884928331084eb0f45"),
    Cust_no: 'C0006',
    Name: 'Swaroop Ray',
    Phone_no: 9437855466,
    City: 'Chennai'
  },
  {
    _id: ObjectId("651abe884928331084eb0f46"),
    Cust_no: 'C0007',
    Name: 'Surya Narayan',
    Phone_no: 9937955212,
    City: 'Gurgaon'
  },
  {
    _id: ObjectId("651abe884928331084eb0f47"),
    Cust_no: 'C0008',
    Name: 'Pranav Praveen',
    Phone_no: 9336652441,
    City: 'Pune'
  },
  {
    _id: ObjectId("651abe884928331084eb0f48"),
    Cust_no: 'C0009',
    Name: 'Stuti Misra',
    Phone_no: 7870266534,
    City: 'Mumbai'
  },
  {
    _id: ObjectId("651abe884928331084eb0f49"),
    Cust_no: 'C0010',
    Name: 'Aslesha Tiwari',
    Phone_no: null,
    City: 'Mumbai'
  }
]
Bank4> db.LOAN.find()
[
  {
    _id: ObjectId("651ac52c4928331084eb0f60"),
    Loan_no: 'L0001',
    Cust_no: 'C0005',
    Amount: 3000000,
    Branch_code: 'B006'
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f61"),
    Loan_no: 'L0002',
    Cust_no: 'C0001',
    Amount: 50000,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f62"),
    Loan_no: 'L0003',
    Cust_no: 'C0002',
    Amount: 8000000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f63"),
    Loan_no: 'L0004',
    Cust_no: 'C0010',
    Amount: 100000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f64"),
    Loan_no: 'L0005',
    Cust_no: 'C0009',
    Amount: 9500000,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651ac52c4928331084eb0f65"),
    Loan_no: 'L0006',
    Cust_no: 'C0008',
    Amount: 25000,
    Branch_code: 'B006'
  }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$match":{"C_data":{"$size":0}}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Swaroop Ray' },
  { Name: 'Surya Narayan' }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$match":{"Cust_data.Cust_no":"C0010"}},{"$project":{"_id":0,"Cust_data.Name":1,"Acc_data.Account_no":1,"Acc_data.Balance":1}}])
[
  {
    Acc_data: [ { Account_no: 'A0006', Balance: 550000 } ],
    Cust_data: [ { Name: 'Aslesha Tiwari' } ]
  }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$match":{"Name":"Aslesha Tiwari"}},{"$lookup":{"from":"BRANCH","localField":"C_data.Branch_code","foreignField":"Branch_code","as":"B_data"}},{"$project":{"_id":0,"B_data.Branch_city":1}}])
[
  { B_data: [ { Branch_city: 'Mumbai' } ] }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$match":{"Name":"Ankita Singh"}},{"$lookup":{"from":"INSTALLMENT","localField":"C_data.Loan_no","foreignField":"Loan_no","as":"I_data"}},{"$project":{"_id":0,"I_data.Inst_no":1,"I_data.Loan_no":1,"I_data.Inst_amount":1}}])
[
  {
    I_data: [
      { Inst_no: 1, Loan_no: 'L0003', Inst_amount: 50000 },
      { Inst_no: 2, Loan_no: 'L0003', Inst_amount: 50000 }
    ]
  }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$match":{"Cust_data.Name":"Abhijit Mishra"}},{"$lookup":{"from":"BRANCH","localField":"Acc_data.Branch_code","foreignField":"Branch_code","as":"B_data"}},{"$project":{"_id":0,"B_data.Branch_name":1,"B_data.Branch_city":1}}])
[
  { B_data: [ { Branch_name: 'Juhu Branch', Branch_city: 'Mumbai' } ] },
  {
    B_data: [ { Branch_name: 'Chandnichowk Branch', Branch_city: 'Delhi' } ]
  }
]
Bank4> db.ACCOUNT.find()
[
  {
    _id: ObjectId("651abff54928331084eb0f4a"),
    Account_no: 'A0001',
    Type: 'SB',
    Balance: 200000,
    Branch_code: 'B003'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4b"),
    Account_no: 'A0002',
    Type: 'SB',
    Balance: 15000,
    Branch_code: 'B002'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4c"),
    Account_no: 'A0003',
    Type: 'CA',
    Balance: 850000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4d"),
    Account_no: 'A0004',
    Type: 'CA',
    Balance: 35000,
    Branch_code: 'B004'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4e"),
    Account_no: 'A0005',
    Type: 'FD',
    Balance: 28500,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651abff54928331084eb0f4f"),
    Account_no: 'A0006',
    Type: 'FD',
    Balance: 550000,
    Branch_code: 'B005'
  },
  {
    _id: ObjectId("651abff54928331084eb0f50"),
    Account_no: 'A0007',
    Type: 'SB',
    Balance: 48000,
    Branch_code: 'B001'
  },
  {
    _id: ObjectId("651abff54928331084eb0f51"),
    Account_no: 'A0008',
    Type: 'SB',
    Balance: 7200,
    Branch_code: 'B002'
  },
  {
    _id: ObjectId("651abff54928331084eb0f52"),
    Account_no: 'A0009',
    Type: 'SB',
    Balance: 18750,
    Branch_code: 'B003'
  },
  {
    _id: ObjectId("651abff54928331084eb0f53"),
    Account_no: 'A0010',
    Type: 'FD',
    Balance: 99000,
    Branch_code: 'B004'
  }
]
Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"A_data"}},{"$unwind":"$A_data"},{"$project":{"_id":0,"A_data.Account_no":1,"A_data.Type":1}},{"$out":"ACCOUNT_TYPE"}])

Bank4> db.ACCOUNT_TYPE.find()
[
  {
    _id: ObjectId("651b74d56f17893f7b80ed6f"),
    A_data: { Account_no: 'A0001', Type: 'SB' }
  },
  {
    _id: ObjectId("651b74d56f17893f7b80ed70"),
    A_data: { Account_no: 'A0002', Type: 'SB' }
  },
  {
    _id: ObjectId("651b74d56f17893f7b80ed71"),
    A_data: { Account_no: 'A0003', Type: 'CA' }
  },
  {
    _id: ObjectId("651b74d56f17893f7b80ed72"),
    A_data: { Account_no: 'A0004', Type: 'CA' }
  },
  {
    _id: ObjectId("651b74d56f17893f7b80ed73"),
    A_data: { Account_no: 'A0005', Type: 'FD' }
  },
  {
    _id: ObjectId("651b74d56f17893f7b80ed74"),
    A_data: { Account_no: 'A0006', Type: 'FD' }
  },
  {
    _id: ObjectId("651b74d56f17893f7b80ed75"),
    A_data: { Account_no: 'A0007', Type: 'SB' }
  },
  {
    _id: ObjectId("651b74d56f17893f7b80ed76"),
    A_data: { Account_no: 'A0008', Type: 'SB' }
  },
  {
    _id: ObjectId("651b74d56f17893f7b80ed77"),
    A_data: { Account_no: 'A0009', Type: 'SB' }
  },
  {
    _id: ObjectId("651b74d56f17893f7b80ed78"),
    A_data: { Account_no: 'A0010', Type: 'FD' }
  }
]
Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"A_data"}},{"$unwind":"$A_data"},{"$project":{"_id":0,"ACCOUNT_NO":"$A_data.Account_no","TYPE":"$A_data.Type"}},{"$out":"ACCOUNT_TYPE"}])

Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"A_data"}},{"$unwind":"$A_data"},{"$project":{"_id":0,"A_data.Account_no":1,"A_data.Type":1}},{"$out":"ACCOUNT_TYPE1"}])

Bank4> db.ACCOUNT_TYPE1.find()
[
  {
    _id: ObjectId("651b75276f17893f7b80edb8"),
    A_data: { Account_no: 'A0001', Type: 'SB' }
  },
  {
    _id: ObjectId("651b75276f17893f7b80edb9"),
    A_data: { Account_no: 'A0002', Type: 'SB' }
  },
  {
    _id: ObjectId("651b75276f17893f7b80edba"),
    A_data: { Account_no: 'A0003', Type: 'CA' }
  },
  {
    _id: ObjectId("651b75276f17893f7b80edbb"),
    A_data: { Account_no: 'A0004', Type: 'CA' }
  },
  {
    _id: ObjectId("651b75276f17893f7b80edbc"),
    A_data: { Account_no: 'A0005', Type: 'FD' }
  },
  {
    _id: ObjectId("651b75276f17893f7b80edbd"),
    A_data: { Account_no: 'A0006', Type: 'FD' }
  },
  {
    _id: ObjectId("651b75276f17893f7b80edbe"),
    A_data: { Account_no: 'A0007', Type: 'SB' }
  },
  {
    _id: ObjectId("651b75276f17893f7b80edbf"),
    A_data: { Account_no: 'A0008', Type: 'SB' }
  },
  {
    _id: ObjectId("651b75276f17893f7b80edc0"),
    A_data: { Account_no: 'A0009', Type: 'SB' }
  },
  {
    _id: ObjectId("651b75276f17893f7b80edc1"),
    A_data: { Account_no: 'A0010', Type: 'FD' }
  }
]
Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"A_data"}},{"$unwind":"$A_data"},{"$project":{"_id":0,"ACCOUNT_NO":"$A_data.Account_no","TYPE":"$A_data.Type"}},{"$out":"ACCOUNT_TYPE1"}])

Bank4> db.ACCOUNT_TYPE1.find()
[
  {
    _id: ObjectId("651b754a6f17893f7b80edd9"),
    ACCOUNT_NO: 'A0001',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b754a6f17893f7b80edda"),
    ACCOUNT_NO: 'A0002',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b754a6f17893f7b80eddb"),
    ACCOUNT_NO: 'A0003',
    TYPE: 'CA'
  },
  {
    _id: ObjectId("651b754a6f17893f7b80eddc"),
    ACCOUNT_NO: 'A0004',
    TYPE: 'CA'
  },
  {
    _id: ObjectId("651b754a6f17893f7b80eddd"),
    ACCOUNT_NO: 'A0005',
    TYPE: 'FD'
  },
  {
    _id: ObjectId("651b754a6f17893f7b80edde"),
    ACCOUNT_NO: 'A0006',
    TYPE: 'FD'
  },
  {
    _id: ObjectId("651b754a6f17893f7b80eddf"),
    ACCOUNT_NO: 'A0007',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b754a6f17893f7b80ede0"),
    ACCOUNT_NO: 'A0008',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b754a6f17893f7b80ede1"),
    ACCOUNT_NO: 'A0009',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b754a6f17893f7b80ede2"),
    ACCOUNT_NO: 'A0010',
    TYPE: 'FD'
  }
]
Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"A_data"}},{"$unwind":"$A_data"},{"$project":{"_id":0,"ACCOUNT_NO":"$A_data.Account_no","TYPE":"$A_data.Type"}},{"$out":"ACCOUNT_TYPE1
Uncaught:
SyntaxError: Unterminated string constant. (1:230)

> 1 | db.ACCOUNT.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"A_data"}},{"$unwind":"$A_data"},{"$project":{"_id":0,"ACCOUNT_NO":"$A_data.Account_no","TYPE":"$A_data.Type"}},{"$out":"ACCOUNT_TYPE1
    |
                                                                                            ^
  2 |

Bank4> db.ACCOUNT_TYPE1.drop()
true
Bank4> db.ACCOUNT_TYPE.drop()
true
Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"A_data"}},{"$unwind":"$A_data"},{"$project":{"_id":0,"ACCOUNT_NO":null,"TYPE":null}},{"$out":"ACCOUNT_TYPE"}])

Bank4> db.ACCOUNT_TYPE.find()
[
  {
    _id: ObjectId("651b76016f17893f7b80ee5a"),
    ACCOUNT_NO: null,
    TYPE: null
  },
  {
    _id: ObjectId("651b76016f17893f7b80ee5b"),
    ACCOUNT_NO: null,
    TYPE: null
  },
  {
    _id: ObjectId("651b76016f17893f7b80ee5c"),
    ACCOUNT_NO: null,
    TYPE: null
  },
  {
    _id: ObjectId("651b76016f17893f7b80ee5d"),
    ACCOUNT_NO: null,
    TYPE: null
  },
  {
    _id: ObjectId("651b76016f17893f7b80ee5e"),
    ACCOUNT_NO: null,
    TYPE: null
  },
  {
    _id: ObjectId("651b76016f17893f7b80ee5f"),
    ACCOUNT_NO: null,
    TYPE: null
  },
  {
    _id: ObjectId("651b76016f17893f7b80ee60"),
    ACCOUNT_NO: null,
    TYPE: null
  },
  {
    _id: ObjectId("651b76016f17893f7b80ee61"),
    ACCOUNT_NO: null,
    TYPE: null
  },
  {
    _id: ObjectId("651b76016f17893f7b80ee62"),
    ACCOUNT_NO: null,
    TYPE: null
  },
  {
    _id: ObjectId("651b76016f17893f7b80ee63"),
    ACCOUNT_NO: null,
    TYPE: null
  }
]
Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"A_data"}},{"$unwind":"$A_data"},{"$match":{"A_data.Balance":{"$lt":50000}}},{"$project":{"_id":0,"ACCOUNT_NO":"$A_data.Account_no","TYPE":"$A_data.Type"}},{"$out":"ACCOUNT_TYPE"}])

Bank4> db.ACCOUNT_TYPE.find()
[
  {
    _id: ObjectId("651b77576f17893f7b80ef38"),
    ACCOUNT_NO: 'A0002',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef39"),
    ACCOUNT_NO: 'A0004',
    TYPE: 'CA'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3a"),
    ACCOUNT_NO: 'A0005',
    TYPE: 'FD'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3b"),
    ACCOUNT_NO: 'A0007',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3c"),
    ACCOUNT_NO: 'A0008',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3d"),
    ACCOUNT_NO: 'A0009',
    TYPE: 'SB'
  }
]
Bank4> db.ACCOUNT_TYPE.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Acc_data.Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$match":{"C_data.Cust_no":{"$eq":"C0007"}}},{"$set":{"ACCOUNT_TYPE":"FD"}}])

Bank4> db.ACCOUNT_TYPE.find()
[
  {
    _id: ObjectId("651b77576f17893f7b80ef38"),
    ACCOUNT_NO: 'A0002',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef39"),
    ACCOUNT_NO: 'A0004',
    TYPE: 'CA'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3a"),
    ACCOUNT_NO: 'A0005',
    TYPE: 'FD'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3b"),
    ACCOUNT_NO: 'A0007',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3c"),
    ACCOUNT_NO: 'A0008',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3d"),
    ACCOUNT_NO: 'A0009',
    TYPE: 'SB'
  }
]
Bank4> db.ACCOUNT_TYPE.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Acc_data.Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$match":{"C_data.Cust_no":"C0007"}},{"$set":{"ACCOUNT_TYPE":"FD"}}])

Bank4> db.ACCOUNT_TYPE.find()
[
  {
    _id: ObjectId("651b77576f17893f7b80ef38"),
    ACCOUNT_NO: 'A0002',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef39"),
    ACCOUNT_NO: 'A0004',
    TYPE: 'CA'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3a"),
    ACCOUNT_NO: 'A0005',
    TYPE: 'FD'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3b"),
    ACCOUNT_NO: 'A0007',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3c"),
    ACCOUNT_NO: 'A0008',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3d"),
    ACCOUNT_NO: 'A0009',
    TYPE: 'SB'
  }
]
Bank4> db.ACCOUNT_TYPE.aggregate([{"$lookup":{"from":"DEPOSITOR","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$unwind":"$Acc_data"},{"$lookup":{"from":"CUSTOMER","localField":"Acc_data.Cust_no","foreignField":"Cust_no","as":"C_data"}},{"$unwind":"$Cust_data"},{"$match":{"C_data.Cust_no":"C0007"}},{"$set":{"ACCOUNT_TYPE":"FD"}}])

Bank4> db.ACCOUNT_TYPE.find()
[
  {
    _id: ObjectId("651b77576f17893f7b80ef38"),
    ACCOUNT_NO: 'A0002',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef39"),
    ACCOUNT_NO: 'A0004',
    TYPE: 'CA'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3a"),
    ACCOUNT_NO: 'A0005',
    TYPE: 'FD'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3b"),
    ACCOUNT_NO: 'A0007',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3c"),
    ACCOUNT_NO: 'A0008',
    TYPE: 'SB'
  },
  {
    _id: ObjectId("651b77576f17893f7b80ef3d"),
    ACCOUNT_NO: 'A0009',
    TYPE: 'SB'
  }
]
test> use Bank4
switched to db Bank4
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"Name":"Ankita Singh"}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"$expr":{"$and":[{"$ne":["L_data.Loan_no",""]},{"$ne":["A_data.Account_no",""]}]}}},{"$project":{"_id":0,"Name":1}}])
[ { Name: 'Ankita Singh' } ]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"Name":"Ankita Singh"}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"$and":[{"L_data.Loan_no":{"$ne":""}},{"A_data.Account_no":{"$ne":""}}]}},{"$project":{"_id":0,"Name":1}}])
[ { Name: 'Ankita Singh' } ]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"$and":[{"L_data.Loan_no":{"$ne":""}},{"A_data.Account_no":{"$ne":""}}]}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Yash Saraf' },
  { Name: 'Swaroop Ray' },
  { Name: 'Surya Narayan' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Misra' },
  { Name: 'Aslesha Tiwari' }
Bank4>
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"$expr":{"$and":[{"$ne":["L_data.Loan_no",""]},{"$ne":["A_data.Account_no",""]}]}}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Yash Saraf' },
  { Name: 'Swaroop Ray' },
  { Name: 'Surya Narayan' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Misra' },
  { Name: 'Aslesha Tiwari' }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$ne":""}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$ne":""}}},{"$lookup":{"from":"DEPOSITOR","localFieBank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$ne":""}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$ne":""}}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Yash Saraf' },
  { Name: 'Swaroop Ray' },
  { Name: 'Surya Narayan' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Misra' },
  { Name: 'Aslesha Tiwari' }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$ne":"Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$ne":""}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$ne":""}}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Yash Saraf' },
  { Name: 'Swaroop Ray' },
  { Name: 'Surya Narayan' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Misra' },
  { Name: 'Aslesha Tiwari' }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$ne":""}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$ne":""}}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Yash Saraf' },
  { Name: 'Swaroop Ray' },
  { Name: 'Surya Narayan' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Misra' },
  { Name: 'Aslesha Tiwari' }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$gt":{"$size":0}}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$gt":{"$size":0}}}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$gt":{"$size":0}}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$gt":{"$size":0}}}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$ne":{"$size":0}}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$ne":{"$size":0}}}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Soumya Jha' },
  { Name: 'Abhijit Mishra' },
  { Name: 'Yash Saraf' },
  { Name: 'Swaroop Ray' },
  { Name: 'Surya Narayan' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Misra' },
  { Name: 'Aslesha Tiwari' }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$regex":/^A/}}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Misra' },
  { Name: 'Aslesha Tiwari' }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":""}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$eq":""}}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Yash Saraf' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Misra' },
  { Name: 'Aslesha Tiwari' }
]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$size":0}}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$size":0}}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data":{"$size":0}}},{"$project":{"_id":0,"Name":1}}])
[ { Name: 'Yash Saraf' } ]
Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$size":0}}},{"$project":{"_id":0,"Name
Uncaught:
SyntaxError: Unterminated string constant. (1:426)

> 1 | db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$size":0}}},{"$project":{"_id":0,"Name
    |

                                                                                                                        ^
  2 |

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data":{"$eq":""}}},{"$project":{"_id":0,"Name":1}}])

Bank4> db.CUSTOMER.aggregate([{"$lookup":{"from":"LOAN","localField":"Cust_no","foreignField":"Cust_no","as":"L_data"}},{"$match":{"L_data.Loan_no":{"$regex":/^L/}}},{"$lookup":{"from":"DEPOSITOR","localField":"Cust_no","foreignField":"Cust_no","as":"D_data"}},{"$lookup":{"from":"ACCOUNT","localField":"D_data.Account_no","foreignField":"Account_no","as":"A_data"}},{"$match":{"A_data.Account_no":{"$regex":/^/}}},{"$project":{"_id":0,"Name":1}}])
[
  { Name: 'Raj Anand Singh' },
  { Name: 'Ankita Singh' },
  { Name: 'Pranav Praveen' },
  { Name: 'Stuti Misra' },
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Cust_no","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Cust_no":"$_id","No_of_Accounts":1}}])
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Cust_no","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Cust_no":"$_id","No_of_Accounts":1}}])
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"AcBank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Cust_no","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Cust_no":"$_id","No_of_Accounts":1}}])
[
  { No_of_Accounts: 3, Cust_data: { Cust_no: [ 'C0006' ] } },
  { No_of_Accounts: 2, Cust_data: { Cust_no: [ 'C0004' ] } }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Cust_no","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_no":"$Cust_data.Cust_no","No_of_Accounts":1}}])
[ { No_of_Accounts: 2 }, { No_of_Accounts: 3 } ]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Cust_no","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_no":"$_id..Cust_no","No_of_Accounts":1}}])
MongoServerError: Invalid $project :: caused by :: FieldPath field names may not be empty strings.
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Cust_no","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_no":"$_id.Cust_no","No_of_Accounts":1}}])
[
  { No_of_Accounts: 2, Cust_no: [] },
  { No_of_Accounts: 3, Cust_no: [] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Cust_no","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"CUST_NO":"$_id.Cust_no","No_of_Accounts":1}}])
[
  { No_of_Accounts: 2, CUST_NO: [] },
  { No_of_Accounts: 3, CUST_NO: [] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Cust_no","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"CUST_NO":"$_id.Cust_no","No_of_Accounts":1}}])
[
  { No_of_Accounts: 2, CUST_NO: [] },
  { No_of_Accounts: 3, CUST_NO: [] }
]
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$_id","No_of_Accounts":
... 1}}])
Bank4> db.DEPOSITOR.aggregate([{"$lookup":{"from":"ACCOUNT","localField":"Account_no","foreignField":"Account_no","as":"Acc_data"}},{"$lookup":{"from":"CUSTOMER","localField":"Cust_no","foreignField":"Cust_no","as":"Cust_data"}},{"$group":{"_id":"$Cust_data.Name","No_of_Accounts":{"$count":{}}}},{"$match":{"No_of_Accounts":{"$gt":1}}},{"$project":{"_id":0,"Cust_data.Name":"$_id","No_of_Accounts":1}}])
[
  { No_of_Accounts: 3, Cust_data: { Name: [ 'Swaroop Ray' ] } },
  { No_of_Accounts: 2, Cust_data: { Name: [ 'Abhijit Mishra' ] } }
]
Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"A"}},{"$group":{"_id":"$A.Branch_code","Avg_account_balance":{"$avg":"$Balance"}}},{"$match":{"Avg_account_balance":{"$gt":60000}}},{"$project":{"_id":0,"Branch_code":1,"Avg_account_balance":1}}])
[
  { Avg_account_balance: 328000 },
  { Avg_account_balance: 109375 },
  { Avg_account_balance: 289250 }
]
Bank4> db.ACCOUNT.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"A"}},{"$group":{"_id":"$A.Branch_code","Avg_account_balance":{"$avg":"$Balance"}}},{"$match":{"Avg_account_balance":{"$gt":60000}}},{"$project":{"_id":0,"Branch_code":"$_id","Avg_account_balance":1}}])
[
  { Avg_account_balance: 328000, Branch_code: [ 'B004' ] },
  { Avg_account_balance: 109375, Branch_code: [ 'B003' ] },
  { Avg_account_balance: 289250, Branch_code: [ 'B005' ] }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$project":{"_id":0,"L.Branch_code","L.Branch_name":1,"L.Branch_city":1}}])
Uncaught:
SyntaxError: Unexpected token (1:150)

> 1 | db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$project":{"_id":0,"L.Branch_code","L.Branch_name":1,"L.Branch_city":1}}])
    |
                       ^
  2 |

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$project":{"_id":0,"L.Branch_code":1,"L.Branch_name":1,"L.Branch_city":1}}])
[
  {
    L: [
      {
        Branch_code: 'B006',
        Branch_name: 'Srirampuram Branch',
        Branch_city: 'Chennai'
      }
    ]
  },
  {
    L: [
      {
        Branch_code: 'B005',
        Branch_name: 'Saltlake Branch',
        Branch_city: 'Kolkata'
      }
    ]
  },
  {
    L: [
      {
        Branch_code: 'B004',
        Branch_name: 'Andheri Branch',
        Branch_city: 'Mumbai'
      }
    ]
  },
  {
    L: [
      {
        Branch_code: 'B004',
        Branch_name: 'Andheri Branch',
        Branch_city: 'Mumbai'
      }
    ]
  },
  {
    L: [
      {
        Branch_code: 'B005',
        Branch_name: 'Saltlake Branch',
        Branch_city: 'Kolkata'
      }
    ]
  },
  {
    L: [
      {
        Branch_code: 'B006',
        Branch_name: 'Srirampuram Branch',
        Branch_city: 'Chennai'
      }
    ]
  }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code","L.Branch_name":1,"L.Branch_city":1}}])
Uncaught:
SyntaxError: Unexpected token (1:185)

> 1 | db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code","L.Branch_name":1,"L.Branch_city":1}}])
    |
                                                          ^
  2 |

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code":1,"L.Branch_name":1,"L.Branch_city":1}}])
[ {} ]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code","L.Branch_name":1,"L.Branch_city":1}}])
Uncaught:
SyntaxError: Unexpected token (1:185)

> 1 | db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code","L.Branch_name":1,"L.Branch_city":1}}])
    |
                                                          ^
  2 |

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"$L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code":1,"L.Branch_name":1,"L.Branch_city":1}}])
[ {}, {}, {} ]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"$L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code":"$_id","L.Branch_name":1,"L.Branch_city":1}}])
[
  { L: { Branch_code: [ 'B005' ] } },
  { L: { Branch_code: [ 'B004' ] } },
  { L: { Branch_code: [ 'B006' ] } }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"$L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code":"$_id.Branch_code","L.Branch_name":1,"L.Branch_city":1}}])
[
  { L: { Branch_code: [] } },
  { L: { Branch_code: [] } },
  { L: { Branch_code: [] } }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"$L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code":"$_id.Branch_code","L.Branch_name":"$_id.Branch_name","L.Branch_city":1}}])
[
  { L: { Branch_code: [], Branch_name: [] } },
  { L: { Branch_code: [], Branch_name: [] } },
  { L: { Branch_code: [], Branch_name: [] } }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"$L.Branch_code"}},{"$project":{"_id":0,"L.Branch_code":"$_id","L.Branch_name":"$_id","L.Branch_city":1}}])
[
  { L: { Branch_code: [ 'B006' ], Branch_name: [ 'B006' ] } },
  { L: { Branch_code: [ 'B005' ], Branch_name: [ 'B005' ] } },
  { L: { Branch_code: [ 'B004' ], Branch_name: [ 'B004' ] } }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":{"Branch_code":"$L.Branch_code","Branch_name":"$L.Branch_name","Branch_city":"$L.Branch_city"}}},{"$project":{"_id":0,"L.Branch_code":"$_id","L.Branch_name":"$_id","L.Branch_city":1}}])
[
  {
    L: {
      Branch_code: {
        Branch_code: [ 'B004' ],
        Branch_name: [ 'Andheri Branch' ],
        Branch_city: [ 'Mumbai' ]
      },
      Branch_name: {
        Branch_code: [ 'B004' ],
        Branch_name: [ 'Andheri Branch' ],
        Branch_city: [ 'Mumbai' ]
      }
    }
  },
  {
    L: {
      Branch_code: {
        Branch_code: [ 'B006' ],
        Branch_name: [ 'Srirampuram Branch' ],
        Branch_city: [ 'Chennai' ]
      },
      Branch_name: {
        Branch_code: [ 'B006' ],
        Branch_name: [ 'Srirampuram Branch' ],
        Branch_city: [ 'Chennai' ]
      }
    }
  },
  {
    L: {
      Branch_code: {
        Branch_code: [ 'B005' ],
        Branch_name: [ 'Saltlake Branch' ],
        Branch_city: [ 'Kolkata' ]
      },
      Branch_name: {
        Branch_code: [ 'B005' ],
        Branch_name: [ 'Saltlake Branch' ],
        Branch_city: [ 'Kolkata' ]
      }
    }
  }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":{"Branch_code":"$L.Branch_code"}}},{"$project":{"_id":"$_id","L.Branch_name":1,"L.Branch_city":1}}])
[
  { _id: { Branch_code: [ 'B006' ] } },
  { _id: { Branch_code: [ 'B005' ] } },
  { _id: { Branch_code: [ 'B004' ] } }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"$L.Branch_code"}},{"$project":{"_id":"$_id","L.Branch_name":1,"L.Branch_city":1}}])
[ { _id: [ 'B006' ] }, { _id: [ 'B005' ] }, { _id: [ 'B004' ] } ]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"BRANCH","localField":"Branch_code","foreignField":"Branch_code","as":"L"}},{"$group":{"_id":"$L.Branch_code"}},{"$project":{"_id":"$_id","L.Branch_name":"$L.Branch_name","L.Branch_city":1}}])
[
  { _id: [ 'B006' ], L: {} },
  { _id: [ 'B005' ], L: {} },
  { _id: [ 'B004' ], L: {} }
]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I.Inst_no":{"$size":0}}},{"$project":{"_id":0,"L.Loan_no":1,"Cust_no":1,"Amount":1,"Branch_code":1}}])

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I.Inst_no":{"$size":0}}},{"$project":{"_id":0,"L.Loan_no":1,"Cust_no":1,"Amount":1,"Branch_code":1}}])

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I.Inst_no":{"$size":0}}},{"$project":{"_id":0,"Loan_no":1,"Cust_no":1,"Amount":1,"Branch_code":1}}])

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I.Inst_no":{"$size":0}}},{"$project":{"_id":0,"I.Loan_no":1,"I.Cust_no":1,"I.Amount":1,"I.Branch_code":1}}])

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I.Inst_no":{"$size":0}}},{"$project":{"_id":0,"I.Loan_no":1}}])

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I":{"$size":0}}},{"$project":{"_id":0,"I.Loan_no":1,"I.Cust_no":1,"I.Amount":1,"I.Branch_code":1}}])\
Uncaught:
SyntaxError: Expecting Unicode escape sequence \uXXXX. (1:222)

> 1 | db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I":{"$size":0}}},{"$project":{"_id":0,"I.Loan_no":1,"I.Cust_no":1,"I.Amount":1,"I.Branch_code":1}}])\
    |
                                                          ^
  2 |

Bank4> db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I":{"$size":0}}},{"$project":{"_id":0,"I.Loan_no":1,"I.Cust_no":1,"I.Amount":1,"I.Branch_code":1}}])
[ { I: [] } ]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I":{"$size":0}}},{"$project":{"_id":0,"I.Loan_no":1,"Cust_no":1,"Amount":1,"Branch_code":1}}])
[ { Cust_no: 'C0005', Amount: 3000000, Branch_code: 'B006', I: [] } ]
Bank4> db.LOAN.aggregate([{"$lookup":{"from":"INSTALLMENT","localField":"Loan_no","foreignField":"Loan_no","as":"I"}},{$match:{"I":{"$size":0}}},{"$project":{"_id":0,"Loan_no":1,"Cust_no":1,"Amount":1,"Branch_code":1}}])
[
  {
    Loan_no: 'L0001',
    Cust_no: 'C0005',
    Amount: 3000000,
    Branch_code: 'B006'
  }
]
Bank4>
